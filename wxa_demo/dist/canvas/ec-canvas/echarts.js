!(function (t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? e(exports) : typeof define === 'function' && define.amd ? define(['exports'], e) : e(t.echarts = {}) }(this, function (t) {
  function e(t) {
    const e = {}; const n = {}; const i = t.match(/Firefox\/([\d.]+)/); const r = t.match(/MSIE\s([\d.]+)/) || t.match(/Trident\/.+?rv:(([\d.]+))/); const a = t.match(/Edge\/([\d.]+)/); const o = /micromessenger/i.test(t); return i && (n.firefox = !0, n.version = i[1]), r && (n.ie = !0, n.version = r[1]), a && (n.edge = !0, n.version = a[1]), o && (n.weChat = !0), {
      browser: n, os: e, node: !1, canvasSupported: !!document.createElement('canvas').getContext, svgSupported: typeof SVGRect !== 'undefined', touchEventsSupported: 'ontouchstart' in window && !n.ie && !n.edge, pointerEventsSupported: 'onpointerdown' in window && (n.edge || n.ie && n.version >= 11), domSupported: typeof document !== 'undefined'
    }
  } function n(t, e) { t === 'createCanvas' && (Jf = null), $f[t] = e } function i(t) { if (t == null || typeof t !== 'object') return t; let e = t; const n = Xf.call(t); if (n === '[object Array]') { if (!z(t)) { e = []; for (var r = 0, a = t.length; a > r; r++)e[r] = i(t[r]) } } else if (Wf[n]) { if (!z(t)) { const o = t.constructor; if (t.constructor.from)e = o.from(t); else { e = new o(t.length); for (var r = 0, a = t.length; a > r; r++)e[r] = i(t[r]) } } } else if (!Gf[n] && !z(t) && !T(t)) { e = {}; for (const s in t)t.hasOwnProperty(s) && (e[s] = i(t[s])) } return e } function r(t, e, n) { if (!S(e) || !S(t)) return n ? i(e) : t; for (const a in e) if (e.hasOwnProperty(a)) { const o = t[a]; const s = e[a]; !S(s) || !S(o) || x(s) || x(o) || T(s) || T(o) || M(s) || M(o) || z(s) || z(o) ? !n && a in t || (t[a] = i(e[a], !0)) : r(o, s, n) } return t } function a(t, e) { for (var n = t[0], i = 1, a = t.length; a > i; i++)n = r(n, t[i], e); return n } function o(t, e) { for (const n in e)e.hasOwnProperty(n) && (t[n] = e[n]); return t } function s(t, e, n) { for (const i in e)e.hasOwnProperty(i) && (n ? e[i] != null : t[i] == null) && (t[i] = e[i]); return t } function l() { return Jf || (Jf = Qf().getContext('2d')), Jf } function u(t, e) { if (t) { if (t.indexOf) return t.indexOf(e); for (let n = 0, i = t.length; i > n; n++) if (t[n] === e) return n } return -1 } function h(t, e) { function n() {} const i = t.prototype; n.prototype = e.prototype, t.prototype = new n(); for (const r in i)i.hasOwnProperty(r) && (t.prototype[r] = i[r]); t.prototype.constructor = t, t.superClass = e } function c(t, e, n) { t = 'prototype' in t ? t.prototype : t, e = 'prototype' in e ? e.prototype : e, s(t, e, n) } function d(t) { return t ? typeof t === 'string' ? !1 : typeof t.length === 'number' : void 0 } function f(t, e, n) { if (t && e) if (t.forEach && t.forEach === Uf)t.forEach(e, n); else if (t.length === +t.length) for (let i = 0, r = t.length; r > i; i++)e.call(n, t[i], i, t); else for (const a in t)t.hasOwnProperty(a) && e.call(n, t[a], a, t) } function p(t, e, n) { if (t && e) { if (t.map && t.map === Zf) return t.map(e, n); for (var i = [], r = 0, a = t.length; a > r; r++)i.push(e.call(n, t[r], r, t)); return i } } function g(t, e, n, i) { if (t && e) { if (t.reduce && t.reduce === Kf) return t.reduce(e, n, i); for (let r = 0, a = t.length; a > r; r++)n = e.call(i, n, t[r], r, t); return n } } function v(t, e, n) { if (t && e) { if (t.filter && t.filter === qf) return t.filter(e, n); for (var i = [], r = 0, a = t.length; a > r; r++)e.call(n, t[r], r, t) && i.push(t[r]); return i } } function m(t, e, n) { if (t && e) for (let i = 0, r = t.length; r > i; i++) if (e.call(n, t[i], i, t)) return t[i] } function y(t, e) { const n = jf.call(arguments, 2); return function () { return t.apply(e, n.concat(jf.call(arguments))) } } function _(t) { const e = jf.call(arguments, 1); return function () { return t.apply(this, e.concat(jf.call(arguments))) } } function x(t) { return Xf.call(t) === '[object Array]' } function w(t) { return typeof t === 'function' } function b(t) { return Xf.call(t) === '[object String]' } function S(t) { const e = typeof t; return e === 'function' || !!t && e === 'object' } function M(t) { return !!Gf[Xf.call(t)] } function I(t) { return !!Wf[Xf.call(t)] } function T(t) { return typeof t === 'object' && typeof t.nodeType === 'number' && typeof t.ownerDocument === 'object' } function C(t) { return t !== t } function D() { for (let t = 0, e = arguments.length; e > t; t++) if (arguments[t] != null) return arguments[t] } function A(t, e) { return t != null ? t : e } function k(t, e, n) { return t != null ? t : e != null ? e : n } function P() { return Function.call.apply(jf, arguments) } function L(t) { if (typeof t === 'number') return [t, t, t, t]; const e = t.length; return e === 2 ? [t[0], t[1], t[0], t[1]] : e === 3 ? [t[0], t[1], t[2], t[1]] : t } function O(t, e) { if (!t) throw new Error(e) } function B(t) { return t == null ? null : typeof t.trim === 'function' ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '') } function E(t) { t[tp] = !0 } function z(t) { return t[tp] } function R(t) { function e(t, e) { n ? i.set(t, e) : i.set(e, t) } var n = x(t); this.data = {}; var i = this; t instanceof R ? t.each(e) : t && f(t, e) } function N(t) { return new R(t) } function F(t, e) { for (var n = new t.constructor(t.length + e.length), i = 0; i < t.length; i++)n[i] = t[i]; const r = t.length; for (i = 0; i < e.length; i++)n[i + r] = e[i]; return n } function V() {} function H(t, e) { const n = new np(2); return t == null && (t = 0), e == null && (e = 0), n[0] = t, n[1] = e, n } function G(t, e) { return t[0] = e[0], t[1] = e[1], t } function W(t) { const e = new np(2); return e[0] = t[0], e[1] = t[1], e } function X(t, e, n) { return t[0] = e, t[1] = n, t } function Y(t, e, n) { return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t } function U(t, e, n, i) { return t[0] = e[0] + n[0] * i, t[1] = e[1] + n[1] * i, t } function q(t, e, n) { return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t } function j(t) { return Math.sqrt(Z(t)) } function Z(t) { return t[0] * t[0] + t[1] * t[1] } function K(t, e, n) { return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t } function $(t, e, n) { return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t } function Q(t, e) { return t[0] * e[0] + t[1] * e[1] } function J(t, e, n) { return t[0] = e[0] * n, t[1] = e[1] * n, t } function te(t, e) { const n = j(e); return n === 0 ? (t[0] = 0, t[1] = 0) : (t[0] = e[0] / n, t[1] = e[1] / n), t } function ee(t, e) { return Math.sqrt((t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1])) } function ne(t, e) { return (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]) } function ie(t, e) { return t[0] = -e[0], t[1] = -e[1], t } function re(t, e, n, i) { return t[0] = e[0] + i * (n[0] - e[0]), t[1] = e[1] + i * (n[1] - e[1]), t } function ae(t, e, n) { const i = e[0]; const r = e[1]; return t[0] = n[0] * i + n[2] * r + n[4], t[1] = n[1] * i + n[3] * r + n[5], t } function oe(t, e, n) { return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t } function se(t, e, n) { return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t } function le() { this.on('mousedown', this._dragStart, this), this.on('mousemove', this._drag, this), this.on('mouseup', this._dragEnd, this) } function ue(t, e) { return {target: t, topTarget: e && e.topTarget} } function he(t, e) { const n = t._$eventProcessor; return e != null && n && n.normalizeQuery && (e = n.normalizeQuery(e)), e } function ce(t, e, n, i, r, a) {
    const o = t._$handlers; if (typeof n === 'function' && (r = i, i = n, n = null), !i || !e) return t; n = he(t, n), o[e] || (o[e] = []); for (let s = 0; s < o[e].length; s++) if (o[e][s].h === i) return t; const l = {
      h: i, one: a, query: n, ctx: r || t, callAtLast: i.zrEventfulCallAtLast
    }; const u = o[e].length - 1; const h = o[e][u]; return h && h.callAtLast ? o[e].splice(u, 0, l) : o[e].push(l), t
  } function de(t, e, n, i, r, a) { const o = `${i}-${r}`; const s = t.length; if (a.hasOwnProperty(o)) return a[o]; if (e === 1) { const l = Math.round(Math.log((1 << s) - 1 & ~r) / hp); return t[n][l] } for (var u = i | 1 << n, h = n + 1; i & 1 << h;)h++; for (var c = 0, d = 0, f = 0; s > d; d++) { const p = 1 << d; p & r || (c += (f % 2 ? -1 : 1) * t[n][d] * de(t, e - 1, h, u, r | p, a), f++) } return a[o] = c, c } function fe(t, e) { const n = [[t[0], t[1], 1, 0, 0, 0, -e[0] * t[0], -e[0] * t[1]], [0, 0, 0, t[0], t[1], 1, -e[1] * t[0], -e[1] * t[1]], [t[2], t[3], 1, 0, 0, 0, -e[2] * t[2], -e[2] * t[3]], [0, 0, 0, t[2], t[3], 1, -e[3] * t[2], -e[3] * t[3]], [t[4], t[5], 1, 0, 0, 0, -e[4] * t[4], -e[4] * t[5]], [0, 0, 0, t[4], t[5], 1, -e[5] * t[4], -e[5] * t[5]], [t[6], t[7], 1, 0, 0, 0, -e[6] * t[6], -e[6] * t[7]], [0, 0, 0, t[6], t[7], 1, -e[7] * t[6], -e[7] * t[7]]]; const i = {}; const r = de(n, 8, 0, 0, 0, i); if (r !== 0) { for (var a = [], o = 0; o < 8; o++) for (let s = 0; s < 8; s++)a[s] == null && (a[s] = 0), a[s] += ((o + s) % 2 ? -1 : 1) * de(n, 7, o === 0 ? 1 : 0, 1 << o, 1 << s, i) / r * e[o]; return function (t, e, n) { const i = e * a[6] + n * a[7] + 1; t[0] = (e * a[0] + n * a[1] + a[2]) / i, t[1] = (e * a[3] + n * a[4] + a[5]) / i } } } function pe(t, e, n, i) { return n = n || {}, i || !Hf.canvasSupported ? ge(t, e, n) : Hf.browser.firefox && e.layerX != null && e.layerX !== e.offsetX ? (n.zrX = e.layerX, n.zrY = e.layerY) : e.offsetX != null ? (n.zrX = e.offsetX, n.zrY = e.offsetY) : ge(t, e, n), n } function ge(t, e, n) { if (t.getBoundingClientRect && Hf.domSupported) { const i = e.clientX; const r = e.clientY; if (t.nodeName.toUpperCase() === 'CANVAS') { const a = t.getBoundingClientRect(); return n.zrX = i - a.left, void (n.zrY = r - a.top) } const o = t[fp] || (t[fp] = {}); const s = me(ve(t, o), o); if (s) return s(pp, i, r), n.zrX = pp[0], void (n.zrY = pp[1]) }n.zrX = n.zrY = 0 } function ve(t, e) { let n = e.markers; if (n) return n; n = e.markers = []; for (let i = ['left', 'right'], r = ['top', 'bottom'], a = 0; a < 4; a++) { const o = document.createElement('div'); const s = o.style; const l = a % 2; const u = (a >> 1) % 2; s.cssText = ['position:absolute', 'visibility: hidden', 'padding: 0', 'margin: 0', 'border-width: 0', 'width:0', 'height:0', `${i[l]}:0`, `${r[u]}:0`, `${i[1 - l]}:auto`, `${r[1 - u]}:auto`, ''].join('!important;'), t.appendChild(o), n.push(o) } return n } function me(t, e) { for (var n = e.transformer, i = e.srcCoords, r = !0, a = [], o = [], s = 0; s < 4; s++) { const l = t[s].getBoundingClientRect(); const u = 2 * s; const h = l.left; const c = l.top; a.push(h, c), r &= i && h === i[u] && c === i[u + 1], o.push(t[s].offsetLeft, t[s].offsetTop) } return r ? n : (e.srcCoords = a, e.transformer = fe(a, o)) } function ye(t) { return t || window.event } function _e(t, e, n) { if (e = ye(e), e.zrX != null) return e; const i = e.type; const r = i && i.indexOf('touch') >= 0; if (r) { const a = i !== 'touchend' ? e.targetTouches[0] : e.changedTouches[0]; a && pe(t, a, e, n) } else pe(t, e, e, n), e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3; const o = e.button; return e.which == null && void 0 !== o && dp.test(e.type) && (e.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0), e } function xe(t, e, n, i) { cp ? t.addEventListener(e, n, i) : t.attachEvent(`on${e}`, n) } function we(t, e, n, i) { cp ? t.removeEventListener(e, n, i) : t.detachEvent(`on${e}`, n) } function be(t) { const e = t[1][0] - t[0][0]; const n = t[1][1] - t[0][1]; return Math.sqrt(e * e + n * n) } function Se(t) { return [(t[0][0] + t[1][0]) / 2, (t[0][1] + t[1][1]) / 2] } function Me(t, e, n) {
    return {
      type: t, event: n, target: e.target, topTarget: e.topTarget, cancelBubble: !1, offsetX: n.zrX, offsetY: n.zrY, gestureEvent: n.gestureEvent, pinchX: n.pinchX, pinchY: n.pinchY, pinchScale: n.pinchScale, wheelDelta: n.zrDelta, zrByTouch: n.zrByTouch, which: n.which, stop: Ie
    }
  } function Ie() { gp(this.event) } function Te() {} function Ce(t, e, n) { if (t[t.rectHover ? 'rectContain' : 'contain'](e, n)) { for (var i, r = t; r;) { if (r.clipPath && !r.clipPath.contain(e, n)) return !1; r.silent && (i = !0), r = r.parent } return i ? yp : !0 } return !1 } function De(t, e, n) { const i = t.painter; return e < 0 || e > i.getWidth() || n < 0 || n > i.getHeight() } function Ae() { const t = new wp(6); return ke(t), t } function ke(t) { return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t } function Pe(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t } function Le(t, e, n) { const i = e[0] * n[0] + e[2] * n[1]; const r = e[1] * n[0] + e[3] * n[1]; const a = e[0] * n[2] + e[2] * n[3]; const o = e[1] * n[2] + e[3] * n[3]; const s = e[0] * n[4] + e[2] * n[5] + e[4]; const l = e[1] * n[4] + e[3] * n[5] + e[5]; return t[0] = i, t[1] = r, t[2] = a, t[3] = o, t[4] = s, t[5] = l, t } function Oe(t, e, n) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4] + n[0], t[5] = e[5] + n[1], t } function Be(t, e, n) { const i = e[0]; const r = e[2]; const a = e[4]; const o = e[1]; const s = e[3]; const l = e[5]; const u = Math.sin(n); const h = Math.cos(n); return t[0] = i * h + o * u, t[1] = -i * u + o * h, t[2] = r * h + s * u, t[3] = -r * u + h * s, t[4] = h * a + u * l, t[5] = h * l - u * a, t } function Ee(t, e, n) { const i = n[0]; const r = n[1]; return t[0] = e[0] * i, t[1] = e[1] * r, t[2] = e[2] * i, t[3] = e[3] * r, t[4] = e[4] * i, t[5] = e[5] * r, t } function ze(t, e) { const n = e[0]; const i = e[2]; const r = e[4]; const a = e[1]; const o = e[3]; const s = e[5]; let l = n * o - a * i; return l ? (l = 1 / l, t[0] = o * l, t[1] = -a * l, t[2] = -i * l, t[3] = n * l, t[4] = (i * s - o * r) * l, t[5] = (a * r - n * s) * l, t) : null } function Re(t) { const e = Ae(); return Pe(e, t), e } function Ne(t) { return t > Mp || -Mp > t } function Fe(t) { this._target = t.target, this._life = t.life || 1e3, this._delay = t.delay || 0, this._initialized = !1, this.loop = t.loop == null ? !1 : t.loop, this.gap = t.gap || 0, this.easing = t.easing || 'Linear', this.onframe = t.onframe, this.ondestroy = t.ondestroy, this.onrestart = t.onrestart, this._pausedTime = 0, this._paused = !1 } function Ve(t) { return t = Math.round(t), t < 0 ? 0 : t > 255 ? 255 : t } function He(t) { return t = Math.round(t), t < 0 ? 0 : t > 360 ? 360 : t } function Ge(t) { return t < 0 ? 0 : t > 1 ? 1 : t } function We(t) { return Ve(t.length && t.charAt(t.length - 1) === '%' ? parseFloat(t) / 100 * 255 : parseInt(t, 10)) } function Xe(t) { return Ge(t.length && t.charAt(t.length - 1) === '%' ? parseFloat(t) / 100 : parseFloat(t)) } function Ye(t, e, n) { return n < 0 ? n += 1 : n > 1 && (n -= 1), 6 * n < 1 ? t + (e - t) * n * 6 : 2 * n < 1 ? e : 3 * n < 2 ? t + (e - t) * (2 / 3 - n) * 6 : t } function Ue(t, e, n) { return t + (e - t) * n } function qe(t, e, n, i, r) { return t[0] = e, t[1] = n, t[2] = i, t[3] = r, t } function je(t, e) { return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t } function Ze(t, e) { Np && je(Np, e), Np = Rp.put(t, Np || e.slice()) } function Ke(t, e) { if (t) { e = e || []; const n = Rp.get(t); if (n) return je(e, n); t += ''; const i = t.replace(/ /g, '').toLowerCase(); if (i in zp) return je(e, zp[i]), Ze(t, e), e; if (i.charAt(0) !== '#') { const r = i.indexOf('('); const a = i.indexOf(')'); if (r !== -1 && a + 1 === i.length) { const o = i.substr(0, r); const s = i.substr(r + 1, a - (r + 1)).split(','); let l = 1; switch (o) { case 'rgba': if (s.length !== 4) return void qe(e, 0, 0, 0, 1); l = Xe(s.pop()); case 'rgb': return s.length !== 3 ? void qe(e, 0, 0, 0, 1) : (qe(e, We(s[0]), We(s[1]), We(s[2]), l), Ze(t, e), e); case 'hsla': return s.length !== 4 ? void qe(e, 0, 0, 0, 1) : (s[3] = Xe(s[3]), $e(s, e), Ze(t, e), e); case 'hsl': return s.length !== 3 ? void qe(e, 0, 0, 0, 1) : ($e(s, e), Ze(t, e), e); default: return } }qe(e, 0, 0, 0, 1) } else { if (i.length === 4) { var u = parseInt(i.substr(1), 16); return u >= 0 && u <= 4095 ? (qe(e, (3840 & u) >> 4 | (3840 & u) >> 8, 240 & u | (240 & u) >> 4, 15 & u | (15 & u) << 4, 1), Ze(t, e), e) : void qe(e, 0, 0, 0, 1) } if (i.length === 7) { var u = parseInt(i.substr(1), 16); return u >= 0 && u <= 16777215 ? (qe(e, (16711680 & u) >> 16, (65280 & u) >> 8, 255 & u, 1), Ze(t, e), e) : void qe(e, 0, 0, 0, 1) } } } } function $e(t, e) { const n = (parseFloat(t[0]) % 360 + 360) % 360 / 360; const i = Xe(t[1]); const r = Xe(t[2]); const a = r <= 0.5 ? r * (i + 1) : r + i - r * i; const o = 2 * r - a; return e = e || [], qe(e, Ve(255 * Ye(o, a, n + 1 / 3)), Ve(255 * Ye(o, a, n)), Ve(255 * Ye(o, a, n - 1 / 3)), 1), t.length === 4 && (e[3] = t[3]), e } function Qe(t) { if (t) { let e; let n; const i = t[0] / 255; const r = t[1] / 255; const a = t[2] / 255; const o = Math.min(i, r, a); const s = Math.max(i, r, a); const l = s - o; const u = (s + o) / 2; if (l === 0)e = 0, n = 0; else { n = u < 0.5 ? l / (s + o) : l / (2 - s - o); const h = ((s - i) / 6 + l / 2) / l; const c = ((s - r) / 6 + l / 2) / l; const d = ((s - a) / 6 + l / 2) / l; i === s ? e = d - c : r === s ? e = 1 / 3 + h - d : a === s && (e = 2 / 3 + c - h), e < 0 && (e += 1), e > 1 && (e -= 1) } const f = [360 * e, n, u]; return t[3] != null && f.push(t[3]), f } } function Je(t, e) { const n = Ke(t); if (n) { for (let i = 0; i < 3; i++)n[i] = e < 0 ? n[i] * (1 - e) | 0 : (255 - n[i]) * e + n[i] | 0, n[i] > 255 ? n[i] = 255 : t[i] < 0 && (n[i] = 0); return on(n, n.length === 4 ? 'rgba' : 'rgb') } } function tn(t) { const e = Ke(t); return e ? ((1 << 24) + (e[0] << 16) + (e[1] << 8) + +e[2]).toString(16).slice(1) : void 0 } function en(t, e, n) { if (e && e.length && t >= 0 && t <= 1) { n = n || []; const i = t * (e.length - 1); const r = Math.floor(i); const a = Math.ceil(i); const o = e[r]; const s = e[a]; const l = i - r; return n[0] = Ve(Ue(o[0], s[0], l)), n[1] = Ve(Ue(o[1], s[1], l)), n[2] = Ve(Ue(o[2], s[2], l)), n[3] = Ge(Ue(o[3], s[3], l)), n } } function nn(t, e, n) {
    if (e && e.length && t >= 0 && t <= 1) {
      const i = t * (e.length - 1); const r = Math.floor(i); const a = Math.ceil(i); const o = Ke(e[r]); const s = Ke(e[a]); const l = i - r; const u = on([Ve(Ue(o[0], s[0], l)), Ve(Ue(o[1], s[1], l)), Ve(Ue(o[2], s[2], l)), Ge(Ue(o[3], s[3], l))], 'rgba'); return n ? {
        color: u, leftIndex: r, rightIndex: a, value: i
      } : u
    }
  } function rn(t, e, n, i) { return t = Ke(t), t ? (t = Qe(t), e != null && (t[0] = He(e)), n != null && (t[1] = Xe(n)), i != null && (t[2] = Xe(i)), on($e(t), 'rgba')) : void 0 } function an(t, e) { return t = Ke(t), t && e != null ? (t[3] = Ge(e), on(t, 'rgba')) : void 0 } function on(t, e) { if (t && t.length) { let n = `${t[0]},${t[1]},${t[2]}`; return (e === 'rgba' || e === 'hsva' || e === 'hsla') && (n += `,${t[3]}`), `${e}(${n})` } } function sn(t, e) { return t[e] } function ln(t, e, n) { t[e] = n } function un(t, e, n) { return (e - t) * n + t } function hn(t, e, n) { return n > 0.5 ? e : t } function cn(t, e, n, i, r) { const a = t.length; if (r === 1) for (var o = 0; a > o; o++)i[o] = un(t[o], e[o], n); else for (var s = a && t[0].length, o = 0; a > o; o++) for (let l = 0; s > l; l++)i[o][l] = un(t[o][l], e[o][l], n) } function dn(t, e, n) { const i = t.length; const r = e.length; if (i !== r) { const a = i > r; if (a)t.length = r; else for (var o = i; r > o; o++)t.push(n === 1 ? e[o] : Gp.call(e[o])) } for (var s = t[0] && t[0].length, o = 0; o < t.length; o++) if (n === 1)isNaN(t[o]) && (t[o] = e[o]); else for (let l = 0; s > l; l++)isNaN(t[o][l]) && (t[o][l] = e[o][l]) } function fn(t, e, n) { if (t === e) return !0; const i = t.length; if (i !== e.length) return !1; if (n === 1) { for (var r = 0; i > r; r++) if (t[r] !== e[r]) return !1 } else for (var a = t[0].length, r = 0; i > r; r++) for (let o = 0; a > o; o++) if (t[r][o] !== e[r][o]) return !1; return !0 } function pn(t, e, n, i, r, a, o, s, l) { const u = t.length; if (l === 1) for (var h = 0; u > h; h++)s[h] = gn(t[h], e[h], n[h], i[h], r, a, o); else for (var c = t[0].length, h = 0; u > h; h++) for (let d = 0; c > d; d++)s[h][d] = gn(t[h][d], e[h][d], n[h][d], i[h][d], r, a, o) } function gn(t, e, n, i, r, a, o) { const s = 0.5 * (n - t); const l = 0.5 * (i - e); return (2 * (e - n) + s + l) * o + (-3 * (e - n) - 2 * s - l) * a + s * r + e } function vn(t) { if (d(t)) { const e = t.length; if (d(t[0])) { for (var n = [], i = 0; e > i; i++)n.push(Gp.call(t[i])); return n } return Gp.call(t) } return t } function mn(t) { return t[0] = Math.floor(t[0]), t[1] = Math.floor(t[1]), t[2] = Math.floor(t[2]), `rgba(${t.join(',')})` } function yn(t) { const e = t[t.length - 1].value; return d(e && e[0]) ? 2 : 1 } function _n(t, e, n, i, r, a) {
    const o = t._getter; const s = t._setter; const l = e === 'spline'; const u = i.length; if (u) {
      let h; const c = i[0].value; const f = d(c); let p = !1; let g = !1; const v = f ? yn(i) : 0; i.sort(function (t, e) { return t.time - e.time }), h = i[u - 1].time; for (var m = [], y = [], _ = i[0].value, x = !0, w = 0; u > w; w++) { m.push(i[w].time / h); let b = i[w].value; if (f && fn(b, _, v) || !f && b === _ || (x = !1), _ = b, typeof b === 'string') { const S = Ke(b); S ? (b = S, p = !0) : g = !0 }y.push(b) } if (a || !x) {
        for (var M = y[u - 1], w = 0; u - 1 > w; w++)f ? dn(y[w], M, v) : !isNaN(y[w]) || isNaN(M) || g || p || (y[w] = M); f && dn(o(t._target, r), M, v); let I; let T; let C; let D; let A; let k; let P = 0; let L = 0; if (p) var O = [0, 0, 0, 0]; const B = function (t, e) { let n; if (e < 0)n = 0; else if (L > e) { for (I = Math.min(P + 1, u - 1), n = I; n >= 0 && !(m[n] <= e); n--);n = Math.min(n, u - 2) } else { for (n = P; u > n && !(m[n] > e); n++);n = Math.min(n - 1, u - 2) }P = n, L = e; const i = m[n + 1] - m[n]; if (i !== 0) if (T = (e - m[n]) / i, l) if (D = y[n], C = y[n === 0 ? n : n - 1], A = y[n > u - 2 ? u - 1 : n + 1], k = y[n > u - 3 ? u - 1 : n + 2], f)pn(C, D, A, k, T, T * T, T * T * T, o(t, r), v); else { var a; if (p)a = pn(C, D, A, k, T, T * T, T * T * T, O, 1), a = mn(O); else { if (g) return hn(D, A, T); a = gn(C, D, A, k, T, T * T, T * T * T) }s(t, r, a) } else if (f)cn(y[n], y[n + 1], T, o(t, r), v); else { var a; if (p)cn(y[n], y[n + 1], T, O, 1), a = mn(O); else { if (g) return hn(y[n], y[n + 1], T); a = un(y[n], y[n + 1], T) }s(t, r, a) } }; const E = new Fe({
          target: t._target, life: h, loop: t._loop, delay: t._delay, onframe: B, ondestroy: n
        }); return e && e !== 'spline' && (E.easing = e), E
      }
    }
  } function xn(t, e, n, i, r, a, o, s) { function l() { h--, h || a && a() }b(i) ? (a = r, r = i, i = 0) : w(r) ? (a = r, r = 'linear', i = 0) : w(i) ? (a = i, i = 0) : w(n) ? (a = n, n = 500) : n || (n = 500), t.stopAnimation(), wn(t, '', t, e, n, i, s); const u = t.animators.slice(); var h = u.length; h || a && a(); for (let c = 0; c < u.length; c++)u[c].done(l).start(r, o) } function wn(t, e, n, i, r, a, o) { const s = {}; let l = 0; for (const u in i)i.hasOwnProperty(u) && (n[u] != null ? S(i[u]) && !d(i[u]) ? wn(t, e ? `${e}.${u}` : u, n[u], i[u], r, a, o) : (o ? (s[u] = n[u], bn(t, e, u, i[u])) : s[u] = i[u], l++) : i[u] == null || o || bn(t, e, u, i[u])); l > 0 && t.animate(e, !1).when(r == null ? 500 : r, s).delay(a || 0) } function bn(t, e, n, i) { if (e) { const r = {}; r[e] = {}, r[e][n] = i, t.attr(r) } else t.attr(n, i) } function Sn(t, e, n, i) { n < 0 && (t += n, n = -n), i < 0 && (e += i, i = -i), this.x = t, this.y = e, this.width = n, this.height = i } function Mn(t) { for (var e = 0; t >= eg;)e |= 1 & t, t >>= 1; return t + e } function In(t, e, n, i) { let r = e + 1; if (r === n) return 1; if (i(t[r++], t[e]) < 0) { for (;n > r && i(t[r], t[r - 1]) < 0;)r++; Tn(t, e, r) } else for (;n > r && i(t[r], t[r - 1]) >= 0;)r++; return r - e } function Tn(t, e, n) { for (n--; n > e;) { const i = t[e]; t[e++] = t[n], t[n--] = i } } function Cn(t, e, n, i, r) { for (i === e && i++; n > i; i++) { for (var a, o = t[i], s = e, l = i; l > s;)a = s + l >>> 1, r(o, t[a]) < 0 ? l = a : s = a + 1; let u = i - s; switch (u) { case 3: t[s + 3] = t[s + 2]; case 2: t[s + 2] = t[s + 1]; case 1: t[s + 1] = t[s]; break; default: for (;u > 0;)t[s + u] = t[s + u - 1], u-- }t[s] = o } } function Dn(t, e, n, i, r, a) { let o = 0; let s = 0; let l = 1; if (a(t, e[n + r]) > 0) { for (s = i - r; s > l && a(t, e[n + r + l]) > 0;)o = l, l = (l << 1) + 1, l <= 0 && (l = s); l > s && (l = s), o += r, l += r } else { for (s = r + 1; s > l && a(t, e[n + r - l]) <= 0;)o = l, l = (l << 1) + 1, l <= 0 && (l = s); l > s && (l = s); const u = o; o = r - l, l = r - u } for (o++; l > o;) { const h = o + (l - o >>> 1); a(t, e[n + h]) > 0 ? o = h + 1 : l = h } return l } function An(t, e, n, i, r, a) { let o = 0; let s = 0; let l = 1; if (a(t, e[n + r]) < 0) { for (s = r + 1; s > l && a(t, e[n + r - l]) < 0;)o = l, l = (l << 1) + 1, l <= 0 && (l = s); l > s && (l = s); const u = o; o = r - l, l = r - u } else { for (s = i - r; s > l && a(t, e[n + r + l]) >= 0;)o = l, l = (l << 1) + 1, l <= 0 && (l = s); l > s && (l = s), o += r, l += r } for (o++; l > o;) { const h = o + (l - o >>> 1); a(t, e[n + h]) < 0 ? l = h : o = h + 1 } return l } function kn(t, e) { function n(t, e) { l[c] = t, u[c] = e, c += 1 } function i() { for (;c > 1;) { let t = c - 2; if (t >= 1 && u[t - 1] <= u[t] + u[t + 1] || t >= 2 && u[t - 2] <= u[t] + u[t - 1])u[t - 1] < u[t + 1] && t--; else if (u[t] > u[t + 1]) break; a(t) } } function r() { for (;c > 1;) { let t = c - 2; t > 0 && u[t - 1] < u[t + 1] && t--, a(t) } } function a(n) { let i = l[n]; let r = u[n]; const a = l[n + 1]; let h = u[n + 1]; u[n] = r + h, n === c - 3 && (l[n + 1] = l[n + 2], u[n + 1] = u[n + 2]), c--; const d = An(t[a], t, i, r, 0, e); i += d, r -= d, r !== 0 && (h = Dn(t[i + r - 1], t, a, h, h - 1, e), h !== 0 && (h >= r ? o(i, r, a, h) : s(i, r, a, h))) } function o(n, i, r, a) { let o = 0; for (o = 0; i > o; o++)d[o] = t[n + o]; let s = 0; let l = r; let u = n; if (t[u++] = t[l++], --a !== 0) { if (i === 1) { for (o = 0; a > o; o++)t[u + o] = t[l + o]; return void (t[u + a] = d[s]) } for (var c, f, p, g = h; ;) { c = 0, f = 0, p = !1; do if (e(t[l], d[s]) < 0) { if (t[u++] = t[l++], f++, c = 0, --a === 0) { p = !0; break } } else if (t[u++] = d[s++], c++, f = 0, --i === 1) { p = !0; break } while (g > (c | f)); if (p) break; do { if (c = An(t[l], d, s, i, 0, e), c !== 0) { for (o = 0; c > o; o++)t[u + o] = d[s + o]; if (u += c, s += c, i -= c, i <= 1) { p = !0; break } } if (t[u++] = t[l++], --a === 0) { p = !0; break } if (f = Dn(d[s], t, l, a, 0, e), f !== 0) { for (o = 0; f > o; o++)t[u + o] = t[l + o]; if (u += f, l += f, a -= f, a === 0) { p = !0; break } } if (t[u++] = d[s++], --i === 1) { p = !0; break }g-- } while (c >= ng || f >= ng); if (p) break; g < 0 && (g = 0), g += 2 } if (h = g, h < 1 && (h = 1), i === 1) { for (o = 0; a > o; o++)t[u + o] = t[l + o]; t[u + a] = d[s] } else { if (i === 0) throw new Error(); for (o = 0; i > o; o++)t[u + o] = d[s + o] } } else for (o = 0; i > o; o++)t[u + o] = d[s + o] } function s(n, i, r, a) { let o = 0; for (o = 0; a > o; o++)d[o] = t[r + o]; let s = n + i - 1; let l = a - 1; let u = r + a - 1; let c = 0; let f = 0; if (t[u--] = t[s--], --i !== 0) { if (a === 1) { for (u -= i, s -= i, f = u + 1, c = s + 1, o = i - 1; o >= 0; o--)t[f + o] = t[c + o]; return void (t[u] = d[l]) } for (var p = h; ;) { let g = 0; let v = 0; let m = !1; do if (e(d[l], t[s]) < 0) { if (t[u--] = t[s--], g++, v = 0, --i === 0) { m = !0; break } } else if (t[u--] = d[l--], v++, g = 0, --a === 1) { m = !0; break } while (p > (g | v)); if (m) break; do { if (g = i - An(d[l], t, n, i, i - 1, e), g !== 0) { for (u -= g, s -= g, i -= g, f = u + 1, c = s + 1, o = g - 1; o >= 0; o--)t[f + o] = t[c + o]; if (i === 0) { m = !0; break } } if (t[u--] = d[l--], --a === 1) { m = !0; break } if (v = a - Dn(t[s], d, 0, a, a - 1, e), v !== 0) { for (u -= v, l -= v, a -= v, f = u + 1, c = l + 1, o = 0; v > o; o++)t[f + o] = d[c + o]; if (a <= 1) { m = !0; break } } if (t[u--] = t[s--], --i === 0) { m = !0; break }p-- } while (g >= ng || v >= ng); if (m) break; p < 0 && (p = 0), p += 2 } if (h = p, h < 1 && (h = 1), a === 1) { for (u -= i, s -= i, f = u + 1, c = s + 1, o = i - 1; o >= 0; o--)t[f + o] = t[c + o]; t[u] = d[l] } else { if (a === 0) throw new Error(); for (c = u - (a - 1), o = 0; a > o; o++)t[c + o] = d[o] } } else for (c = u - (a - 1), o = 0; a > o; o++)t[c + o] = d[o] } let l; let u; var h = ng; var c = 0; var d = []; l = [], u = [], this.mergeRuns = i, this.forceMergeRuns = r, this.pushRun = n } function Pn(t, e, n, i) { n || (n = 0), i || (i = t.length); let r = i - n; if (!(r < 2)) { let a = 0; if (eg > r) return a = In(t, n, i, e), void Cn(t, n, i, n + a, e); const o = new kn(t, e); const s = Mn(r); do { if (a = In(t, n, i, e), s > a) { let l = r; l > s && (l = s), Cn(t, n, n + l, n + a, e), a = l }o.pushRun(n, a), o.mergeRuns(), r -= a, n += a } while (r !== 0); o.forceMergeRuns() } } function Ln(t, e) { return t.zlevel === e.zlevel ? t.z === e.z ? t.z2 - e.z2 : t.z - e.z : t.zlevel - e.zlevel } function On(t, e, n) { let i = e.x == null ? 0 : e.x; let r = e.x2 == null ? 1 : e.x2; let a = e.y == null ? 0 : e.y; let o = e.y2 == null ? 0 : e.y2; e.global || (i = i * n.width + n.x, r = r * n.width + n.x, a = a * n.height + n.y, o = o * n.height + n.y), i = isNaN(i) ? 0 : i, r = isNaN(r) ? 1 : r, a = isNaN(a) ? 0 : a, o = isNaN(o) ? 0 : o; const s = t.createLinearGradient(i, a, r, o); return s } function Bn(t, e, n) { const i = n.width; const r = n.height; const a = Math.min(i, r); let o = e.x == null ? 0.5 : e.x; let s = e.y == null ? 0.5 : e.y; let l = e.r == null ? 0.5 : e.r; e.global || (o = o * i + n.x, s = s * r + n.y, l *= a); const u = t.createRadialGradient(o, s, 0, o, s, l); return u } function En() { return !1 } function zn(t, e, n) { const i = Qf(); const r = e.getWidth(); const a = e.getHeight(); const o = i.style; return o && (o.position = 'absolute', o.left = 0, o.top = 0, o.width = `${r}px`, o.height = `${a}px`, i.setAttribute('data-zr-dom-id', t)), i.width = r * n, i.height = a * n, i } function Rn(t) { if (typeof t === 'string') { const e = vg.get(t); return e && e.image } return t } function Nn(t, e, n, i, r) { if (t) { if (typeof t === 'string') { if (e && e.__zrImageSrc === t || !n) return e; const a = vg.get(t); const o = {hostEl: n, cb: i, cbPayload: r}; return a ? (e = a.image, !Vn(e) && a.pending.push(o)) : (e = new Image(), e.onload = e.onerror = Fn, vg.put(t, e.__cachedImgObj = {image: e, pending: [o]}), e.src = e.__zrImageSrc = t), e } return t } return e } function Fn() { const t = this.__cachedImgObj; this.onload = this.onerror = this.__cachedImgObj = null; for (let e = 0; e < t.pending.length; e++) { const n = t.pending[e]; const i = n.cb; i && i(this, n.cbPayload), n.hostEl.dirty() }t.pending.length = 0 } function Vn(t) { return t && t.width && t.height } function Hn(t, e) { e = e || wg; const n = `${t}:${e}`; if (mg[n]) return mg[n]; for (var i = (`${t}`).split('\n'), r = 0, a = 0, o = i.length; o > a; a++)r = Math.max(Jn(i[a], e).width, r); return yg > _g && (yg = 0, mg = {}), yg++, mg[n] = r, r } function Gn(t, e, n, i, r, a, o, s) { return o ? Xn(t, e, n, i, r, a, o, s) : Wn(t, e, n, i, r, a, s) } function Wn(t, e, n, i, r, a, o) { const s = ti(t, e, r, a, o); let l = Hn(t, e); r && (l += r[1] + r[3]); const u = s.outerHeight; const h = Yn(0, l, n); const c = Un(0, u, i); const d = new Sn(h, c, l, u); return d.lineHeight = s.lineHeight, d } function Xn(t, e, n, i, r, a, o, s) {
    const l = ei(t, {
      rich: o, truncate: s, font: e, textAlign: n, textPadding: r, textLineHeight: a
    }); const u = l.outerWidth; const h = l.outerHeight; const c = Yn(0, u, n); const d = Un(0, h, i); return new Sn(c, d, u, h)
  } function Yn(t, e, n) { return n === 'right' ? t -= e : n === 'center' && (t -= e / 2), t } function Un(t, e, n) { return n === 'middle' ? t -= e / 2 : n === 'bottom' && (t -= e), t } function qn(t, e, n) { const i = e.textPosition; let r = e.textDistance; let a = n.x; let o = n.y; r = r || 0; const s = n.height; const l = n.width; const u = s / 2; let h = 'left'; let c = 'top'; switch (i) { case 'left': a -= r, o += u, h = 'right', c = 'middle'; break; case 'right': a += r + l, o += u, c = 'middle'; break; case 'top': a += l / 2, o -= r, h = 'center', c = 'bottom'; break; case 'bottom': a += l / 2, o += s + r, h = 'center'; break; case 'inside': a += l / 2, o += u, h = 'center', c = 'middle'; break; case 'insideLeft': a += r, o += u, c = 'middle'; break; case 'insideRight': a += l - r, o += u, h = 'right', c = 'middle'; break; case 'insideTop': a += l / 2, o += r, h = 'center'; break; case 'insideBottom': a += l / 2, o += s - r, h = 'center', c = 'bottom'; break; case 'insideTopLeft': a += r, o += r; break; case 'insideTopRight': a += l - r, o += r, h = 'right'; break; case 'insideBottomLeft': a += r, o += s - r, c = 'bottom'; break; case 'insideBottomRight': a += l - r, o += s - r, h = 'right', c = 'bottom' } return t = t || {}, t.x = a, t.y = o, t.textAlign = h, t.textVerticalAlign = c, t } function jn(t, e, n, i, r) { if (!e) return ''; const a = (`${t}`).split('\n'); r = Zn(e, n, i, r); for (let o = 0, s = a.length; s > o; o++)a[o] = Kn(a[o], r); return a.join('\n') } function Zn(t, e, n, i) { i = o({}, i), i.font = e; var n = A(n, '...'); i.maxIterations = A(i.maxIterations, 2); const r = i.minChar = A(i.minChar, 0); i.cnCharWidth = Hn('国', e); const a = i.ascCharWidth = Hn('a', e); i.placeholder = A(i.placeholder, ''); for (var s = t = Math.max(0, t - 1), l = 0; r > l && s >= a; l++)s -= a; let u = Hn(n, e); return u > s && (n = '', u = 0), s = t - u, i.ellipsis = n, i.ellipsisWidth = u, i.contentWidth = s, i.containerWidth = t, i } function Kn(t, e) { const n = e.containerWidth; const i = e.font; const r = e.contentWidth; if (!n) return ''; let a = Hn(t, i); if (n >= a) return t; for (let o = 0; ;o++) { if (r >= a || o >= e.maxIterations) { t += e.ellipsis; break } const s = o === 0 ? $n(t, r, e.ascCharWidth, e.cnCharWidth) : a > 0 ? Math.floor(t.length * r / a) : 0; t = t.substr(0, s), a = Hn(t, i) } return t === '' && (t = e.placeholder), t } function $n(t, e, n, i) { for (var r = 0, a = 0, o = t.length; o > a && e > r; a++) { const s = t.charCodeAt(a); r += s >= 0 && s <= 127 ? n : i } return a } function Qn(t) { return Hn('国', t) } function Jn(t, e) { return bg.measureText(t, e) } function ti(t, e, n, i, r) {
    t != null && (t += ''); const a = A(i, Qn(e)); let o = t ? t.split('\n') : []; const s = o.length * a; let l = s; let u = !0; if (n && (l += n[0] + n[2]), t && r) { u = !1; const h = r.outerHeight; const c = r.outerWidth; if (h != null && l > h)t = '', o = []; else if (c != null) for (let d = Zn(c - (n ? n[1] + n[3] : 0), e, r.ellipsis, {minChar: r.minChar, placeholder: r.placeholder}), f = 0, p = o.length; p > f; f++)o[f] = Kn(o[f], d) } return {
      lines: o, height: s, outerHeight: l, lineHeight: a, canCacheByTextString: u
    }
  } function ei(t, e) { const n = {lines: [], width: 0, height: 0}; if (t != null && (t += ''), !t) return n; for (var i, r = xg.lastIndex = 0; (i = xg.exec(t)) != null;) { const a = i.index; a > r && ni(n, t.substring(r, a)), ni(n, i[2], i[1]), r = xg.lastIndex }r < t.length && ni(n, t.substring(r, t.length)); const o = n.lines; let s = 0; let l = 0; const u = []; const h = e.textPadding; const c = e.truncate; let d = c && c.outerWidth; let f = c && c.outerHeight; h && (d != null && (d -= h[1] + h[3]), f != null && (f -= h[0] + h[2])); for (var p = 0; p < o.length; p++) { for (var g = o[p], v = 0, m = 0, y = 0; y < g.tokens.length; y++) { var _ = g.tokens[y]; const x = _.styleName && e.rich[_.styleName] || {}; const w = _.textPadding = x.textPadding; const b = _.font = x.font || e.font; let S = _.textHeight = A(x.textHeight, Qn(b)); if (w && (S += w[0] + w[2]), _.height = S, _.lineHeight = k(x.textLineHeight, e.textLineHeight, S), _.textAlign = x && x.textAlign || e.textAlign, _.textVerticalAlign = x && x.textVerticalAlign || 'middle', f != null && s + _.lineHeight > f) return {lines: [], width: 0, height: 0}; _.textWidth = Hn(_.text, b); let M = x.textWidth; const I = M == null || M === 'auto'; if (typeof M === 'string' && M.charAt(M.length - 1) === '%')_.percentWidth = M, u.push(_), M = 0; else { if (I) { M = _.textWidth; const T = x.textBackgroundColor; let C = T && T.image; C && (C = Rn(C), Vn(C) && (M = Math.max(M, C.width * S / C.height))) } const D = w ? w[1] + w[3] : 0; M += D; const P = d != null ? d - m : null; P != null && M > P && (!I || D > P ? (_.text = '', _.textWidth = M = 0) : (_.text = jn(_.text, P - D, b, c.ellipsis, {minChar: c.minChar}), _.textWidth = Hn(_.text, b), M = _.textWidth + D)) }m += _.width = M, x && (v = Math.max(v, _.lineHeight)) }g.width = m, g.lineHeight = v, s += v, l = Math.max(l, m) }n.outerWidth = n.width = A(e.textWidth, l), n.outerHeight = n.height = A(e.textHeight, s), h && (n.outerWidth += h[1] + h[3], n.outerHeight += h[0] + h[2]); for (var p = 0; p < u.length; p++) { var _ = u[p]; const L = _.percentWidth; _.width = parseInt(L, 10) / 100 * l } return n } function ni(t, e, n) { for (let i = e === '', r = e.split('\n'), a = t.lines, o = 0; o < r.length; o++) { const s = r[o]; const l = {styleName: n, text: s, isLineHolder: !s && !i}; if (o)a.push({tokens: [l]}); else { const u = (a[a.length - 1] || (a[0] = {tokens: []})).tokens; const h = u.length; h === 1 && u[0].isLineHolder ? u[0] = l : (s || !h || i) && u.push(l) } } } function ii(t) { const e = (t.fontSize || t.fontFamily) && [t.fontStyle, t.fontWeight, `${t.fontSize || 12}px`, t.fontFamily || 'sans-serif'].join(' '); return e && B(e) || t.textFont || t.font } function ri(t, e) { let n; let i; let r; let a; let o = e.x; let s = e.y; let l = e.width; let u = e.height; const h = e.r; l < 0 && (o += l, l = -l), u < 0 && (s += u, u = -u), typeof h === 'number' ? n = i = r = a = h : h instanceof Array ? h.length === 1 ? n = i = r = a = h[0] : h.length === 2 ? (n = r = h[0], i = a = h[1]) : h.length === 3 ? (n = h[0], i = a = h[1], r = h[2]) : (n = h[0], i = h[1], r = h[2], a = h[3]) : n = i = r = a = 0; let c; n + i > l && (c = n + i, n *= l / c, i *= l / c), r + a > l && (c = r + a, r *= l / c, a *= l / c), i + r > u && (c = i + r, i *= u / c, r *= u / c), n + a > u && (c = n + a, n *= u / c, a *= u / c), t.moveTo(o + n, s), t.lineTo(o + l - i, s), i !== 0 && t.arc(o + l - i, s + i, i, -Math.PI / 2, 0), t.lineTo(o + l, s + u - r), r !== 0 && t.arc(o + l - r, s + u - r, r, 0, Math.PI / 2), t.lineTo(o + a, s + u), a !== 0 && t.arc(o + a, s + u - a, a, Math.PI / 2, Math.PI), t.lineTo(o, s + n), n !== 0 && t.arc(o + n, s + n, n, Math.PI, 1.5 * Math.PI) } function ai(t) { return oi(t), f(t.rich, oi), t } function oi(t) { if (t) { t.font = ii(t); let e = t.textAlign; e === 'middle' && (e = 'center'), t.textAlign = e == null || Mg[e] ? e : 'left'; let n = t.textVerticalAlign || t.textBaseline; n === 'center' && (n = 'middle'), t.textVerticalAlign = n == null || Ig[n] ? n : 'top'; const i = t.textPadding; i && (t.textPadding = L(t.textPadding)) } } function si(t, e, n, i, r, a) { i.rich ? ui(t, e, n, i, r, a) : li(t, e, n, i, r, a) } function li(t, e, n, i, r, a) { let o; const s = fi(i); let l = !1; const u = e.__attrCachedBy === og.PLAIN_TEXT; a !== sg ? (a && (o = a.style, l = !s && u && o), e.__attrCachedBy = s ? og.NONE : og.PLAIN_TEXT) : u && (e.__attrCachedBy = og.NONE); const h = i.font || Sg; l && h === (o.font || Sg) || (e.font = h); let c = t.__computedFont; t.__styleFont !== h && (t.__styleFont = h, c = t.__computedFont = e.font); const d = i.textPadding; const f = i.textLineHeight; let p = t.__textCotentBlock; (!p || t.__dirtyText) && (p = t.__textCotentBlock = ti(n, c, d, f, i.truncate)); const g = p.outerHeight; const v = p.lines; const m = p.lineHeight; const y = vi(Dg, t, i, r); const _ = y.baseX; const x = y.baseY; const w = y.textAlign || 'left'; const b = y.textVerticalAlign; ci(e, i, r, _, x); const S = Un(x, g, b); let M = _; let I = S; if (s || d) { const T = Hn(n, c); let C = T; d && (C += d[1] + d[3]); const D = Yn(_, C, w); s && pi(t, e, i, D, S, C, g), d && (M = wi(_, w, d), I += d[0]) }e.textAlign = w, e.textBaseline = 'middle', e.globalAlpha = i.opacity || 1; for (var A = 0; A < Tg.length; A++) { const k = Tg[A]; const P = k[0]; const L = k[1]; const O = i[P]; l && O === o[P] || (e[L] = ag(e, L, O || k[2])) }I += m / 2; const B = i.textStrokeWidth; const E = l ? o.textStrokeWidth : null; const z = !l || B !== E; const R = !l || z || i.textStroke !== o.textStroke; const N = yi(i.textStroke, B); const F = _i(i.textFill); if (N && (z && (e.lineWidth = B), R && (e.strokeStyle = N)), F && (l && i.textFill === o.textFill || (e.fillStyle = F)), v.length === 1)N && e.strokeText(v[0], M, I), F && e.fillText(v[0], M, I); else for (var A = 0; A < v.length; A++)N && e.strokeText(v[A], M, I), F && e.fillText(v[A], M, I), I += m } function ui(t, e, n, i, r, a) { a !== sg && (e.__attrCachedBy = og.NONE); let o = t.__textCotentBlock; (!o || t.__dirtyText) && (o = t.__textCotentBlock = ei(n, i)), hi(t, e, o, i, r) } function hi(t, e, n, i, r) { const a = n.width; const o = n.outerWidth; const s = n.outerHeight; const l = i.textPadding; const u = vi(Dg, t, i, r); const h = u.baseX; const c = u.baseY; const d = u.textAlign; const f = u.textVerticalAlign; ci(e, i, r, h, c); const p = Yn(h, o, d); const g = Un(c, s, f); let v = p; let m = g; l && (v += l[3], m += l[0]); const y = v + a; fi(i) && pi(t, e, i, p, g, o, s); for (let _ = 0; _ < n.lines.length; _++) { for (var x, w = n.lines[_], b = w.tokens, S = b.length, M = w.lineHeight, I = w.width, T = 0, C = v, D = y, A = S - 1; S > T && (x = b[T], !x.textAlign || x.textAlign === 'left');)di(t, e, x, i, M, m, C, 'left'), I -= x.width, C += x.width, T++; for (;A >= 0 && (x = b[A], x.textAlign === 'right');)di(t, e, x, i, M, m, D, 'right'), I -= x.width, D -= x.width, A--; for (C += (a - (C - v) - (y - D) - I) / 2; A >= T;)x = b[T], di(t, e, x, i, M, m, C + x.width / 2, 'center'), C += x.width, T++; m += M } } function ci(t, e, n, i, r) { if (n && e.textRotation) { const a = e.textOrigin; a === 'center' ? (i = n.width / 2 + n.x, r = n.height / 2 + n.y) : a && (i = a[0] + n.x, r = a[1] + n.y), t.translate(i, r), t.rotate(-e.textRotation), t.translate(-i, -r) } } function di(t, e, n, i, r, a, o, s) {
    const l = i.rich[n.styleName] || {}; l.text = n.text; const u = n.textVerticalAlign; let h = a + r / 2; u === 'top' ? h = a + n.height / 2 : u === 'bottom' && (h = a + r - n.height / 2), !n.isLineHolder && fi(l) && pi(t, e, l, s === 'right' ? o - n.width : s === 'center' ? o - n.width / 2 : o, h - n.height / 2, n.width, n.height); const c = n.textPadding; c && (o = wi(o, s, c), h -= n.height / 2 - c[2] - n.textHeight / 2), mi(e, 'shadowBlur', k(l.textShadowBlur, i.textShadowBlur, 0)), mi(e, 'shadowColor', l.textShadowColor || i.textShadowColor || 'transparent'), mi(e, 'shadowOffsetX', k(l.textShadowOffsetX, i.textShadowOffsetX, 0)), mi(e, 'shadowOffsetY', k(l.textShadowOffsetY, i.textShadowOffsetY, 0)), mi(e, 'textAlign', s), mi(e, 'textBaseline', 'middle'), mi(e, 'font', n.font || Sg)
    const d = yi(l.textStroke || i.textStroke, p); const f = _i(l.textFill || i.textFill); var p = A(l.textStrokeWidth, i.textStrokeWidth); d && (mi(e, 'lineWidth', p), mi(e, 'strokeStyle', d), e.strokeText(n.text, o, h)), f && (mi(e, 'fillStyle', f), e.fillText(n.text, o, h))
  } function fi(t) { return !!(t.textBackgroundColor || t.textBorderWidth && t.textBorderColor) } function pi(t, e, n, i, r, a, o) {
    const s = n.textBackgroundColor; const l = n.textBorderWidth; const u = n.textBorderColor; const h = b(s); if (mi(e, 'shadowBlur', n.textBoxShadowBlur || 0), mi(e, 'shadowColor', n.textBoxShadowColor || 'transparent'), mi(e, 'shadowOffsetX', n.textBoxShadowOffsetX || 0), mi(e, 'shadowOffsetY', n.textBoxShadowOffsetY || 0), h || l && u) {
      e.beginPath(); const c = n.textBorderRadius; c ? ri(e, {
        x: i, y: r, width: a, height: o, r: c
      }) : e.rect(i, r, a, o), e.closePath()
    } if (h) if (mi(e, 'fillStyle', s), n.fillOpacity != null) { var d = e.globalAlpha; e.globalAlpha = n.fillOpacity * n.opacity, e.fill(), e.globalAlpha = d } else e.fill(); else if (S(s)) { let f = s.image; f = Nn(f, null, t, gi, s), f && Vn(f) && e.drawImage(f, i, r, a, o) } if (l && u) if (mi(e, 'lineWidth', l), mi(e, 'strokeStyle', u), n.strokeOpacity != null) { var d = e.globalAlpha; e.globalAlpha = n.strokeOpacity * n.opacity, e.stroke(), e.globalAlpha = d } else e.stroke()
  } function gi(t, e) { e.image = t } function vi(t, e, n, i) { let r = n.x || 0; let a = n.y || 0; let o = n.textAlign; let s = n.textVerticalAlign; if (i) { const l = n.textPosition; if (l instanceof Array)r = i.x + xi(l[0], i.width), a = i.y + xi(l[1], i.height); else { const u = e && e.calculateTextPosition ? e.calculateTextPosition(Cg, n, i) : qn(Cg, n, i); r = u.x, a = u.y, o = o || u.textAlign, s = s || u.textVerticalAlign } const h = n.textOffset; h && (r += h[0], a += h[1]) } return t = t || {}, t.baseX = r, t.baseY = a, t.textAlign = o, t.textVerticalAlign = s, t } function mi(t, e, n) { return t[e] = ag(t, e, n), t[e] } function yi(t, e) { return t == null || e <= 0 || t === 'transparent' || t === 'none' ? null : t.image || t.colorStops ? '#000' : t } function _i(t) { return t == null || t === 'none' ? null : t.image || t.colorStops ? '#000' : t } function xi(t, e) { return typeof t === 'string' ? t.lastIndexOf('%') >= 0 ? parseFloat(t) / 100 * e : parseFloat(t) : t } function wi(t, e, n) { return e === 'right' ? t - n[1] : e === 'center' ? t + n[3] / 2 - n[1] / 2 : t + n[3] } function bi(t, e) { return t != null && (t || e.textBackgroundColor || e.textBorderWidth && e.textBorderColor || e.textPadding) } function Si(t) { t = t || {}, Kp.call(this, t); for (const e in t)t.hasOwnProperty(e) && e !== 'style' && (this[e] = t[e]); this.style = new ug(t.style, this), this._rect = null, this.__clipPaths = null } function Mi(t) { Si.call(this, t) } function Ii(t) { return parseInt(t, 10) } function Ti(t) { return t ? t.__builtin__ ? !0 : typeof t.resize !== 'function' || typeof t.refresh !== 'function' ? !1 : !0 : !1 } function Ci(t, e, n) { return Eg.copy(t.getBoundingRect()), t.transform && Eg.applyTransform(t.transform), zg.width = e, zg.height = n, !Eg.intersect(zg) } function Di(t, e) { if (t === e) return !1; if (!t || !e || t.length !== e.length) return !0; for (let n = 0; n < t.length; n++) if (t[n] !== e[n]) return !0; return !1 } function Ai(t, e) { for (let n = 0; n < t.length; n++) { const i = t[n]; i.setTransform(e), e.beginPath(), i.buildPath(e, i.shape), e.clip(), i.restoreTransform(e) } } function ki(t, e) { const n = document.createElement('div'); return n.style.cssText = `${['position:relative', `width:${t}px`, `height:${e}px`, 'padding:0', 'margin:0', 'border-width:0'].join(';')};`, n } function Pi(t) { return t === 'mousewheel' && Hf.browser.firefox ? 'DOMMouseScroll' : t } function Li(t) { const e = t.pointerType; return e === 'pen' || e === 'touch' } function Oi(t) { t.touching = !0, t.touchTimer != null && (clearTimeout(t.touchTimer), t.touchTimer = null), t.touchTimer = setTimeout(function () { t.touching = !1, t.touchTimer = null }, 700) } function Bi(t) { t && (t.zrByTouch = !0) } function Ei(t, e) { return _e(t.dom, new Ri(t, e), !0) } function zi(t, e) { let n = !1; do e = e && e.parentNode; while (e && e.nodeType !== 9 && !(n = e === t.painterRoot)); return n } function Ri(t, e) { this.type = e.type, this.target = this.currentTarget = t.dom, this.pointerType = e.pointerType, this.clientX = e.clientX, this.clientY = e.clientY } function Ni(t, e) { const n = e.domHandlers; Hf.pointerEventsSupported ? f(Hg.pointer, function (i) { Vi(e, i, function (e) { n[i].call(t, e) }) }) : (Hf.touchEventsSupported && f(Hg.touch, function (i) { Vi(e, i, function (r) { n[i].call(t, r), Oi(e) }) }), f(Hg.mouse, function (i) { Vi(e, i, function (r) { r = ye(r), e.touching || n[i].call(t, r) }) })) } function Fi(t, e) { function n(n) { function i(i) { i = ye(i), zi(t, i.target) || (i = Ei(t, i), e.domHandlers[n].call(t, i)) }Vi(e, n, i, {capture: !0}) }Hf.pointerEventsSupported ? f(Gg.pointer, n) : Hf.touchEventsSupported || f(Gg.mouse, n) } function Vi(t, e, n, i) { t.mounted[e] = n, t.listenerOpts[e] = i, xe(t.domTarget, Pi(e), n, i) } function Hi(t) { const e = t.mounted; for (const n in e)e.hasOwnProperty(n) && we(t.domTarget, Pi(n), e[n], t.listenerOpts[n]); t.mounted = {} } function Gi(t, e) { if (t._mayPointerCapture = null, Vg && t._pointerCapturing ^ e) { t._pointerCapturing = e; const n = t._globalHandlerScope; e ? Fi(t, n) : Hi(n) } } function Wi(t, e) { this.domTarget = t, this.domHandlers = e, this.mounted = {}, this.listenerOpts = {}, this.touchTimer = null, this.touching = !1 } function Xi(t, e) { up.call(this), this.dom = t, this.painterRoot = e, this._localHandlerScope = new Wi(t, Xg), Vg && (this._globalHandlerScope = new Wi(document, Yg)), this._pointerCapturing = !1, this._mayPointerCapture = null, Ni(this, this._localHandlerScope) } function Yi(t, e) { const n = new $g(Ff(), t, e); return Zg[n.id] = n, n } function Ui(t) { if (t)t.dispose(); else { for (const e in Zg)Zg.hasOwnProperty(e) && Zg[e].dispose(); Zg = {} } return this } function qi(t) { return Zg[t] } function ji(t, e) { jg[t] = e } function Zi(t) { delete Zg[t] } function Ki(t) { return t instanceof Array ? t : t == null ? [] : [t] } function $i(t, e, n) { if (t) { t[e] = t[e] || {}, t.emphasis = t.emphasis || {}, t.emphasis[e] = t.emphasis[e] || {}; for (let i = 0, r = n.length; r > i; i++) { const a = n[i]; !t.emphasis[e].hasOwnProperty(a) && t[e].hasOwnProperty(a) && (t.emphasis[e][a] = t[e][a]) } } } function Qi(t) { return !tv(t) || ev(t) || t instanceof Date ? t : t.value } function Ji(t) { return tv(t) && !(t instanceof Array) } function tr(t, e) { e = (e || []).slice(); const n = p(t || [], function (t) { return {exist: t} }); return Jg(e, function (t, i) { if (tv(t)) { for (var r = 0; r < n.length; r++) if (!n[r].option && t.id != null && n[r].exist.id === `${t.id}`) return n[r].option = t, void (e[i] = null); for (var r = 0; r < n.length; r++) { const a = n[r].exist; if (!(n[r].option || a.id != null && t.id != null || t.name == null || ir(t) || ir(a) || a.name !== `${t.name}`)) return n[r].option = t, void (e[i] = null) } } }), Jg(e, function (t) { if (tv(t)) { for (var e = 0; e < n.length; e++) { const i = n[e].exist; if (!n[e].option && !ir(i) && t.id == null) { n[e].option = t; break } }e >= n.length && n.push({option: t}) } }), n } function er(t) { const e = N(); Jg(t, function (t) { const n = t.exist; n && e.set(n.id, t) }), Jg(t, function (t) { const n = t.option; O(!n || n.id == null || !e.get(n.id) || e.get(n.id) === t, `id duplicates: ${n && n.id}`), n && n.id != null && e.set(n.id, t), !t.keyInfo && (t.keyInfo = {}) }), Jg(t, function (t, n) { const i = t.exist; const r = t.option; const a = t.keyInfo; if (tv(r)) { if (a.name = r.name != null ? `${r.name}` : i ? i.name : nv + n, i)a.id = i.id; else if (r.id != null)a.id = `${r.id}`; else { let o = 0; do a.id = `\x00${a.name}\x00${o++}`; while (e.get(a.id)) }e.set(a.id, t) } }) } function nr(t) { const e = t.name; return !(!e || !e.indexOf(nv)) } function ir(t) { return tv(t) && t.id && (`${t.id}`).indexOf('\x00_ec_\x00') === 0 } function rr(t, e) { return e.dataIndexInside != null ? e.dataIndexInside : e.dataIndex != null ? x(e.dataIndex) ? p(e.dataIndex, function (e) { return t.indexOfRawIndex(e) }) : t.indexOfRawIndex(e.dataIndex) : e.name != null ? x(e.name) ? p(e.name, function (e) { return t.indexOfName(e) }) : t.indexOfName(e.name) : void 0 } function ar() { const t = `__\x00ec_inner_${rv++}_${Math.random().toFixed(5)}`; return function (e) { return e[t] || (e[t] = {}) } } function or(t, e, n) { if (b(e)) { const i = {}; i[`${e}Index`] = 0, e = i } const r = n && n.defaultMainType; !r || sr(e, `${r}Index`) || sr(e, `${r}Id`) || sr(e, `${r}Name`) || (e[`${r}Index`] = 0); const a = {}; return Jg(e, function (i, r) { var i = e[r]; if (r === 'dataIndex' || r === 'dataIndexInside') return void (a[r] = i); const o = r.match(/^(\w+)(Index|Id|Name)$/) || []; const s = o[1]; const l = (o[2] || '').toLowerCase(); if (!(!s || !l || i == null || l === 'index' && i === 'none' || n && n.includeMainTypes && u(n.includeMainTypes, s) < 0)) { const h = {mainType: s}; (l !== 'index' || i !== 'all') && (h[l] = i); const c = t.queryComponents(h); a[`${s}Models`] = c, a[`${s}Model`] = c[0] } }), a } function sr(t, e) { return t && t.hasOwnProperty(e) } function lr(t, e, n) { t.setAttribute ? t.setAttribute(e, n) : t[e] = n } function ur(t, e) { return t.getAttribute ? t.getAttribute(e) : t[e] } function hr(t) { return t === 'auto' ? Hf.domSupported ? 'html' : 'richText' : t || 'html' } function cr(t) { const e = {main: '', sub: ''}; return t && (t = t.split(av), e.main = t[0] || '', e.sub = t[1] || ''), e } function dr(t) { O(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(t), `componentType "${t}" illegal`) } function fr(t) { t.$constructor = t, t.extend = function (t) { const e = this; const n = function () { t.$constructor ? t.$constructor.apply(this, arguments) : e.apply(this, arguments) }; return o(n.prototype, t), n.extend = this.extend, n.superCall = gr, n.superApply = vr, h(n, this), n.superClass = e, n } } function pr(t) { const e = ['__\x00is_clz', sv++, Math.random().toFixed(3)].join('_'); t.prototype[e] = !0, t.isInstance = function (t) { return !(!t || !t[e]) } } function gr(t, e) { const n = P(arguments, 2); return this.superClass.prototype[e].apply(t, n) } function vr(t, e, n) { return this.superClass.prototype[e].apply(t, n) } function mr(t, e) { function n(t) { let e = i[t.main]; return e && e[ov] || (e = i[t.main] = {}, e[ov] = !0), e }e = e || {}; var i = {}; if (t.registerClass = function (t, e) { if (e) if (dr(e), e = cr(e), e.sub) { if (e.sub !== ov) { const r = n(e); r[e.sub] = t } } else i[e.main] = t; return t }, t.getClass = function (t, e, n) { let r = i[t]; if (r && r[ov] && (r = e ? r[e] : null), n && !r) throw new Error(e ? `Component ${t}.${e || ''} not exists. Load it first.` : `${t}.type should be specified.`); return r }, t.getClassesByMainType = function (t) { t = cr(t); const e = []; const n = i[t.main]; return n && n[ov] ? f(n, function (t, n) { n !== ov && e.push(t) }) : e.push(n), e }, t.hasClass = function (t) { return t = cr(t), !!i[t.main] }, t.getAllClassMainTypes = function () { const t = []; return f(i, function (e, n) { t.push(n) }), t }, t.hasSubTypes = function (t) { t = cr(t); const e = i[t.main]; return e && e[ov] }, t.parseClassType = cr, e.registerWhenExtend) { const r = t.extend; r && (t.extend = function (e) { const n = r.call(this, e); return t.registerClass(n, e.type) }) } return t } function yr(t) { return t > -gv && gv > t } function _r(t) { return t > gv || -gv > t } function xr(t, e, n, i, r) { const a = 1 - r; return a * a * (a * t + 3 * r * e) + r * r * (r * i + 3 * a * n) } function wr(t, e, n, i, r) { const a = 1 - r; return 3 * (((e - t) * a + 2 * (n - e) * r) * a + (i - n) * r * r) } function br(t, e, n, i, r, a) { const o = i + 3 * (e - n) - t; const s = 3 * (n - 2 * e + t); const l = 3 * (e - t); const u = t - r; const h = s * s - 3 * o * l; const c = s * l - 9 * o * u; const d = l * l - 3 * s * u; let f = 0; if (yr(h) && yr(c)) if (yr(s))a[0] = 0; else { var p = -l / s; p >= 0 && p <= 1 && (a[f++] = p) } else { const g = c * c - 4 * h * d; if (yr(g)) { const v = c / h; var p = -s / o + v; var m = -v / 2; p >= 0 && p <= 1 && (a[f++] = p), m >= 0 && m <= 1 && (a[f++] = m) } else if (g > 0) { const y = pv(g); let _ = h * s + 1.5 * o * (-c + y); let x = h * s + 1.5 * o * (-c - y); _ = _ < 0 ? -fv(-_, yv) : fv(_, yv), x = x < 0 ? -fv(-x, yv) : fv(x, yv); var p = (-s - (_ + x)) / (3 * o); p >= 0 && p <= 1 && (a[f++] = p) } else { const w = (2 * h * s - 3 * o * c) / (2 * pv(h * h * h)); const b = Math.acos(w) / 3; const S = pv(h); const M = Math.cos(b); var p = (-s - 2 * S * M) / (3 * o); var m = (-s + S * (M + mv * Math.sin(b))) / (3 * o); const I = (-s + S * (M - mv * Math.sin(b))) / (3 * o); p >= 0 && p <= 1 && (a[f++] = p), m >= 0 && m <= 1 && (a[f++] = m), I >= 0 && I <= 1 && (a[f++] = I) } } return f } function Sr(t, e, n, i, r) { const a = 6 * n - 12 * e + 6 * t; const o = 9 * e + 3 * i - 3 * t - 9 * n; const s = 3 * e - 3 * t; let l = 0; if (yr(o)) { if (_r(a)) { var u = -s / a; u >= 0 && u <= 1 && (r[l++] = u) } } else { const h = a * a - 4 * o * s; if (yr(h))r[0] = -a / (2 * o); else if (h > 0) { const c = pv(h); var u = (-a + c) / (2 * o); const d = (-a - c) / (2 * o); u >= 0 && u <= 1 && (r[l++] = u), d >= 0 && d <= 1 && (r[l++] = d) } } return l } function Mr(t, e, n, i, r, a) { const o = (e - t) * r + t; const s = (n - e) * r + e; const l = (i - n) * r + n; const u = (s - o) * r + o; const h = (l - s) * r + s; const c = (h - u) * r + u; a[0] = t, a[1] = o, a[2] = u, a[3] = c, a[4] = c, a[5] = h, a[6] = l, a[7] = i } function Ir(t, e, n, i, r, a, o, s, l, u, h) { let c; let d; let f; let p; let g; let v = 0.005; let m = 1 / 0; _v[0] = l, _v[1] = u; for (let y = 0; y < 1; y += 0.05)xv[0] = xr(t, n, r, o, y), xv[1] = xr(e, i, a, s, y), p = op(_v, xv), m > p && (c = y, m = p); m = 1 / 0; for (let _ = 0; _ < 32 && !(vv > v); _++)d = c - v, f = c + v, xv[0] = xr(t, n, r, o, d), xv[1] = xr(e, i, a, s, d), p = op(xv, _v), d >= 0 && m > p ? (c = d, m = p) : (wv[0] = xr(t, n, r, o, f), wv[1] = xr(e, i, a, s, f), g = op(wv, _v), f <= 1 && m > g ? (c = f, m = g) : v *= 0.5); return h && (h[0] = xr(t, n, r, o, c), h[1] = xr(e, i, a, s, c)), pv(m) } function Tr(t, e, n, i) { const r = 1 - i; return r * (r * t + 2 * i * e) + i * i * n } function Cr(t, e, n, i) { return 2 * ((1 - i) * (e - t) + i * (n - e)) } function Dr(t, e, n, i, r) { const a = t - 2 * e + n; const o = 2 * (e - t); const s = t - i; let l = 0; if (yr(a)) { if (_r(o)) { var u = -s / o; u >= 0 && u <= 1 && (r[l++] = u) } } else { const h = o * o - 4 * a * s; if (yr(h)) { var u = -o / (2 * a); u >= 0 && u <= 1 && (r[l++] = u) } else if (h > 0) { const c = pv(h); var u = (-o + c) / (2 * a); const d = (-o - c) / (2 * a); u >= 0 && u <= 1 && (r[l++] = u), d >= 0 && d <= 1 && (r[l++] = d) } } return l } function Ar(t, e, n) { const i = t + n - 2 * e; return i === 0 ? 0.5 : (t - e) / i } function kr(t, e, n, i, r) { const a = (e - t) * i + t; const o = (n - e) * i + e; const s = (o - a) * i + a; r[0] = t, r[1] = a, r[2] = s, r[3] = s, r[4] = o, r[5] = n } function Pr(t, e, n, i, r, a, o, s, l) { let u; let h = 0.005; let c = 1 / 0; _v[0] = o, _v[1] = s; for (let d = 0; d < 1; d += 0.05) { xv[0] = Tr(t, n, r, d), xv[1] = Tr(e, i, a, d); var f = op(_v, xv); c > f && (u = d, c = f) }c = 1 / 0; for (let p = 0; p < 32 && !(vv > h); p++) { const g = u - h; const v = u + h; xv[0] = Tr(t, n, r, g), xv[1] = Tr(e, i, a, g); var f = op(xv, _v); if (g >= 0 && c > f)u = g, c = f; else { wv[0] = Tr(t, n, r, v), wv[1] = Tr(e, i, a, v); const m = op(wv, _v); v <= 1 && c > m ? (u = v, c = m) : h *= 0.5 } } return l && (l[0] = Tr(t, n, r, u), l[1] = Tr(e, i, a, u)), pv(c) } function Lr(t, e, n) { if (t.length !== 0) { let i; let r = t[0]; let a = r[0]; let o = r[0]; let s = r[1]; let l = r[1]; for (i = 1; i < t.length; i++)r = t[i], a = bv(a, r[0]), o = Sv(o, r[0]), s = bv(s, r[1]), l = Sv(l, r[1]); e[0] = a, e[1] = s, n[0] = o, n[1] = l } } function Or(t, e, n, i, r, a) { r[0] = bv(t, n), r[1] = bv(e, i), a[0] = Sv(t, n), a[1] = Sv(e, i) } function Br(t, e, n, i, r, a, o, s, l, u) { let h; const c = Sr; const d = xr; let f = c(t, n, r, o, kv); for (l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0, h = 0; f > h; h++) { const p = d(t, n, r, o, kv[h]); l[0] = bv(p, l[0]), u[0] = Sv(p, u[0]) } for (f = c(e, i, a, s, Pv), h = 0; f > h; h++) { const g = d(e, i, a, s, Pv[h]); l[1] = bv(g, l[1]), u[1] = Sv(g, u[1]) }l[0] = bv(t, l[0]), u[0] = Sv(t, u[0]), l[0] = bv(o, l[0]), u[0] = Sv(o, u[0]), l[1] = bv(e, l[1]), u[1] = Sv(e, u[1]), l[1] = bv(s, l[1]), u[1] = Sv(s, u[1]) } function Er(t, e, n, i, r, a, o, s) { const l = Ar; const u = Tr; const h = Sv(bv(l(t, n, r), 1), 0); const c = Sv(bv(l(e, i, a), 1), 0); const d = u(t, n, r, h); const f = u(e, i, a, c); o[0] = bv(t, r, d), o[1] = bv(e, a, f), s[0] = Sv(t, r, d), s[1] = Sv(e, a, f) } function zr(t, e, n, i, r, a, o, s, l) { const u = oe; const h = se; const c = Math.abs(r - a); if (c % Tv < 1e-4 && c > 1e-4) return s[0] = t - n, s[1] = e - i, l[0] = t + n, void (l[1] = e + i); if (Cv[0] = Iv(r) * n + t, Cv[1] = Mv(r) * i + e, Dv[0] = Iv(a) * n + t, Dv[1] = Mv(a) * i + e, u(s, Cv, Dv), h(l, Cv, Dv), r %= Tv, r < 0 && (r += Tv), a %= Tv, a < 0 && (a += Tv), r > a && !o ? a += Tv : a > r && o && (r += Tv), o) { const d = a; a = r, r = d } for (let f = 0; a > f; f += Math.PI / 2)f > r && (Av[0] = Iv(f) * n + t, Av[1] = Mv(f) * i + e, u(s, Av, s), h(l, Av, l)) } function Rr(t, e, n, i, r, a, o) { if (r === 0) return !1; const s = r; let l = 0; let u = t; if (o > e + s && o > i + s || e - s > o && i - s > o || a > t + s && a > n + s || t - s > a && n - s > a) return !1; if (t === n) return Math.abs(a - t) <= s / 2; l = (e - i) / (t - n), u = (t * i - n * e) / (t - n); const h = l * a - o + u; const c = h * h / (l * l + 1); return s / 2 * s / 2 >= c } function Nr(t, e, n, i, r, a, o, s, l, u, h) { if (l === 0) return !1; const c = l; if (h > e + c && h > i + c && h > a + c && h > s + c || e - c > h && i - c > h && a - c > h && s - c > h || u > t + c && u > n + c && u > r + c && u > o + c || t - c > u && n - c > u && r - c > u && o - c > u) return !1; const d = Ir(t, e, n, i, r, a, o, s, u, h, null); return c / 2 >= d } function Fr(t, e, n, i, r, a, o, s, l) { if (o === 0) return !1; const u = o; if (l > e + u && l > i + u && l > a + u || e - u > l && i - u > l && a - u > l || s > t + u && s > n + u && s > r + u || t - u > s && n - u > s && r - u > s) return !1; const h = Pr(t, e, n, i, r, a, s, l, null); return u / 2 >= h } function Vr(t) { return t %= Yv, t < 0 && (t += Yv), t } function Hr(t, e, n, i, r, a, o, s, l) { if (o === 0) return !1; const u = o; s -= t, l -= e; const h = Math.sqrt(s * s + l * l); if (h - u > n || n > h + u) return !1; if (Math.abs(i - r) % Uv < 1e-4) return !0; if (a) { const c = i; i = Vr(r), r = Vr(c) } else i = Vr(i), r = Vr(r); i > r && (r += Uv); let d = Math.atan2(l, s); return d < 0 && (d += Uv), d >= i && r >= d || d + Uv >= i && r >= d + Uv } function Gr(t, e, n, i, r, a) { if (a > e && a > i || e > a && i > a) return 0; if (i === e) return 0; let o = e > i ? 1 : -1; const s = (a - e) / (i - e); (s === 1 || s === 0) && (o = e > i ? 0.5 : -0.5); const l = s * (n - t) + t; return l === r ? 1 / 0 : l > r ? o : 0 } function Wr(t, e) { return Math.abs(t - e) < Zv } function Xr() { const t = $v[0]; $v[0] = $v[1], $v[1] = t } function Yr(t, e, n, i, r, a, o, s, l, u) { if (u > e && u > i && u > a && u > s || e > u && i > u && a > u && s > u) return 0; const h = br(e, i, a, s, u, Kv); if (h === 0) return 0; for (var c, d, f = 0, p = -1, g = 0; h > g; g++) { const v = Kv[g]; const m = v === 0 || v === 1 ? 0.5 : 1; const y = xr(t, n, r, o, v); l > y || (p < 0 && (p = Sr(e, i, a, s, $v), $v[1] < $v[0] && p > 1 && Xr(), c = xr(e, i, a, s, $v[0]), p > 1 && (d = xr(e, i, a, s, $v[1]))), f += p === 2 ? v < $v[0] ? e > c ? m : -m : v < $v[1] ? c > d ? m : -m : d > s ? m : -m : v < $v[0] ? e > c ? m : -m : c > s ? m : -m) } return f } function Ur(t, e, n, i, r, a, o, s) { if (s > e && s > i && s > a || e > s && i > s && a > s) return 0; const l = Dr(e, i, a, s, Kv); if (l === 0) return 0; const u = Ar(e, i, a); if (u >= 0 && u <= 1) { for (var h = 0, c = Tr(e, i, a, u), d = 0; l > d; d++) { var f = Kv[d] === 0 || Kv[d] === 1 ? 0.5 : 1; var p = Tr(t, n, r, Kv[d]); o > p || (h += Kv[d] < u ? e > c ? f : -f : c > a ? f : -f) } return h } var f = Kv[0] === 0 || Kv[0] === 1 ? 0.5 : 1; var p = Tr(t, n, r, Kv[0]); return o > p ? 0 : e > a ? f : -f } function qr(t, e, n, i, r, a, o, s) { if (s -= e, s > n || -n > s) return 0; var l = Math.sqrt(n * n - s * s); Kv[0] = -l, Kv[1] = l; const u = Math.abs(i - r); if (u < 1e-4) return 0; if (u % jv < 1e-4) { i = 0, r = jv; var h = a ? 1 : -1; return o >= Kv[0] + t && o <= Kv[1] + t ? h : 0 } if (a) { var l = i; i = Vr(r), r = Vr(l) } else i = Vr(i), r = Vr(r); i > r && (r += jv); for (var c = 0, d = 0; d < 2; d++) { const f = Kv[d]; if (f + t > o) { let p = Math.atan2(s, f); var h = a ? 1 : -1; p < 0 && (p = jv + p), (p >= i && r >= p || p + jv >= i && r >= p + jv) && (p > Math.PI / 2 && p < 1.5 * Math.PI && (h = -h), c += h) } } return c } function jr(t, e, n, i, r) { for (var a = 0, o = 0, s = 0, l = 0, u = 0, h = 0; h < t.length;) { const c = t[h++]; switch (c === qv.M && h > 1 && (n || (a += Gr(o, s, l, u, i, r))), h === 1 && (o = t[h], s = t[h + 1], l = o, u = s), c) { case qv.M: l = t[h++], u = t[h++], o = l, s = u; break; case qv.L: if (n) { if (Rr(o, s, t[h], t[h + 1], e, i, r)) return !0 } else a += Gr(o, s, t[h], t[h + 1], i, r) || 0; o = t[h++], s = t[h++]; break; case qv.C: if (n) { if (Nr(o, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], e, i, r)) return !0 } else a += Yr(o, s, t[h++], t[h++], t[h++], t[h++], t[h], t[h + 1], i, r) || 0; o = t[h++], s = t[h++]; break; case qv.Q: if (n) { if (Fr(o, s, t[h++], t[h++], t[h], t[h + 1], e, i, r)) return !0 } else a += Ur(o, s, t[h++], t[h++], t[h], t[h + 1], i, r) || 0; o = t[h++], s = t[h++]; break; case qv.A: var d = t[h++]; var f = t[h++]; var p = t[h++]; var g = t[h++]; var v = t[h++]; var m = t[h++]; h += 1; var y = 1 - t[h++]; var _ = Math.cos(v) * p + d; var x = Math.sin(v) * g + f; h > 1 ? a += Gr(o, s, _, x, i, r) : (l = _, u = x); var w = (i - d) * g / p + d; if (n) { if (Hr(d, f, g, v, v + m, y, e, w, r)) return !0 } else a += qr(d, f, g, v, v + m, y, w, r); o = Math.cos(v + m) * p + d, s = Math.sin(v + m) * g + f; break; case qv.R: l = o = t[h++], u = s = t[h++]; var b = t[h++]; var S = t[h++]; var _ = l + b; var x = u + S; if (n) { if (Rr(l, u, _, u, e, i, r) || Rr(_, u, _, x, e, i, r) || Rr(_, x, l, x, e, i, r) || Rr(l, x, l, u, e, i, r)) return !0 } else a += Gr(_, u, _, x, i, r), a += Gr(l, x, l, u, i, r); break; case qv.Z: if (n) { if (Rr(o, s, l, u, e, i, r)) return !0 } else a += Gr(o, s, l, u, i, r); o = l, s = u } } return n || Wr(s, u) || (a += Gr(o, s, l, u, i, r) || 0), a !== 0 } function Zr(t, e, n) { return jr(t, 0, !1, e, n) } function Kr(t, e, n, i) { return jr(t, e, !0, n, i) } function $r(t) { Si.call(this, t), this.path = null } function Qr(t, e, n, i, r, a, o, s, l, u, h) { const c = l * (um / 180); const d = lm(c) * (t - n) / 2 + sm(c) * (e - i) / 2; const f = -1 * sm(c) * (t - n) / 2 + lm(c) * (e - i) / 2; const p = d * d / (o * o) + f * f / (s * s); p > 1 && (o *= om(p), s *= om(p)); const g = (r === a ? -1 : 1) * om((o * o * s * s - o * o * f * f - s * s * d * d) / (o * o * f * f + s * s * d * d)) || 0; const v = g * o * f / s; const m = g * -s * d / o; const y = (t + n) / 2 + lm(c) * v - sm(c) * m; const _ = (e + i) / 2 + sm(c) * v + lm(c) * m; const x = dm([1, 0], [(d - v) / o, (f - m) / s]); const w = [(d - v) / o, (f - m) / s]; const b = [(-1 * d - v) / o, (-1 * f - m) / s]; let S = dm(w, b); cm(w, b) <= -1 && (S = um), cm(w, b) >= 1 && (S = 0), a === 0 && S > 0 && (S -= 2 * um), a === 1 && S < 0 && (S += 2 * um), h.addData(u, y, _, o, s, x, S, c, a) } function Jr(t) { if (!t) return new Xv(); for (var e, n = 0, i = 0, r = n, a = i, o = new Xv(), s = Xv.CMD, l = t.match(fm), u = 0; u < l.length; u++) { for (var h, c = l[u], d = c.charAt(0), f = c.match(pm) || [], p = f.length, g = 0; p > g; g++)f[g] = parseFloat(f[g]); for (let v = 0; p > v;) { var m; var y; var _; var x; var w; var b; var S; let M = n; let I = i; switch (d) { case 'l': n += f[v++], i += f[v++], h = s.L, o.addData(h, n, i); break; case 'L': n = f[v++], i = f[v++], h = s.L, o.addData(h, n, i); break; case 'm': n += f[v++], i += f[v++], h = s.M, o.addData(h, n, i), r = n, a = i, d = 'l'; break; case 'M': n = f[v++], i = f[v++], h = s.M, o.addData(h, n, i), r = n, a = i, d = 'L'; break; case 'h': n += f[v++], h = s.L, o.addData(h, n, i); break; case 'H': n = f[v++], h = s.L, o.addData(h, n, i); break; case 'v': i += f[v++], h = s.L, o.addData(h, n, i); break; case 'V': i = f[v++], h = s.L, o.addData(h, n, i); break; case 'C': h = s.C, o.addData(h, f[v++], f[v++], f[v++], f[v++], f[v++], f[v++]), n = f[v - 2], i = f[v - 1]; break; case 'c': h = s.C, o.addData(h, f[v++] + n, f[v++] + i, f[v++] + n, f[v++] + i, f[v++] + n, f[v++] + i), n += f[v - 2], i += f[v - 1]; break; case 'S': m = n, y = i; var T = o.len(); var C = o.data; e === s.C && (m += n - C[T - 4], y += i - C[T - 3]), h = s.C, M = f[v++], I = f[v++], n = f[v++], i = f[v++], o.addData(h, m, y, M, I, n, i); break; case 's': m = n, y = i; var T = o.len(); var C = o.data; e === s.C && (m += n - C[T - 4], y += i - C[T - 3]), h = s.C, M = n + f[v++], I = i + f[v++], n += f[v++], i += f[v++], o.addData(h, m, y, M, I, n, i); break; case 'Q': M = f[v++], I = f[v++], n = f[v++], i = f[v++], h = s.Q, o.addData(h, M, I, n, i); break; case 'q': M = f[v++] + n, I = f[v++] + i, n += f[v++], i += f[v++], h = s.Q, o.addData(h, M, I, n, i); break; case 'T': m = n, y = i; var T = o.len(); var C = o.data; e === s.Q && (m += n - C[T - 4], y += i - C[T - 3]), n = f[v++], i = f[v++], h = s.Q, o.addData(h, m, y, n, i); break; case 't': m = n, y = i; var T = o.len(); var C = o.data; e === s.Q && (m += n - C[T - 4], y += i - C[T - 3]), n += f[v++], i += f[v++], h = s.Q, o.addData(h, m, y, n, i); break; case 'A': _ = f[v++], x = f[v++], w = f[v++], b = f[v++], S = f[v++], M = n, I = i, n = f[v++], i = f[v++], h = s.A, Qr(M, I, n, i, b, S, _, x, w, h, o); break; case 'a': _ = f[v++], x = f[v++], w = f[v++], b = f[v++], S = f[v++], M = n, I = i, n += f[v++], i += f[v++], h = s.A, Qr(M, I, n, i, b, S, _, x, w, h, o) } }(d === 'z' || d === 'Z') && (h = s.Z, o.addData(h), n = r, i = a), e = h } return o.toStatic(), o } function ta(t, e) { const n = Jr(t); return e = e || {}, e.buildPath = function (t) { if (t.setData) { t.setData(n.data); var e = t.getContext(); e && t.rebuildPath(e) } else { var e = t; n.rebuildPath(e) } }, e.applyTransform = function (t) { am(n, t), this.dirty(!0) }, e } function ea(t, e) { return new $r(ta(t, e)) } function na(t, e) { return $r.extend(ta(t, e)) } function ia(t, e) { for (var n = [], i = t.length, r = 0; i > r; r++) { const a = t[r]; a.path || a.createPathProxy(), a.__dirtyPath && a.buildPath(a.path, a.shape, !0), n.push(a.path) } const o = new $r(e); return o.createPathProxy(), o.buildPath = function (t) { t.appendPath(n); const e = t.getContext(); e && t.rebuildPath(e) }, o } function ra(t, e, n, i, r, a, o) { const s = 0.5 * (n - t); const l = 0.5 * (i - e); return (2 * (e - n) + s + l) * o + (-3 * (e - n) - 2 * s - l) * a + s * r + e } function aa(t, e, n) { let i = e.points; const r = e.smooth; if (i && i.length >= 2) { if (r && r !== 'spline') { const a = bm(i, r, n, e.smoothConstraint); t.moveTo(i[0][0], i[0][1]); for (var o = i.length, s = 0; (n ? o : o - 1) > s; s++) { const l = a[2 * s]; const u = a[2 * s + 1]; const h = i[(s + 1) % o]; t.bezierCurveTo(l[0], l[1], u[0], u[1], h[0], h[1]) } } else { r === 'spline' && (i = wm(i, n)), t.moveTo(i[0][0], i[0][1]); for (var s = 1, c = i.length; c > s; s++)t.lineTo(i[s][0], i[s][1]) }n && t.closePath() } } function oa(t, e, n) { const i = n && n.lineWidth; if (e && i) { const r = e.x1; const a = e.x2; const o = e.y1; const s = e.y2; Im(2 * r) === Im(2 * a) ? t.x1 = t.x2 = la(r, i, !0) : (t.x1 = r, t.x2 = a), Im(2 * o) === Im(2 * s) ? t.y1 = t.y2 = la(o, i, !0) : (t.y1 = o, t.y2 = s) } } function sa(t, e, n) { const i = n && n.lineWidth; if (e && i) { const r = e.x; const a = e.y; const o = e.width; const s = e.height; t.x = la(r, i, !0), t.y = la(a, i, !0), t.width = Math.max(la(r + o, i, !1) - t.x, o === 0 ? 0 : 1), t.height = Math.max(la(a + s, i, !1) - t.y, s === 0 ? 0 : 1) } } function la(t, e, n) { const i = Im(2 * t); return (i + Im(e)) % 2 === 0 ? i / 2 : (i + (n ? 1 : -1)) / 2 } function ua(t, e, n) { const i = t.cpx2; const r = t.cpy2; return i === null || r === null ? [(n ? wr : xr)(t.x1, t.cpx1, t.cpx2, t.x2, e), (n ? wr : xr)(t.y1, t.cpy1, t.cpy2, t.y2, e)] : [(n ? Cr : Tr)(t.x1, t.cpx1, t.x2, e), (n ? Cr : Tr)(t.y1, t.cpy1, t.y2, e)] } function ha(t) { Si.call(this, t), this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.notClear = !0 } function ca(t) { return $r.extend(t) } function da(t, e) { return na(t, e) } function fa(t, e) { qm[t] = e } function pa(t) { return qm.hasOwnProperty(t) ? qm[t] : void 0 } function ga(t, e, n, i) { const r = ea(t, e); return n && (i === 'center' && (n = ma(n, r.getBoundingRect())), ya(r, n)), r } function va(t, e, n) {
    var i = new Mi({
      style: {
        image: t, x: e.x, y: e.y, width: e.width, height: e.height
      },
      onload(t) { if (n === 'center') { const r = {width: t.width, height: t.height}; i.setStyle(ma(e, r)) } }
    }); return i
  } function ma(t, e) {
    let n; const i = e.width / e.height; let r = t.height * i; r <= t.width ? n = t.height : (r = t.width, n = r / i); const a = t.x + t.width / 2; const o = t.y + t.height / 2; return {
      x: a - r / 2, y: o - n / 2, width: r, height: n
    }
  } function ya(t, e) { if (t.applyTransform) { const n = t.getBoundingRect(); const i = n.calculateTransform(e); t.applyTransform(i) } } function _a(t) { return oa(t.shape, t.shape, t.style), t } function xa(t) { return sa(t.shape, t.shape, t.style), t } function wa(t) { return t != null && t !== 'none' } function ba(t) { if (typeof t !== 'string') return t; let e = Km.get(t); return e || (e = Je(t, -0.1), $m < 1e4 && (Km.set(t, e), $m++)), e } function Sa(t) { if (t.__hoverStlDirty) { t.__hoverStlDirty = !1; const e = t.__hoverStl; if (!e) return void (t.__cachedNormalStl = t.__cachedNormalZ2 = null); const n = t.__cachedNormalStl = {}; t.__cachedNormalZ2 = t.z2; const i = t.style; for (const r in e)e[r] != null && (n[r] = i[r]); n.fill = i.fill, n.stroke = i.stroke } } function Ma(t) { const e = t.__hoverStl; if (e && !t.__highlighted) { const n = t.__zr; const i = t.useHoverLayer && n && n.painter.type === 'canvas'; if (t.__highlighted = i ? 'layer' : 'plain', !(t.isGroup || !n && t.useHoverLayer)) { let r = t; let a = t.style; i && (r = n.addHover(t), a = r.style), qa(a), i || Sa(r), a.extendFrom(e), Ia(a, e, 'fill'), Ia(a, e, 'stroke'), Ua(a), i || (t.dirty(!1), t.z2 += Hm) } } } function Ia(t, e, n) { !wa(e[n]) && wa(t[n]) && (t[n] = ba(t[n])) } function Ta(t) { const e = t.__highlighted; if (e && (t.__highlighted = !1, !t.isGroup)) if (e === 'layer')t.__zr && t.__zr.removeHover(t); else { const n = t.style; const i = t.__cachedNormalStl; i && (qa(n), t.setStyle(i), Ua(n)); const r = t.__cachedNormalZ2; r != null && t.z2 - r === Hm && (t.z2 = r) } } function Ca(t, e, n) { let i; let r = Xm; let a = Xm; t.__highlighted && (r = Wm, i = !0), e(t, n), t.__highlighted && (a = Wm, i = !0), t.isGroup && t.traverse(function (t) { !t.isGroup && e(t, n) }), i && t.__highDownOnUpdate && t.__highDownOnUpdate(r, a) } function Da(t, e) { e = t.__hoverStl = e !== !1 && (t.hoverStyle || e || {}), t.__hoverStlDirty = !0, t.__highlighted && (t.__cachedNormalStl = null, Ta(t), Ma(t)) } function Aa(t) { !Oa(this, t) && !this.__highByOuter && Ca(this, Ma) } function ka(t) { !Oa(this, t) && !this.__highByOuter && Ca(this, Ta) } function Pa(t) { this.__highByOuter |= 1 << (t || 0), Ca(this, Ma) } function La(t) { !(this.__highByOuter &= ~(1 << (t || 0))) && Ca(this, Ta) } function Oa(t, e) { return t.__highDownSilentOnTouch && e.zrByTouch } function Ba(t, e) { Ea(t, !0), Ca(t, Da, e) } function Ea(t, e) { const n = e === !1; if (t.__highDownSilentOnTouch = t.highDownSilentOnTouch, t.__highDownOnUpdate = t.highDownOnUpdate, !n || t.__highDownDispatcher) { const i = n ? 'off' : 'on'; t[i]('mouseover', Aa)[i]('mouseout', ka), t[i]('emphasis', Pa)[i]('normal', La), t.__highByOuter = t.__highByOuter || 0, t.__highDownDispatcher = !n } } function za(t) { return !(!t || !t.__highDownDispatcher) } function Ra(t) { let e = Um[t]; return e == null && Ym <= 32 && (e = Um[t] = Ym++), e } function Na(t, e, n, i, r, a, o) { r = r || Vm; let s; const l = r.labelFetcher; const u = r.labelDataIndex; const h = r.labelDimIndex; const c = n.getShallow('show'); const d = i.getShallow('show'); (c || d) && (l && (s = l.getFormattedLabel(u, 'normal', null, h)), s == null && (s = w(r.defaultText) ? r.defaultText(u, r) : r.defaultText)); const f = c ? s : null; const p = d ? A(l ? l.getFormattedLabel(u, 'emphasis', null, h) : null, s) : null; (f != null || p != null) && (Va(t, n, a, r), Va(e, i, o, r, !0)), t.text = f, e.text = p } function Fa(t, e, n) { let i = t.style; e && (qa(i), t.setStyle(e), Ua(i)), i = t.__hoverStl, n && i && (qa(i), o(i, n), Ua(i)) } function Va(t, e, n, i, r) { return Ga(t, e, i, r), n && o(t, n), t } function Ha(t, e, n) { let i; const r = {isRectText: !0}; n === !1 ? i = !0 : r.autoColor = n, Ga(t, e, r, i) } function Ga(t, e, n, i) { if (n = n || Vm, n.isRectText) { let r; n.getTextPosition ? r = n.getTextPosition(e, i) : (r = e.getShallow('position') || (i ? null : 'inside'), r === 'outside' && (r = 'top')), t.textPosition = r, t.textOffset = e.getShallow('offset'); let a = e.getShallow('rotate'); a != null && (a *= Math.PI / 180), t.textRotation = a, t.textDistance = A(e.getShallow('distance'), i ? null : 5) } let o; const s = e.ecModel; const l = s && s.option.textStyle; const u = Wa(e); if (u) { o = {}; for (const h in u) if (u.hasOwnProperty(h)) { const c = e.getModel(['rich', h]); Xa(o[h] = {}, c, l, n, i) } } return t.rich = o, Xa(t, e, l, n, i, !0), n.forceRich && !n.textStyle && (n.textStyle = {}), t } function Wa(t) { for (var e; t && t !== t.ecModel;) { const n = (t.option || Vm).rich; if (n) { e = e || {}; for (const i in n)n.hasOwnProperty(i) && (e[i] = 1) }t = t.parentModel } return e } function Xa(t, e, n, i, r, a) { n = !r && n || Vm, t.textFill = Ya(e.getShallow('color'), i) || n.color, t.textStroke = Ya(e.getShallow('textBorderColor'), i) || n.textBorderColor, t.textStrokeWidth = A(e.getShallow('textBorderWidth'), n.textBorderWidth), r || (a && (t.insideRollbackOpt = i, Ua(t)), t.textFill == null && (t.textFill = i.autoColor)), t.fontStyle = e.getShallow('fontStyle') || n.fontStyle, t.fontWeight = e.getShallow('fontWeight') || n.fontWeight, t.fontSize = e.getShallow('fontSize') || n.fontSize, t.fontFamily = e.getShallow('fontFamily') || n.fontFamily, t.textAlign = e.getShallow('align'), t.textVerticalAlign = e.getShallow('verticalAlign') || e.getShallow('baseline'), t.textLineHeight = e.getShallow('lineHeight'), t.textWidth = e.getShallow('width'), t.textHeight = e.getShallow('height'), t.textTag = e.getShallow('tag'), a && i.disableBox || (t.textBackgroundColor = Ya(e.getShallow('backgroundColor'), i), t.textPadding = e.getShallow('padding'), t.textBorderColor = Ya(e.getShallow('borderColor'), i), t.textBorderWidth = e.getShallow('borderWidth'), t.textBorderRadius = e.getShallow('borderRadius'), t.textBoxShadowColor = e.getShallow('shadowColor'), t.textBoxShadowBlur = e.getShallow('shadowBlur'), t.textBoxShadowOffsetX = e.getShallow('shadowOffsetX'), t.textBoxShadowOffsetY = e.getShallow('shadowOffsetY')), t.textShadowColor = e.getShallow('textShadowColor') || n.textShadowColor, t.textShadowBlur = e.getShallow('textShadowBlur') || n.textShadowBlur, t.textShadowOffsetX = e.getShallow('textShadowOffsetX') || n.textShadowOffsetX, t.textShadowOffsetY = e.getShallow('textShadowOffsetY') || n.textShadowOffsetY } function Ya(t, e) { return t !== 'auto' ? t : e && e.autoColor ? e.autoColor : null } function Ua(t) { let e; const n = t.textPosition; const i = t.insideRollbackOpt; if (i && t.textFill == null) { const r = i.autoColor; const a = i.isRectText; const o = i.useInsideStyle; const s = o !== !1 && (o === !0 || a && n && typeof n === 'string' && n.indexOf('inside') >= 0); const l = !s && r != null; (s || l) && (e = {textFill: t.textFill, textStroke: t.textStroke, textStrokeWidth: t.textStrokeWidth}), s && (t.textFill = '#fff', t.textStroke == null && (t.textStroke = r, t.textStrokeWidth == null && (t.textStrokeWidth = 2))), l && (t.textFill = r) }t.insideRollback = e } function qa(t) { const e = t.insideRollback; e && (t.textFill = e.textFill, t.textStroke = e.textStroke, t.textStrokeWidth = e.textStrokeWidth, t.insideRollback = null) } function ja(t, e) { const n = e && e.getModel('textStyle'); return B([t.fontStyle || n && n.getShallow('fontStyle') || '', t.fontWeight || n && n.getShallow('fontWeight') || '', `${t.fontSize || n && n.getShallow('fontSize') || 12}px`, t.fontFamily || n && n.getShallow('fontFamily') || 'sans-serif'].join(' ')) } function Za(t, e, n, i, r, a) {
    typeof r === 'function' && (a = r, r = null); const o = i && i.isAnimationEnabled(); if (o) {
      const s = t ? 'Update' : ''; let l = i.getShallow(`animationDuration${s}`); const u = i.getShallow(`animationEasing${s}`); let
        h = i.getShallow(`animationDelay${s}`); typeof h === 'function' && (h = h(r, i.getAnimationDelayParams ? i.getAnimationDelayParams(e, r) : null)), typeof l === 'function' && (l = l(r)), l > 0 ? e.animateTo(n, l, h || 0, u, a, !!a) : (e.stopAnimation(), e.attr(n), a && a())
    } else e.stopAnimation(), e.attr(n), a && a()
  } function Ka(t, e, n, i, r) { Za(!0, t, e, n, i, r) } function $a(t, e, n, i, r) { Za(!1, t, e, n, i, r) } function Qa(t, e) { for (var n = ke([]); t && t !== e;)Le(n, t.getLocalTransform(), n), t = t.parent; return n } function Ja(t, e, n) { return e && !d(e) && (e = Ip.getLocalTransform(e)), n && (e = ze([], e)), ae([], t, e) } function to(t, e, n) { const i = e[4] === 0 || e[5] === 0 || e[0] === 0 ? 1 : Math.abs(2 * e[4] / e[0]); const r = e[4] === 0 || e[5] === 0 || e[2] === 0 ? 1 : Math.abs(2 * e[4] / e[2]); let a = [t === 'left' ? -i : t === 'right' ? i : 0, t === 'top' ? -r : t === 'bottom' ? r : 0]; return a = Ja(a, e, n), Math.abs(a[0]) > Math.abs(a[1]) ? a[0] > 0 ? 'right' : 'left' : a[1] > 0 ? 'bottom' : 'top' } function eo(t, e, n) { function i(t) { const e = {}; return t.traverse(function (t) { !t.isGroup && t.anid && (e[t.anid] = t) }), e } function r(t) { const e = {position: W(t.position), rotation: t.rotation}; return t.shape && (e.shape = o({}, t.shape)), e } if (t && e) { const a = i(t); e.traverse(function (t) { if (!t.isGroup && t.anid) { const e = a[t.anid]; if (e) { const i = r(t); t.attr(r(e)), Ka(t, i, n, t.dataIndex) } } }) } } function no(t, e) { return p(t, function (t) { let n = t[0]; n = Nm(n, e.x), n = Fm(n, e.x + e.width); let i = t[1]; return i = Nm(i, e.y), i = Fm(i, e.y + e.height), [n, i] }) } function io(t, e) {
    const n = Nm(t.x, e.x); const i = Fm(t.x + t.width, e.x + e.width); const r = Nm(t.y, e.y); const a = Fm(t.y + t.height, e.y + e.height); return i >= n && a >= r ? {
      x: n, y: r, width: i - n, height: a - r
    } : void 0
  } function ro(t, e, n) {
    e = o({rectHover: !0}, e); const i = e.style = {strokeNoScale: !0}; return n = n || {
      x: -1, y: -1, width: 2, height: 2
    }, t ? t.indexOf('image://') === 0 ? (i.image = t.slice(8), s(i, n), new Mi(e)) : ga(t.replace('path://', ''), e, n, 'center') : void 0
  } function ao(t, e, n, i, r) { for (let a = 0, o = r[r.length - 1]; a < r.length; a++) { const s = r[a]; if (oo(t, e, n, i, s[0], s[1], o[0], o[1])) return !0; o = s } } function oo(t, e, n, i, r, a, o, s) { const l = n - t; const u = i - e; const h = o - r; const c = s - a; const d = so(h, c, l, u); if (lo(d)) return !1; const f = t - r; const p = e - a; const g = so(f, p, l, u) / d; if (g < 0 || g > 1) return !1; const v = so(f, p, h, c) / d; return v < 0 || v > 1 ? !1 : !0 } function so(t, e, n, i) { return t * i - n * e } function lo(t) { return t <= 1e-6 && t >= -1e-6 } function uo(t, e, n) { this.parentModel = e, this.ecModel = n, this.option = t } function ho(t, e, n) { for (let i = 0; i < e.length && (!e[i] || (t = t && typeof t === 'object' ? t[e[i]] : null, t != null)); i++);return t == null && n && (t = n.get(e)), t } function co(t, e) { const n = ry(t).getParent; return n ? n.call(t, e) : t.parentModel } function fo(t) { return [t || '', ay++, Math.random().toFixed(5)].join('_') } function po(t) { const e = {}; return t.registerSubTypeDefaulter = function (t, n) { t = cr(t), e[t.main] = n }, t.determineSubType = function (n, i) { let r = i.type; if (!r) { const a = cr(n).main; t.hasSubTypes(n) && e[a] && (r = e[a](i)) } return r }, t } function go(t, e) {
    function n(t) { const n = {}; const a = []; return f(t, function (o) { const s = i(n, o); const l = s.originalDeps = e(o); const h = r(l, t); s.entryCount = h.length, s.entryCount === 0 && a.push(o), f(h, function (t) { u(s.predecessor, t) < 0 && s.predecessor.push(t); const e = i(n, t); u(e.successor, t) < 0 && e.successor.push(o) }) }), {graph: n, noEntryList: a} } function i(t, e) { return t[e] || (t[e] = {predecessor: [], successor: []}), t[e] } function r(t, e) { const n = []; return f(t, function (t) { u(e, t) >= 0 && n.push(t) }), n }t.topologicalTravel = function (t, e, i, r) {
      function a(t) {
        l[t].entryCount--, l[t].entryCount === 0 && u.push(t)
      } function o(t) { h[t] = !0, a(t) } if (t.length) { const s = n(e); var l = s.graph; var u = s.noEntryList; var h = {}; for (f(t, function (t) { h[t] = !0 }); u.length;) { const c = u.pop(); const d = l[c]; const p = !!h[c]; p && (i.call(r, c, d.originalDeps.slice()), delete h[c]), f(d.successor, p ? o : a) }f(h, function () { throw new Error('Circle dependency may exists') }) }
    }
  } function vo(t) { return t.replace(/^\s+|\s+$/g, '') } function mo(t, e, n, i) { const r = e[1] - e[0]; const a = n[1] - n[0]; if (r === 0) return a === 0 ? n[0] : (n[0] + n[1]) / 2; if (i) if (r > 0) { if (t <= e[0]) return n[0]; if (t >= e[1]) return n[1] } else { if (t >= e[0]) return n[0]; if (t <= e[1]) return n[1] } else { if (t === e[0]) return n[0]; if (t === e[1]) return n[1] } return (t - e[0]) / r * a + n[0] } function yo(t, e) { switch (t) { case 'center': case 'middle': t = '50%'; break; case 'left': case 'top': t = '0%'; break; case 'right': case 'bottom': t = '100%' } return typeof t === 'string' ? vo(t).match(/%$/) ? parseFloat(t) / 100 * e : parseFloat(t) : t == null ? 0 / 0 : +t } function _o(t, e, n) { return e == null && (e = 10), e = Math.min(Math.max(0, e), 20), t = (+t).toFixed(e), n ? t : +t } function xo(t) { return t.sort(function (t, e) { return t - e }), t } function wo(t) { if (t = +t, isNaN(t)) return 0; for (var e = 1, n = 0; Math.round(t * e) / e !== t;)e *= 10, n++; return n } function bo(t) { const e = t.toString(); const n = e.indexOf('e'); if (n > 0) { const i = +e.slice(n + 1); return i < 0 ? -i : 0 } const r = e.indexOf('.'); return r < 0 ? 0 : e.length - 1 - r } function So(t, e) { const n = Math.log; const i = Math.LN10; const r = Math.floor(n(t[1] - t[0]) / i); const a = Math.round(n(Math.abs(e[1] - e[0])) / i); const o = Math.min(Math.max(-r + a, 0), 20); return isFinite(o) ? o : 20 } function Mo(t, e, n) { if (!t[e]) return 0; const i = g(t, function (t, e) { return t + (isNaN(e) ? 0 : e) }, 0); if (i === 0) return 0; for (var r = Math.pow(10, n), a = p(t, function (t) { return (isNaN(t) ? 0 : t) / i * r * 100 }), o = 100 * r, s = p(a, function (t) { return Math.floor(t) }), l = g(s, function (t, e) { return t + e }, 0), u = p(a, function (t, e) { return t - s[e] }); o > l;) { for (var h = Number.NEGATIVE_INFINITY, c = null, d = 0, f = u.length; f > d; ++d)u[d] > h && (h = u[d], c = d); ++s[c], u[c] = 0, ++l } return s[e] / r } function Io(t) { const e = 2 * Math.PI; return (t % e + e) % e } function To(t) { return t > -oy && oy > t } function Co(t) { if (t instanceof Date) return t; if (typeof t === 'string') { const e = ly.exec(t); if (!e) return new Date(0 / 0); if (e[8]) { let n = +e[4] || 0; return e[8].toUpperCase() !== 'Z' && (n -= e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, n, +(e[5] || 0), +e[6] || 0, +e[7] || 0)) } return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, +e[7] || 0) } return new Date(t == null ? 0 / 0 : Math.round(t)) } function Do(t) { return Math.pow(10, Ao(t)) } function Ao(t) { if (t === 0) return 0; let e = Math.floor(Math.log(t) / Math.LN10); return t / Math.pow(10, e) >= 10 && e++, e } function ko(t, e) { let n; const i = Ao(t); const r = Math.pow(10, i); const a = t / r; return n = e ? a < 1.5 ? 1 : a < 2.5 ? 2 : a < 4 ? 3 : a < 7 ? 5 : 10 : a < 1 ? 1 : a < 2 ? 2 : a < 3 ? 3 : a < 5 ? 5 : 10, t = n * r, i >= -20 ? +t.toFixed(i < 0 ? -i : 0) : t } function Po(t, e) { const n = (t.length - 1) * e + 1; const i = Math.floor(n); const r = +t[i - 1]; const a = n - i; return a ? r + a * (t[i] - r) : r } function Lo(t) { function e(t, n, i) { return t.interval[i] < n.interval[i] || t.interval[i] === n.interval[i] && (t.close[i] - n.close[i] === (i ? -1 : 1) || !i && e(t, n, 1)) }t.sort(function (t, n) { return e(t, n, 0) ? -1 : 1 }); for (let n = -1 / 0, i = 1, r = 0; r < t.length;) { for (var a = t[r].interval, o = t[r].close, s = 0; s < 2; s++)a[s] <= n && (a[s] = n, o[s] = s ? 1 : 1 - i), n = a[s], i = o[s]; a[0] === a[1] && o[0] * o[1] !== 1 ? t.splice(r, 1) : r++ } return t } function Oo(t) { return t - parseFloat(t) >= 0 } function Bo(t) { return isNaN(t) ? '-' : (t = (`${t}`).split('.'), t[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, '$1,') + (t.length > 1 ? `.${t[1]}` : '')) } function Eo(t, e) { return t = (t || '').toLowerCase().replace(/-(.)/g, function (t, e) { return e.toUpperCase() }), e && t && (t = t.charAt(0).toUpperCase() + t.slice(1)), t } function zo(t) { return t == null ? '' : (`${t}`).replace(cy, function (t, e) { return dy[e] }) } function Ro(t, e, n) { x(e) || (e = [e]); const i = e.length; if (!i) return ''; for (var r = e[0].$vars || [], a = 0; a < r.length; a++) { const o = fy[a]; t = t.replace(py(o), py(o, 0)) } for (let s = 0; i > s; s++) for (let l = 0; l < r.length; l++) { const u = e[s][r[l]]; t = t.replace(py(fy[l], s), n ? zo(u) : u) } return t } function No(t, e, n) { return f(e, function (e, i) { t = t.replace(`{${i}}`, n ? zo(e) : e) }), t } function Fo(t, e) { t = b(t) ? {color: t, extraCssText: e} : t || {}; const n = t.color; const i = t.type; var e = t.extraCssText; const r = t.renderMode || 'html'; const a = t.markerId || 'X'; return n ? r === 'html' ? i === 'subItem' ? `<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:${zo(n)};${e || ''}"></span>` : `<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:${zo(n)};${e || ''}"></span>` : {renderMode: r, content: `{marker${a}|}  `, style: {color: n}} : '' } function Vo(t, e) { return t += '', '0000'.substr(0, e - t.length) + t } function Ho(t, e, n) {
    (t === 'week' || t === 'month' || t === 'quarter' || t === 'half-year' || t === 'year') && (t = 'MM-dd\nyyyy'); const i = Co(e); const r = n ? 'UTC' : ''; const a = i[`get${r}FullYear`](); const o = i[`get${r}Month`]() + 1; const s = i[`get${r}Date`](); const l = i[`get${r}Hours`](); const u = i[`get${r}Minutes`](); const h = i[`get${r}Seconds`](); const c = i[`get${r}Milliseconds`](); return t = t.replace('MM', Vo(o, 2)).replace('M', o).replace('yyyy', a).replace('yy', a % 100)
      .replace('dd', Vo(s, 2))
      .replace('d', s)
      .replace('hh', Vo(l, 2))
      .replace('h', l)
      .replace('mm', Vo(u, 2))
      .replace('m', u)
      .replace('ss', Vo(h, 2))
      .replace('s', h)
      .replace('SSS', Vo(c, 3))
  } function Go(t) { return t ? t.charAt(0).toUpperCase() + t.substr(1) : t } function Wo(t) { return Gn(t.text, t.font, t.textAlign, t.textVerticalAlign, t.textPadding, t.textLineHeight, t.rich, t.truncate) } function Xo(t, e, n, i, r, a, o, s) { return Gn(t, e, n, i, r, s, a, o) } function Yo(t, e, n, i, r) { let a = 0; let o = 0; i == null && (i = 1 / 0), r == null && (r = 1 / 0); let s = 0; e.eachChild(function (l, u) { let h; let c; const d = l.position; const f = l.getBoundingRect(); const p = e.childAt(u + 1); const g = p && p.getBoundingRect(); if (t === 'horizontal') { const v = f.width + (g ? -g.x + f.x : 0); h = a + v, h > i || l.newline ? (a = 0, h = v, o += s + n, s = f.height) : s = Math.max(s, f.height) } else { const m = f.height + (g ? -g.y + f.y : 0); c = o + m, c > r || l.newline ? (a += s + n, o = 0, c = m, s = f.width) : s = Math.max(s, f.width) }l.newline || (d[0] = a, d[1] = o, t === 'horizontal' ? a = h + n : o = c + n) }) } function Uo(t, e, n) { n = hy(n || 0); const i = e.width; const r = e.height; let a = yo(t.left, i); let o = yo(t.top, r); const s = yo(t.right, i); const l = yo(t.bottom, r); let u = yo(t.width, i); let h = yo(t.height, r); const c = n[2] + n[0]; const d = n[1] + n[3]; const f = t.aspect; switch (isNaN(u) && (u = i - s - d - a), isNaN(h) && (h = r - l - c - o), f != null && (isNaN(u) && isNaN(h) && (f > i / r ? u = 0.8 * i : h = 0.8 * r), isNaN(u) && (u = f * h), isNaN(h) && (h = u / f)), isNaN(a) && (a = i - s - u - d), isNaN(o) && (o = r - l - h - c), t.left || t.right) { case 'center': a = i / 2 - u / 2 - n[3]; break; case 'right': a = i - u - d } switch (t.top || t.bottom) { case 'middle': case 'center': o = r / 2 - h / 2 - n[0]; break; case 'bottom': o = r - h - c }a = a || 0, o = o || 0, isNaN(u) && (u = i - d - a - (s || 0)), isNaN(h) && (h = r - c - o - (l || 0)); const p = new Sn(a + n[3], o + n[0], u, h); return p.margin = n, p } function qo(t, e, n) { function i(n, i) { const o = {}; let l = 0; const u = {}; let h = 0; const c = 2; if (my(n, function (e) { u[e] = t[e] }), my(n, function (t) { r(e, t) && (o[t] = u[t] = e[t]), a(o, t) && l++, a(u, t) && h++ }), s[i]) return a(e, n[1]) ? u[n[2]] = null : a(e, n[2]) && (u[n[1]] = null), u; if (h !== c && l) { if (l >= c) return o; for (let d = 0; d < n.length; d++) { const f = n[d]; if (!r(o, f) && r(t, f)) { o[f] = t[f]; break } } return o } return u } function r(t, e) { return t.hasOwnProperty(e) } function a(t, e) { return t[e] != null && t[e] !== 'auto' } function o(t, e, n) { my(t, function (t) { e[t] = n[t] }) }!S(n) && (n = {}); var s = n.ignoreSize; !x(s) && (s = [s, s]); const l = i(_y[0], 0); const u = i(_y[1], 1); o(_y[0], t, l), o(_y[1], t, u) } function jo(t) { return Zo({}, t) } function Zo(t, e) { return e && t && my(yy, function (n) { e.hasOwnProperty(n) && (t[n] = e[n]) }), t } function Ko(t) { let e = []; return f(Sy.getClassesByMainType(t), function (t) { e = e.concat(t.prototype.dependencies || []) }), e = p(e, function (t) { return cr(t).main }), t !== 'dataset' && u(e, 'dataset') <= 0 && e.unshift('dataset'), e } function $o(t, e) { for (var n = t.length, i = 0; n > i; i++) if (t[i].length > e) return t[i]; return t[n - 1] } function Qo(t) { this.fromDataset = t.fromDataset, this.data = t.data || (t.sourceFormat === Py ? {} : []), this.sourceFormat = t.sourceFormat || Ly, this.seriesLayoutBy = t.seriesLayoutBy || By, this.dimensionsDefine = t.dimensionsDefine, this.encodeDefine = t.encodeDefine && N(t.encodeDefine), this.startIndex = t.startIndex || 0, this.dimensionsDetectCount = t.dimensionsDetectCount } function Jo(t) { const e = t.option.source; let n = Ly; if (I(e))n = Oy; else if (x(e)) { e.length === 0 && (n = Ay); for (let i = 0, r = e.length; r > i; i++) { const a = e[i]; if (a != null) { if (x(a)) { n = Ay; break } if (S(a)) { n = ky; break } } } } else if (S(e)) { for (const o in e) if (e.hasOwnProperty(o) && d(e[o])) { n = Py; break } } else if (e != null) throw new Error('Invalid data'); Ry(t).sourceFormat = n } function ts(t) { return Ry(t).source } function es(t) { Ry(t).datasetMap = N() } function ns(t) {
    const e = t.option; let n = e.data; let i = I(n) ? Oy : Dy; let r = !1; let a = e.seriesLayoutBy; let o = e.sourceHeader; let s = e.dimensions; const l = us(t); if (l) { const u = l.option; n = u.source, i = Ry(l).sourceFormat, r = !0, a = a || u.seriesLayoutBy, o == null && (o = u.sourceHeader), s = s || u.dimensions } const h = is(n, i, a, o, s); Ry(t).source = new Qo({
      data: n, fromDataset: r, seriesLayoutBy: a, sourceFormat: i, dimensionsDefine: h.dimensionsDefine, startIndex: h.startIndex, dimensionsDetectCount: h.dimensionsDetectCount, encodeDefine: e.encode
    })
  } function is(t, e, n, i, r) { if (!t) return {dimensionsDefine: rs(r)}; let a; let o; if (e === Ay)i === 'auto' || i == null ? as(function (t) { t != null && t !== '-' && (b(t) ? o == null && (o = 1) : o = 0) }, n, t, 10) : o = i ? 1 : 0, r || o !== 1 || (r = [], as(function (t, e) { r[e] = t != null ? t : '' }, n, t)), a = r ? r.length : n === Ey ? t.length : t[0] ? t[0].length : null; else if (e === ky)r || (r = os(t)); else if (e === Py)r || (r = [], f(t, function (t, e) { r.push(e) })); else if (e === Dy) { const s = Qi(t[0]); a = x(s) && s.length || 1 } return {startIndex: o, dimensionsDefine: rs(r), dimensionsDetectCount: a} } function rs(t) { if (t) { const e = N(); return p(t, function (t) { if (t = o({}, S(t) ? t : {name: t}), t.name == null) return t; t.name += '', t.displayName == null && (t.displayName = t.name); const n = e.get(t.name); return n ? t.name += `-${n.count++}` : e.set(t.name, {count: 1}), t }) } } function as(t, e, n, i) { if (i == null && (i = 1 / 0), e === Ey) for (var r = 0; r < n.length && i > r; r++)t(n[r] ? n[r][0] : null, r); else for (var a = n[0] || [], r = 0; r < a.length && i > r; r++)t(a[r], r) } function os(t) { for (var e, n = 0; n < t.length && !(e = t[n++]););if (e) { const i = []; return f(e, function (t, e) { i.push(e) }), i } } function ss(t, e, n) { function i(t, e, n) { for (let i = 0; n > i; i++)t.push(e + i) } function r(t) { const e = t.dimsDef; return e ? e.length : 1 } const a = {}; const o = us(e); if (!o || !t) return a; let s; let l; const u = []; const h = []; const c = e.ecModel; const d = Ry(c).datasetMap; const p = `${o.uid}_${n.seriesLayoutBy}`; t = t.slice(), f(t, function (e, n) { !S(e) && (t[n] = {name: e}), e.type === 'ordinal' && s == null && (s = n, l = r(t[n])), a[e.name] = [] }); const g = d.get(p) || d.set(p, {categoryWayDim: l, valueWayDim: 0}); return f(t, function (t, e) { const n = t.name; const o = r(t); if (s == null) { var l = g.valueWayDim; i(a[n], l, o), i(h, l, o), g.valueWayDim += o } else if (s === e)i(a[n], 0, o), i(u, 0, o); else { var l = g.categoryWayDim; i(a[n], l, o), i(h, l, o), g.categoryWayDim += o } }), u.length && (a.itemName = u), h.length && (a.seriesName = h), a } function ls(t, e, n) { const i = {}; const r = us(t); if (!r) return i; let a; const o = e.sourceFormat; const s = e.dimensionsDefine; (o === ky || o === Py) && f(s, function (t, e) { (S(t) ? t.name : t) === 'name' && (a = e) }); const l = (function () { function t(t) { return t.v != null && t.n != null } for (var i = {}, r = {}, l = [], u = 0, h = Math.min(5, n); h > u; u++) { const c = cs(e.data, o, e.seriesLayoutBy, s, e.startIndex, u); l.push(c); const d = c === zy.Not; if (d && i.v == null && u !== a && (i.v = u), (i.n == null || i.n === i.v || !d && l[i.n] === zy.Not) && (i.n = u), t(i) && l[i.n] !== zy.Not) return i; d || (c === zy.Might && r.v == null && u !== a && (r.v = u), (r.n == null || r.n === r.v) && (r.n = u)) } return t(i) ? i : t(r) ? r : null }()); if (l) { i.value = l.v; const u = a != null ? a : l.n; i.itemName = [u], i.seriesName = [u] } return i } function us(t) { const e = t.option; const n = e.data; return n ? void 0 : t.ecModel.getComponent('dataset', e.datasetIndex || 0) } function hs(t, e) { return cs(t.data, t.sourceFormat, t.seriesLayoutBy, t.dimensionsDefine, t.startIndex, e) } function cs(t, e, n, i, r, a) { function o(t) { const e = b(t); return t != null && isFinite(t) && t !== '' ? e ? zy.Might : zy.Not : e && t !== '-' ? zy.Must : void 0 } let s; const l = 5; if (I(t)) return zy.Not; let u; let h; if (i) { const c = i[a]; S(c) ? (u = c.name, h = c.type) : b(c) && (u = c) } if (h != null) return h === 'ordinal' ? zy.Must : zy.Not; if (e === Ay) if (n === Ey) { for (var d = t[a], f = 0; f < (d || []).length && l > f; f++) if ((s = o(d[r + f])) != null) return s } else for (var f = 0; f < t.length && l > f; f++) { const p = t[r + f]; if (p && (s = o(p[a])) != null) return s } else if (e === ky) { if (!u) return zy.Not; for (var f = 0; f < t.length && l > f; f++) { var g = t[f]; if (g && (s = o(g[u])) != null) return s } } else if (e === Py) { if (!u) return zy.Not; var d = t[u]; if (!d || I(d)) return zy.Not; for (var f = 0; f < d.length && l > f; f++) if ((s = o(d[f])) != null) return s } else if (e === Dy) for (var f = 0; f < t.length && l > f; f++) { var g = t[f]; const v = Qi(g); if (!x(v)) return zy.Not; if ((s = o(v[a])) != null) return s } return zy.Not } function ds(t, e) { if (e) { const n = e.seiresIndex; const i = e.seriesId; const r = e.seriesName; return n != null && t.componentIndex !== n || i != null && t.id !== i || r != null && t.name !== r } } function fs(t, e) { const n = t.color && !t.colorLayer; f(e, function (e, a) { a === 'colorLayer' && n || Sy.hasClass(a) || (typeof e === 'object' ? t[a] = t[a] ? r(t[a], e, !1) : i(e) : t[a] == null && (t[a] = e)) }) } function ps(t) { t = t, this.option = {}, this.option[Ny] = 1, this._componentsMap = N({series: []}), this._seriesIndices, this._seriesIndicesMap, fs(t, this._theme.option), r(t, Iy, !1), this.mergeOption(t) } function gs(t, e) { x(e) || (e = e ? [e] : []); const n = {}; return f(e, function (e) { n[e] = (t.get(e) || []).slice() }), n } function vs(t, e, n) { const i = e.type ? e.type : n ? n.subType : Sy.determineSubType(t, e); return i } function ms(t, e) { t._seriesIndicesMap = N(t._seriesIndices = p(e, function (t) { return t.componentIndex }) || []) } function ys(t, e) { return e.hasOwnProperty('subType') ? v(t, function (t) { return t.subType === e.subType }) : t } function _s(t) { f(Vy, function (e) { this[e] = y(t[e], t) }, this) } function xs() { this._coordinateSystems = [] } function ws(t) { this._api = t, this._timelineOptions = [], this._mediaList = [], this._mediaDefault, this._currentMediaIndices = [], this._optionBackup, this._newBaseOption } function bs(t, e, n) {
    let i; let r; let a = []; const o = []; const s = t.timeline; if (t.baseOption && (r = t.baseOption), (s || t.options) && (r = r || {}, a = (t.options || []).slice()), t.media) { r = r || {}; const l = t.media; Gy(l, function (t) { t && t.option && (t.query ? o.push(t) : i || (i = t)) }) } return r || (r = t), r.timeline || (r.timeline = s), Gy([r].concat(a).concat(p(o, function (t) { return t.option })), function (t) { Gy(e, function (e) { e(t, n) }) }), {
      baseOption: r, timelineOptions: a, mediaDefault: i, mediaList: o
    }
  } function Ss(t, e, n) { const i = {width: e, height: n, aspectratio: e / n}; let r = !0; return f(t, function (t, e) { const n = e.match(Uy); if (n && n[1] && n[2]) { const a = n[1]; const o = n[2].toLowerCase(); Ms(i[o], t, a) || (r = !1) } }), r } function Ms(t, e, n) { return n === 'min' ? t >= e : n === 'max' ? e >= t : t === e } function Is(t, e) { return t.join(',') === e.join(',') } function Ts(t, e) { e = e || {}, Gy(e, function (e, n) { if (e != null) { let i = t[n]; if (Sy.hasClass(n)) { e = Ki(e), i = Ki(i); const r = tr(i, e); t[n] = Xy(r, function (t) { return t.option && t.exist ? Yy(t.exist, t.option, !0) : t.exist || t.option }) } else t[n] = Yy(i, e, !0) } }) } function Cs(t) { const e = t && t.itemStyle; if (e) for (let n = 0, i = Zy.length; i > n; n++) { const a = Zy[n]; const o = e.normal; const s = e.emphasis; o && o[a] && (t[a] = t[a] || {}, t[a].normal ? r(t[a].normal, o[a]) : t[a].normal = o[a], o[a] = null), s && s[a] && (t[a] = t[a] || {}, t[a].emphasis ? r(t[a].emphasis, s[a]) : t[a].emphasis = s[a], s[a] = null) } } function Ds(t, e, n) { if (t && t[e] && (t[e].normal || t[e].emphasis)) { const i = t[e].normal; const r = t[e].emphasis; i && (n ? (t[e].normal = t[e].emphasis = null, s(t[e], i)) : t[e] = i), r && (t.emphasis = t.emphasis || {}, t.emphasis[e] = r) } } function As(t) { Ds(t, 'itemStyle'), Ds(t, 'lineStyle'), Ds(t, 'areaStyle'), Ds(t, 'label'), Ds(t, 'labelLine'), Ds(t, 'upperLabel'), Ds(t, 'edgeLabel') } function ks(t, e) { const n = jy(t) && t[e]; const i = jy(n) && n.textStyle; if (i) for (let r = 0, a = iv.length; a > r; r++) { var e = iv[r]; i.hasOwnProperty(e) && (n[e] = i[e]) } } function Ps(t) { t && (As(t), ks(t, 'label'), t.emphasis && ks(t.emphasis, 'label')) } function Ls(t) { if (jy(t)) { Cs(t), As(t), ks(t, 'label'), ks(t, 'upperLabel'), ks(t, 'edgeLabel'), t.emphasis && (ks(t.emphasis, 'label'), ks(t.emphasis, 'upperLabel'), ks(t.emphasis, 'edgeLabel')); var e = t.markPoint; e && (Cs(e), Ps(e)); var n = t.markLine; n && (Cs(n), Ps(n)); const i = t.markArea; i && Ps(i); let r = t.data; if (t.type === 'graph') { r = r || t.nodes; const a = t.links || t.edges; if (a && !I(a)) for (var o = 0; o < a.length; o++)Ps(a[o]); f(t.categories, function (t) { As(t) }) } if (r && !I(r)) for (var o = 0; o < r.length; o++)Ps(r[o]); var e = t.markPoint; if (e && e.data) for (var s = e.data, o = 0; o < s.length; o++)Ps(s[o]); var n = t.markLine; if (n && n.data) for (var l = n.data, o = 0; o < l.length; o++)x(l[o]) ? (Ps(l[o][0]), Ps(l[o][1])) : Ps(l[o]); t.type === 'gauge' ? (ks(t, 'axisLabel'), ks(t, 'title'), ks(t, 'detail')) : t.type === 'treemap' ? (Ds(t.breadcrumb, 'itemStyle'), f(t.levels, function (t) { As(t) })) : t.type === 'tree' && As(t.leaves) } } function Os(t) { return x(t) ? t : t ? [t] : [] } function Bs(t) { return (x(t) ? t[0] : t) || {} } function Es(t, e) { e = e.split(','); for (var n = t, i = 0; i < e.length && (n = n && n[e[i]], n != null); i++);return n } function zs(t, e, n, i) { e = e.split(','); for (var r, a = t, o = 0; o < e.length - 1; o++)r = e[o], a[r] == null && (a[r] = {}), a = a[r]; (i || a[e[o]] == null) && (a[e[o]] = n) } function Rs(t) { f($y, function (e) { e[0] in t && !(e[1] in t) && (t[e[1]] = t[e[0]]) }) } function Ns(t) { f(t, function (e, n) { const i = []; const r = [0 / 0, 0 / 0]; const a = [e.stackResultDimension, e.stackedOverDimension]; const o = e.data; const s = e.isStackedByIndex; const l = o.map(a, function (a, l, u) { let h = o.get(e.stackedDimension, u); if (isNaN(h)) return r; let c; let d; s ? d = o.getRawIndex(u) : c = o.get(e.stackedByDimension, u); for (var f = 0 / 0, p = n - 1; p >= 0; p--) { const g = t[p]; if (s || (d = g.data.rawIndexOf(g.stackedByDimension, c)), d >= 0) { const v = g.data.getByRawIndex(g.stackResultDimension, d); if (h >= 0 && v > 0 || h <= 0 && v < 0) { h += v, f = v; break } } } return i[0] = h, i[1] = f, i }); o.hostModel.setData(l), e.data = l }) } function Fs(t, e) { Qo.isInstance(t) || (t = Qo.seriesDataToSource(t)), this._source = t; const n = this._data = t.data; const i = t.sourceFormat; i === Oy && (this._offset = 0, this._dimSize = e, this._data = n); const r = n_[i === Ay ? `${i}_${t.seriesLayoutBy}` : i]; o(this, r) } function Vs() { return this._data.length } function Hs(t) { return this._data[t] } function Gs(t) { for (let e = 0; e < t.length; e++) this._data.push(t[e]) } function Ws(t, e, n) { return n != null ? t[n] : t } function Xs(t, e, n, i) { return Ys(t[i], this._dimensionInfos[e]) } function Ys(t, e) { const n = e && e.type; if (n === 'ordinal') { const i = e && e.ordinalMeta; return i ? i.parseAndCollect(t) : t } return n === 'time' && typeof t !== 'number' && t != null && t !== '-' && (t = +Co(t)), t == null || t === '' ? 0 / 0 : +t } function Us(t, e, n) { if (t) { const i = t.getRawDataItem(e); if (i != null) { let r; let a; const o = t.getProvider().getSource().sourceFormat; const s = t.getDimensionInfo(n); return s && (r = s.name, a = s.index), i_[o](i, e, a, r) } } } function qs(t, e, n) { if (t) { const i = t.getProvider().getSource().sourceFormat; if (i === Dy || i === ky) { let r = t.getRawDataItem(e); return i !== Dy || S(r) || (r = null), r ? r[n] : void 0 } } } function js(t) { return new Zs(t) } function Zs(t) { t = t || {}, this._reset = t.reset, this._plan = t.plan, this._count = t.count, this._onDirty = t.onDirty, this._dirty = !0, this.context } function Ks(t, e, n, i, r, a) {
    l_.reset(n, i, r, a), t._callingProgress = e, t._callingProgress({
      start: n, end: i, count: i - n, next: l_.next
    }, t.context)
  } function $s(t, e) { t._dueIndex = t._outputDueEnd = t._dueEnd = 0, t._settedOutputEnd = null; let n; let i; !e && t._reset && (n = t._reset(t.context), n && n.progress && (i = n.forceFirstProgress, n = n.progress), x(n) && !n.length && (n = null)), t._progress = n, t._modBy = t._modDataCount = null; const r = t._downstream; return r && r.dirty(), i } function Qs(t) { const e = t.name; nr(t) || (t.name = Js(t) || e) } function Js(t) { const e = t.getRawData(); const n = e.mapDimension('seriesName', !0); const i = []; return f(n, function (t) { const n = e.getDimensionInfo(t); n.displayName && i.push(n.displayName) }), i.join(' ') } function tl(t) { return t.model.getRawData().count() } function el(t) { const e = t.model; return e.setData(e.getRawData().cloneShallow()), nl } function nl(t, e) { t.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData) } function il(t, e) { f(t.CHANGABLE_METHODS, function (n) { t.wrapMethod(n, _(rl, e)) }) } function rl(t) { const e = al(t); e && e.setOutputEnd(this.count()) } function al(t) { const e = (t.ecModel || {}).scheduler; const n = e && e.getPipeline(t.uid); if (n) { let i = n.currentTask; if (i) { const r = i.agentStubMap; r && (i = r.get(t.uid)) } return i } } function ol() { this.group = new tg(), this.uid = fo('viewChart'), this.renderTask = js({plan: ul, reset: hl}), this.renderTask.context = {view: this} } function sl(t, e, n) { if (t && (t.trigger(e, n), t.isGroup && !za(t))) for (let i = 0, r = t.childCount(); r > i; i++)sl(t.childAt(i), e, n) } function ll(t, e, n) { const i = rr(t, e); const r = e && e.highlightKey != null ? Ra(e.highlightKey) : null; i != null ? f(Ki(i), function (e) { sl(t.getItemGraphicEl(e), n, r) }) : t.eachItemGraphicEl(function (t) { sl(t, n, r) }) } function ul(t) { return g_(t.model) } function hl(t) { const e = t.model; const n = t.ecModel; const i = t.api; const r = t.payload; const a = e.pipelineContext.progressiveRender; const o = t.view; const s = r && p_(r).updateMethod; const l = a ? 'incrementalPrepareRender' : s && o[s] ? s : 'render'; return l !== 'render' && o[l](e, n, i, r), m_[l] } function cl(t, e, n) { function i() { h = (new Date()).getTime(), c = null, t.apply(o, s || []) } let r; let a; let o; let s; let l; let u = 0; var h = 0; var c = null; e = e || 0; const d = function () { r = (new Date()).getTime(), o = this, s = arguments; const t = l || e; const d = l || n; l = null, a = r - (d ? u : h) - t, clearTimeout(c), d ? c = setTimeout(i, t) : a >= 0 ? i() : c = setTimeout(i, -a), u = r }; return d.clear = function () { c && (clearTimeout(c), c = null) }, d.debounceNextCall = function (t) { l = t }, d } function dl(t, e, n, i) { let r = t[e]; if (r) { const a = r[y_] || r; const o = r[x_]; const s = r[__]; if (s !== n || o !== i) { if (n == null || !i) return t[e] = a; r = t[e] = cl(a, n, i === 'debounce'), r[y_] = a, r[x_] = i, r[__] = n } return r } } function fl(t, e, n, i) { this.ecInstance = t, this.api = e, this.unfinished; var n = this._dataProcessorHandlers = n.slice(); var i = this._visualHandlers = i.slice(); this._allHandlers = n.concat(i), this._stageTaskMap = N() } function pl(t, e, n, i, r) { function a(t, e) { return t.setDirty && (!t.dirtyMap || t.dirtyMap.get(e.__pipeline.id)) }r = r || {}; let o; f(e, function (e) { if (!r.visualType || r.visualType === e.visualType) { const s = t._stageTaskMap.get(e.uid); const l = s.seriesTaskMap; const u = s.overallTask; if (u) { let h; const c = u.agentStubMap; c.each(function (t) { a(r, t) && (t.dirty(), h = !0) }), h && u.dirty(), C_(u, i); const d = t.getPerformArgs(u, r.block); c.each(function (t) { t.perform(d) }), o |= u.perform(d) } else l && l.each(function (s) { a(r, s) && s.dirty(); const l = t.getPerformArgs(s, r.block); l.skip = !e.performRawSeries && n.isSeriesFiltered(s.context.model), C_(s, i), o |= s.perform(l) }) } }), t.unfinished |= o } function gl(t, e, n, i, r) {
    function a(n) {
      const a = n.uid; const s = o.get(a) || o.set(a, js({plan: wl, reset: bl, count: Ml})); s.context = {
        model: n, ecModel: i, api: r, useClearVisual: e.isVisual && !e.isLayout, plan: e.plan, reset: e.reset, scheduler: t
      }, Il(t, n, s)
    } var o = n.seriesTaskMap || (n.seriesTaskMap = N()); const s = e.seriesType; const l = e.getTargetSeries; e.createOnAllSeries ? i.eachRawSeries(a) : s ? i.eachRawSeriesByType(s, a) : l && l(i, r).each(a); const u = t._pipelineMap; o.each(function (t, e) { u.get(e) || (t.dispose(), o.removeKey(e)) })
  } function vl(t, e, n, i, r) {
    function a(e) { const n = e.uid; let i = s.get(n); i || (i = s.set(n, js({reset: yl, onDirty: xl})), o.dirty()), i.context = {model: e, overallProgress: h, modifyOutputEnd: c}, i.agent = o, i.__block = h, Il(t, e, i) } var o = n.overallTask = n.overallTask || js({reset: ml}); o.context = {
      ecModel: i, api: r, overallReset: e.overallReset, scheduler: t
    }; var s = o.agentStubMap = o.agentStubMap || N(); const l = e.seriesType; const u = e.getTargetSeries; var h = !0; var c = e.modifyOutputEnd; l ? i.eachRawSeriesByType(l, a) : u ? u(i, r).each(a) : (h = !1, f(i.getSeries(), a)); const d = t._pipelineMap; s.each(function (t, e) { d.get(e) || (t.dispose(), o.dirty(), s.removeKey(e)) })
  } function ml(t) { t.overallReset(t.ecModel, t.api, t.payload) } function yl(t) { return t.overallProgress && _l } function _l() { this.agent.dirty(), this.getDownstream().dirty() } function xl() { this.agent && this.agent.dirty() } function wl(t) { return t.plan && t.plan(t.model, t.ecModel, t.api, t.payload) } function bl(t) { t.useClearVisual && t.data.clearAllVisual(); const e = t.resetDefines = Ki(t.reset(t.model, t.ecModel, t.api, t.payload)); return e.length > 1 ? p(e, function (t, e) { return Sl(e) }) : D_ } function Sl(t) { return function (e, n) { const i = n.data; const r = n.resetDefines[t]; if (r && r.dataEach) for (let a = e.start; a < e.end; a++)r.dataEach(i, a); else r && r.progress && r.progress(e, i) } } function Ml(t) { return t.data.count() } function Il(t, e, n) { const i = e.uid; const r = t._pipelineMap.get(i); !r.head && (r.head = n), r.tail && r.tail.pipe(n), r.tail = n, n.__idxInPipeline = r.count++, n.__pipeline = r } function Tl(t) { A_ = null; try { t(k_, P_) } catch (e) {} return A_ } function Cl(t, e) { for (const n in e.prototype)t[n] = V } function Dl(t) { if (b(t)) { const e = new DOMParser(); t = e.parseFromString(t, 'text/xml') } for (t.nodeType === 9 && (t = t.firstChild); t.nodeName.toLowerCase() !== 'svg' || t.nodeType !== 1;)t = t.nextSibling; return t } function Al() { this._defs = {}, this._root = null, this._isDefine = !1, this._isText = !1 } function kl(t, e) { for (let n = t.firstChild; n;) { if (n.nodeType === 1) { let i = n.getAttribute('offset'); i = i.indexOf('%') > 0 ? parseInt(i, 10) / 100 : i ? parseFloat(i) : 0; const r = n.getAttribute('stop-color') || '#000000'; e.addColorStop(i, r) }n = n.nextSibling } } function Pl(t, e) { t && t.__inheritedStyle && (e.__inheritedStyle || (e.__inheritedStyle = {}), s(e.__inheritedStyle, t.__inheritedStyle)) } function Ll(t) { for (var e = B(t).split(F_), n = [], i = 0; i < e.length; i += 2) { const r = parseFloat(e[i]); const a = parseFloat(e[i + 1]); n.push([r, a]) } return n } function Ol(t, e, n, i) {
    const r = e.__inheritedStyle || {}; const a = e.type === 'text'; if (t.nodeType === 1 && (El(t, e), o(r, zl(t)), !i)) for (const s in G_) if (G_.hasOwnProperty(s)) { const l = t.getAttribute(s); l != null && (r[G_[s]] = l) } const u = a ? 'textFill' : 'fill'; const
      h = a ? 'textStroke' : 'stroke'; e.style = e.style || new ug(); const c = e.style; r.fill != null && c.set(u, Bl(r.fill, n)), r.stroke != null && c.set(h, Bl(r.stroke, n)), f(['lineWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'miterLimit', 'fontSize'], function (t) { const e = t === 'lineWidth' && a ? 'textStrokeWidth' : t; r[t] != null && c.set(e, parseFloat(r[t])) }), r.textBaseline && r.textBaseline !== 'auto' || (r.textBaseline = 'alphabetic'), r.textBaseline === 'alphabetic' && (r.textBaseline = 'bottom'), r.textAlign === 'start' && (r.textAlign = 'left'), r.textAlign === 'end' && (r.textAlign = 'right'), f(['lineDashOffset', 'lineCap', 'lineJoin', 'fontWeight', 'fontFamily', 'fontStyle', 'textAlign', 'textBaseline'], function (t) { r[t] != null && c.set(t, r[t]) }), r.lineDash && (e.style.lineDash = B(r.lineDash).split(F_)), c[h] && c[h] !== 'none' && (e[h] = !0), e.__inheritedStyle = r
  } function Bl(t, e) { const n = e && t && t.match(W_); if (n) { const i = B(n[1]); const r = e[i]; return r } return t } function El(t, e) { let n = t.getAttribute('transform'); if (n) { n = n.replace(/,/g, ' '); let i = null; const r = []; n.replace(X_, function (t, e, n) { r.push(e, n) }); for (let a = r.length - 1; a > 0; a -= 2) { var o = r[a]; const s = r[a - 1]; switch (i = i || Ae(), s) { case 'translate': o = B(o).split(F_), Oe(i, i, [parseFloat(o[0]), parseFloat(o[1] || 0)]); break; case 'scale': o = B(o).split(F_), Ee(i, i, [parseFloat(o[0]), parseFloat(o[1] || o[0])]); break; case 'rotate': o = B(o).split(F_), Be(i, i, parseFloat(o[0])); break; case 'skew': o = B(o).split(F_), console.warn('Skew transform is not supported yet'); break; case 'matrix': var o = B(o).split(F_); i[0] = parseFloat(o[0]), i[1] = parseFloat(o[1]), i[2] = parseFloat(o[2]), i[3] = parseFloat(o[3]), i[4] = parseFloat(o[4]), i[5] = parseFloat(o[5]) } }e.setLocalTransform(i) } } function zl(t) { const e = t.getAttribute('style'); const n = {}; if (!e) return n; const i = {}; Y_.lastIndex = 0; for (var r; (r = Y_.exec(e)) != null;)i[r[1]] = r[2]; for (const a in G_)G_.hasOwnProperty(a) && i[a] != null && (n[G_[a]] = i[a]); return n } function Rl(t, e, n) { const i = e / t.width; const r = n / t.height; const a = Math.min(i, r); const o = [a, a]; const s = [-(t.x + t.width / 2) * a + e / 2, -(t.y + t.height / 2) * a + n / 2]; return {scale: o, position: s} } function Nl(t, e) { return function (n, i, r) { (e || !this._disposed) && (n = n && n.toLowerCase(), up.prototype[t].call(this, n, i, r)) } } function Fl() { up.call(this) } function Vl(t, e, n) {
    function r(t, e) { return t.__prio - e.__prio }n = n || {}, typeof e === 'string' && (e = Dx[e]), this.id, this.group, this._dom = t; const a = 'canvas'; const o = this._zr = Yi(t, {
      renderer: n.renderer || a, devicePixelRatio: n.devicePixelRatio, width: n.width, height: n.height
    }); this._throttledZrFlush = cl(y(o.flush, o), 17); var e = i(e); e && Jy(e, !0), this._theme = e, this._chartsViews = [], this._chartsMap = {}, this._componentsViews = [], this._componentsMap = {}, this._coordSysMgr = new xs(); const s = this._api = ru(this); Pn(Cx, r), Pn(Mx, r), this._scheduler = new fl(this, s, Mx, Cx), up.call(this, this._ecEventProcessor = new au()), this._messageCenter = new Fl(), this._initEvents(), this.resize = y(this.resize, this), this._pendingActions = [], o.animation.on('frame', this._onframe, this), jl(o, this), E(this)
  } function Hl(t, e, n) { if (!this._disposed) { let i; const r = this._model; const a = this._coordSysMgr.getCoordinateSystems(); e = or(r, e); for (let o = 0; o < a.length; o++) { const s = a[o]; if (s[t] && (i = s[t](r, e, n)) != null) return i } } } function Gl(t) { const e = t._model; const n = t._scheduler; n.restorePipelines(e), n.prepareStageTasks(), Zl(t, 'component', e, n), Zl(t, 'chart', e, n), n.plan() } function Wl(t, e, n, i, r) { function a(i) { i && i.__alive && i[e] && i[e](i.__model, o, t._api, n) } var o = t._model; if (!i) return void K_(t._componentsViews.concat(t._chartsViews), a); const s = {}; s[`${i}Id`] = n[`${i}Id`], s[`${i}Index`] = n[`${i}Index`], s[`${i}Name`] = n[`${i}Name`]; const l = {mainType: i, query: s}; r && (l.subType = r); let u = n.excludeSeriesId; u != null && (u = N(Ki(u))), o && o.eachComponent(l, function (e) { u && u.get(e.id) != null || a(t[i === 'series' ? '_chartsMap' : '_componentsMap'][e.__viewId]) }, t) } function Xl(t, e) { const n = t._chartsMap; const i = t._scheduler; e.eachSeries(function (t) { i.updateStreamModes(t, n[t.__viewId]) }) } function Yl(t, e) { const n = t.type; const i = t.escapeConnect; const r = bx[n]; const a = r.actionInfo; let l = (a.update || 'update').split(':'); const u = l.pop(); l = l[0] != null && J_(l[0]), this[gx] = !0; let h = [t]; let c = !1; t.batch && (c = !0, h = p(t.batch, function (e) { return e = s(o({}, e), t), e.batch = null, e })); let d; const f = []; const g = n === 'highlight' || n === 'downplay'; K_(h, function (t) { d = r.action(t, this._model, this._api), d = d || o({}, t), d.type = a.event || d.type, f.push(d), g ? Wl(this, u, t, 'series') : l && Wl(this, u, t, l.main, l.sub) }, this), u === 'none' || g || l || (this[vx] ? (Gl(this), _x.update.call(this, t), this[vx] = !1) : _x[u].call(this, t)), d = c ? {type: a.event || n, escapeConnect: i, batch: f} : f[0], this[gx] = !1, !e && this._messageCenter.trigger(d.type, d) } function Ul(t) { for (let e = this._pendingActions; e.length;) { const n = e.shift(); Yl.call(this, n, t) } } function ql(t) { !t && this.trigger('updated') } function jl(t, e) { t.on('rendered', function () { e.trigger('rendered'), !t.animation.isFinished() || e[vx] || e._scheduler.unfinished || e._pendingActions.length || e.trigger('finished') }) } function Zl(t, e, n, i) { function r(t) { const e = `_ec_${t.id}_${t.type}`; let r = s[e]; if (!r) { const h = J_(t.type); const c = a ? c_.getClass(h.main, h.sub) : ol.getClass(h.sub); r = new c(), r.init(n, u), s[e] = r, o.push(r), l.add(r.group) }t.__viewId = r.__id = e, r.__alive = !0, r.__model = t, r.group.__ecComponentInfo = {mainType: t.mainType, index: t.componentIndex}, !a && i.prepareView(r, t, n, u) } for (var a = e === 'component', o = a ? t._componentsViews : t._chartsViews, s = a ? t._componentsMap : t._chartsMap, l = t._zr, u = t._api, h = 0; h < o.length; h++)o[h].__alive = !1; a ? n.eachComponent(function (t, e) { t !== 'series' && r(e) }) : n.eachSeries(r); for (var h = 0; h < o.length;) { const c = o[h]; c.__alive ? h++ : (!a && c.renderTask.dispose(), l.remove(c.group), c.dispose(n, u), o.splice(h, 1), delete s[c.__id], c.__id = c.group.__ecComponentInfo = null) } } function Kl(t) { t.clearColorPalette(), t.eachSeries(function (t) { t.clearColorPalette() }) } function $l(t, e, n, i) { Ql(t, e, n, i), K_(t._chartsViews, function (t) { t.__alive = !1 }), Jl(t, e, n, i), K_(t._chartsViews, function (t) { t.__alive || t.remove(e, n) }) } function Ql(t, e, n, i, r) { K_(r || t._componentsViews, function (t) { const r = t.__model; t.render(r, e, n, i), iu(r, t) }) } function Jl(t, e, n, i, r) { let a; const o = t._scheduler; e.eachSeries(function (e) { const n = t._chartsMap[e.__viewId]; n.__alive = !0; const s = n.renderTask; o.updatePayload(s, i), r && r.get(e.uid) && s.dirty(), a |= s.perform(o.getPerformArgs(s)), n.group.silent = !!e.get('silent'), iu(e, n), nu(e, n) }), o.unfinished |= a, eu(t, e), S_(t._zr.dom, e) } function tu(t, e) { K_(Tx, function (n) { n(t, e) }) } function eu(t, e) { const n = t._zr; const i = n.storage; let r = 0; i.traverse(function () { r++ }), r > e.get('hoverLayerThreshold') && !Hf.node && e.eachSeries(function (e) { if (!e.preventUsingHoverLayer) { const n = t._chartsMap[e.__viewId]; n.__alive && n.group.traverse(function (t) { t.useHoverLayer = !0 }) } }) } function nu(t, e) { const n = t.get('blendMode') || null; e.group.traverse(function (t) { t.isGroup || t.style.blend !== n && t.setStyle('blend', n), t.eachPendingDisplayable && t.eachPendingDisplayable(function (t) { t.setStyle('blend', n) }) }) } function iu(t, e) { const n = t.get('z'); const i = t.get('zlevel'); e.group.traverse(function (t) { t.type !== 'group' && (n != null && (t.z = n), i != null && (t.zlevel = i)) }) } function ru(t) { const e = t._coordSysMgr; return o(new _s(t), {getCoordinateSystems: y(e.getCoordinateSystems, e), getComponentByElement(e) { for (;e;) { const n = e.__ecComponentInfo; if (n != null) return t._model.getComponent(n.mainType, n.index); e = e.parent } }}) } function au() { this.eventInfo } function ou(t) { function e(t, e) { for (let n = 0; n < t.length; n++) { const i = t[n]; i[a] = e } } const n = 0; const i = 1; const r = 2; var a = '__connectUpdateStatus'; K_(Sx, function (o, s) { t._messageCenter.on(s, function (o) { if (Px[t.group] && t[a] !== n) { if (o && o.escapeConnect) return; const s = t.makeActionFromEvent(o); const l = []; K_(kx, function (e) { e !== t && e.group === t.group && l.push(e) }), e(l, n), K_(l, function (t) { t[a] !== i && t.dispatchAction(s) }), e(l, r) } }) }) } function su(t, e, n) { const i = cu(t); if (i) return i; const r = new Vl(t, e, n); return r.id = `ec_${Lx++}`, kx[r.id] = r, lr(t, Bx, r.id), ou(r), r } function lu(t) { if (x(t)) { const e = t; t = null, K_(e, function (e) { e.group != null && (t = e.group) }), t = t || `g_${Ox++}`, K_(e, function (e) { e.group = t }) } return Px[t] = !0, t } function uu(t) { Px[t] = !1 } function hu(t) { typeof t === 'string' ? t = kx[t] : t instanceof Vl || (t = cu(t)), t instanceof Vl && !t.isDisposed() && t.dispose() } function cu(t) { return kx[ur(t, Bx)] } function du(t) { return kx[t] } function fu(t, e) { Dx[t] = e } function pu(t) { Ix.push(t) } function gu(t, e) {
    bu(Mx, t, e, ix)
  } function vu(t) { Tx.push(t) } function mu(t, e, n) { typeof e === 'function' && (n = e, e = ''); const i = Q_(t) ? t.type : [t, t = {event: e}][0]; t.event = (t.event || i).toLowerCase(), e = t.event, Z_(mx.test(i) && mx.test(e)), bx[i] || (bx[i] = {action: n, actionInfo: t}), Sx[e] = i } function yu(t, e) { xs.register(t, e) } function _u(t) { const e = xs.get(t); return e ? e.getDimensionsInfo ? e.getDimensionsInfo() : e.dimensions.slice() : void 0 } function xu(t, e) { bu(Cx, t, e, sx, 'layout') } function wu(t, e) { bu(Cx, t, e, hx, 'visual') } function bu(t, e, n, i, r) { ($_(e) || Q_(e)) && (n = e, e = i); const a = fl.wrapStageHandler(n, r); return a.__prio = e, a.__raw = n, t.push(a), a } function Su(t, e) { Ax[t] = e } function Mu(t) { return Sy.extend(t) } function Iu(t) { return c_.extend(t) } function Tu(t) { return h_.extend(t) } function Cu(t) { return ol.extend(t) } function Du(t) { n('createCanvas', t) } function Au(t, e, n) { q_.registerMap(t, e, n) } function ku(t) { const e = q_.retrieveMap(t); return e && e[0] && {geoJson: e[0].geoJSON, specialAreas: e[0].specialAreas} } function Pu(t) { return t } function Lu(t, e, n, i, r) { this._old = t, this._new = e, this._oldKeyGetter = n || Pu, this._newKeyGetter = i || Pu, this.context = r } function Ou(t, e, n, i, r) { for (let a = 0; a < t.length; a++) { const o = `_ec_${r[i](t[a], a)}`; let s = e[o]; s == null ? (n.push(o), e[o] = a) : (s.length || (e[o] = s = [s]), s.push(a)) } } function Bu(t) { const e = {}; const n = e.encode = {}; const i = N(); let r = []; let a = []; const o = e.userOutput = {dimensionNames: t.dimensions.slice(), encode: {}}; f(t.dimensions, function (e) { const s = t.getDimensionInfo(e); const l = s.coordDim; if (l) { const u = s.coordDimIndex; Eu(n, l)[u] = e, s.isExtraCoord || (i.set(l, 1), Ru(s.type) && (r[0] = e), Eu(o.encode, l)[u] = s.index), s.defaultTooltip && a.push(e) }Rx.each(function (t, e) { const i = Eu(n, e); const r = s.otherDims[e]; r != null && r !== !1 && (i[r] = s.name) }) }); let s = []; const l = {}; i.each(function (t, e) { const i = n[e]; l[e] = i[0], s = s.concat(i) }), e.dataDimsOnCoord = s, e.encodeFirstDimNotExtra = l; const u = n.label; u && u.length && (r = u.slice()); const h = n.tooltip; return h && h.length ? a = h.slice() : a.length || (a = r.slice()), n.defaultedLabel = r, n.defaultedTooltip = a, e } function Eu(t, e) { return t.hasOwnProperty(e) || (t[e] = []), t[e] } function zu(t) { return t === 'category' ? 'ordinal' : t === 'time' ? 'time' : 'float' } function Ru(t) { return !(t === 'ordinal' || t === 'time') } function Nu(t) { t != null && o(this, t), this.otherDims = {} } function Fu(t) { return t._rawCount > 65535 ? Wx : Yx } function Vu(t) { const e = t.constructor; return e === Array ? t.slice() : new e(t) } function Hu(t, e) { f(Ux.concat(e.__wrappedMethods || []), function (n) { e.hasOwnProperty(n) && (t[n] = e[n]) }), t.__wrappedMethods = e.__wrappedMethods, f(qx, function (n) { t[n] = i(e[n]) }), t._calculationInfo = o(e._calculationInfo) } function Gu(t, e, n, i, r) { const a = Gx[e.type]; const o = i - 1; const s = e.name; const l = t[s][o]; if (l && l.length < n) { for (var u = new a(Math.min(r - o * n, n)), h = 0; h < l.length; h++)u[h] = l[h]; t[s][o] = u } for (let c = i * n; r > c; c += n)t[s].push(new a(Math.min(r - c, n))) } function Wu(t) { const e = t._invertedIndicesMap; f(e, function (n, i) { const r = t._dimensionInfos[i]; const a = r.ordinalMeta; if (a) { n = e[i] = new Xx(a.categories.length); for (var o = 0; o < n.length; o++)n[o] = Vx; for (var o = 0; o < t._count; o++)n[t.get(i, o)] = o } }) } function Xu(t, e, n) { let i; if (e != null) { const r = t._chunkSize; const a = Math.floor(n / r); const o = n % r; const s = t.dimensions[e]; const l = t._storage[s][a]; if (l) { i = l[o]; const u = t._dimensionInfos[s].ordinalMeta; u && u.categories.length && (i = u.categories[i]) } } return i } function Yu(t) { return t } function Uu(t) { return t < this._count && t >= 0 ? this._indices[t] : -1 } function qu(t, e) { let n = t._idList[e]; return n == null && (n = Xu(t, t._idDimIdx, e)), n == null && (n = Hx + e), n } function ju(t) { return x(t) || (t = [t]), t } function Zu(t, e) { const n = t.dimensions; const i = new jx(p(n, t.getDimensionInfo, t), t.hostModel); Hu(i, t); for (let r = i._storage = {}, a = t._storage, o = 0; o < n.length; o++) { const s = n[o]; a[s] && (u(e, s) >= 0 ? (r[s] = Ku(a[s]), i._rawExtent[s] = $u(), i._extent[s] = null) : r[s] = a[s]) } return i } function Ku(t) { for (var e = new Array(t.length), n = 0; n < t.length; n++)e[n] = Vu(t[n]); return e } function $u() { return [1 / 0, -1 / 0] } function Qu(t, e, n) {
    function r(t, e, n) { Rx.get(e) != null ? t.otherDims[e] = n : (t.coordDim = e, t.coordDimIndex = n, u.set(e, !0)) }Qo.isInstance(e) || (e = Qo.seriesDataToSource(e)), n = n || {}, t = (t || []).slice(); for (var a = (n.dimsDef || []).slice(), l = N(), u = N(), h = [], c = Ju(e, t, a, n.dimCount), d = 0; c > d; d++) { const p = a[d] = o({}, S(a[d]) ? a[d] : {name: a[d]}); const g = p.name; var v = h[d] = new Nu(); g != null && l.get(g) == null && (v.name = v.displayName = g, l.set(g, d)), p.type != null && (v.type = p.type), p.displayName != null && (v.displayName = p.displayName) } let m = n.encodeDef; !m && n.encodeDefaulter && (m = n.encodeDefaulter(e, c)), m = N(m), m.each(function (t, e) { if (t = Ki(t).slice(), t.length === 1 && !b(t[0]) && t[0] < 0) return void m.set(e, !1); const n = m.set(e, []); f(t, function (t, i) { b(t) && (t = l.get(t)), t != null && c > t && (n[i] = t, r(h[t], e, i)) }) }); let y = 0; f(t, function (t) { let e; var t; let n; let a; if (b(t))e = t, t = {}; else { e = t.name; const o = t.ordinalMeta; t.ordinalMeta = null, t = i(t), t.ordinalMeta = o, n = t.dimsDef, a = t.otherDims, t.name = t.coordDim = t.coordDimIndex = t.dimsDef = t.otherDims = null } var l = m.get(e); if (l !== !1) { var l = Ki(l); if (!l.length) for (let u = 0; u < (n && n.length || 1); u++) { for (;y < h.length && h[y].coordDim != null;)y++; y < h.length && l.push(y++) }f(l, function (i, o) { const l = h[i]; if (r(s(l, t), e, o), l.name == null && n) { let u = n[o]; !S(u) && (u = {name: u}), l.name = l.displayName = u.name, l.defaultTooltip = u.defaultTooltip }a && s(l.otherDims, a) }) } }); const _ = n.generateCoord; let x = n.generateCoordCount; const w = x != null; x = _ ? x || 1 : 0; for (let M = _ || 'value', I = 0; c > I; I++) {
      var v = h[I] = h[I] || new Nu(); const
        T = v.coordDim; T == null && (v.coordDim = th(M, u, w), v.coordDimIndex = 0, (!_ || x <= 0) && (v.isExtraCoord = !0), x--), v.name == null && (v.name = th(v.coordDim, l)), v.type != null || hs(e, I, v.name) !== zy.Must && (!v.isExtraCoord || v.otherDims.itemName == null && v.otherDims.seriesName == null) || (v.type = 'ordinal')
    } return h
  } function Ju(t, e, n, i) { let r = Math.max(t.dimensionsDetectCount || 1, e.length, n.length, i || 0); return f(e, function (t) { const e = t.dimsDef; e && (r = Math.max(r, e.length)) }), r } function th(t, e, n) { if (n || e.get(t) != null) { for (var i = 0; e.get(t + i) != null;)i++; t += i } return e.set(t, !0), t } function eh(t) { this.coordSysName = t, this.coordSysDims = [], this.axisMap = N(), this.categoryAxisMap = N(), this.firstCategoryDimIndex = null } function nh(t) { const e = t.get('coordinateSystem'); const n = new eh(e); const i = Qx[e]; return i ? (i(t, n, n.axisMap, n.categoryAxisMap), n) : void 0 } function ih(t) { return t.get('type') === 'category' } function rh(t, e, n) {
    n = n || {}; let i; let r; let a; let o; let s = n.byIndex; const l = n.stackedCoordDimension; const u = !(!t || !t.get('stack')); if (f(e, function (t, n) { b(t) && (e[n] = t = {name: t}), u && !t.isExtraCoord && (s || i || !t.ordinalMeta || (i = t), r || t.type === 'ordinal' || t.type === 'time' || l && l !== t.coordDim || (r = t)) }), !r || s || i || (s = !0), r) {
      a = '__\x00ecstackresult', o = '__\x00ecstackedover', i && (i.createInvertedIndices = !0); const h = r.coordDim; const c = r.type; let d = 0; f(e, function (t) { t.coordDim === h && d++ }), e.push({
        name: a, coordDim: h, coordDimIndex: d, type: c, isExtraCoord: !0, isCalculationCoord: !0
      }), d++, e.push({
        name: o, coordDim: o, coordDimIndex: d, type: c, isExtraCoord: !0, isCalculationCoord: !0
      })
    } return {
      stackedDimension: r && r.name, stackedByDimension: i && i.name, isStackedByIndex: s, stackedOverDimension: o, stackResultDimension: a
    }
  } function ah(t, e) { return !!e && e === t.getCalculationInfo('stackedDimension') } function oh(t, e) { return ah(t, e) ? t.getCalculationInfo('stackResultDimension') : e } function sh(t, e, n) { n = n || {}, Qo.isInstance(t) || (t = Qo.seriesDataToSource(t)); let i; const r = e.get('coordinateSystem'); const a = xs.get(r); const o = nh(e); o && (i = p(o.coordSysDims, function (t) { const e = {name: t}; const n = o.axisMap.get(t); if (n) { const i = n.get('type'); e.type = zu(i) } return e })), i || (i = a && (a.getDimensionsInfo ? a.getDimensionsInfo() : a.dimensions.slice()) || ['x', 'y']); let s; let l; const u = $x(t, {coordDimensions: i, generateCoord: n.generateCoord, encodeDefaulter: n.useEncodeDefaulter ? _(ss, i, e) : null}); o && f(u, function (t, e) { const n = t.coordDim; const i = o.categoryAxisMap.get(n); i && (s == null && (s = e), t.ordinalMeta = i.getOrdinalMeta()), t.otherDims.itemName != null && (l = !0) }), l || s == null || (u[s].otherDims.itemName = 0); const h = rh(e, u); const c = new jx(u, e); c.setCalculationInfo(h); const d = s != null && lh(t) ? function (t, e, n, i) { return i === s ? n : this.defaultDimValueGetter(t, e, n, i) } : null; return c.hasItemOption = !1, c.initData(t, null, d), c } function lh(t) { if (t.sourceFormat === Dy) { const e = uh(t.data || []); return e != null && !x(Qi(e)) } } function uh(t) { for (var e = 0; e < t.length && t[e] == null;)e++; return t[e] } function hh(t) { this._setting = t || {}, this._extent = [1 / 0, -1 / 0], this._interval = 0, this.init && this.init.apply(this, arguments) } function ch(t) { this.categories = t.categories || [], this._needCollect = t.needCollect, this._deduplication = t.deduplication, this._map } function dh(t) { return t._map || (t._map = N(t.categories)) } function fh(t) { return S(t) && t.value != null ? t.value : `${t}` } function ph(t, e, n, i) { const r = {}; const a = t[1] - t[0]; let o = r.interval = ko(a / e, !0); n != null && n > o && (o = r.interval = n), i != null && o > i && (o = r.interval = i); const s = r.intervalPrecision = gh(o); const l = r.niceTickExtent = [nw(Math.ceil(t[0] / o) * o, s), nw(Math.floor(t[1] / o) * o, s)]; return mh(l, t), r } function gh(t) { return bo(t) + 2 } function vh(t, e, n) { t[e] = Math.max(Math.min(t[e], n[1]), n[0]) } function mh(t, e) { !isFinite(t[0]) && (t[0] = e[0]), !isFinite(t[1]) && (t[1] = e[1]), vh(t, 0, e), vh(t, 1, e), t[0] > t[1] && (t[0] = t[1]) } function yh(t) { return t.get('stack') || aw + t.seriesIndex } function _h(t) { return t.dim + t.index } function xh(t, e) { const n = []; return e.eachSeriesByType(t, function (t) { Th(t) && !Ch(t) && n.push(t) }), n } function wh(t) { const e = {}; f(t, function (t) { const n = t.coordinateSystem; const i = n.getBaseAxis(); if (i.type === 'time' || i.type === 'value') for (let r = t.getData(), a = `${i.dim}_${i.index}`, o = r.mapDimension(i.dim), s = 0, l = r.count(); l > s; ++s) { const u = r.get(o, s); e[a] ? e[a].push(u) : e[a] = [u] } }); const n = []; for (const i in e) if (e.hasOwnProperty(i)) { const r = e[i]; if (r) { r.sort(function (t, e) { return t - e }); for (var a = null, o = 1; o < r.length; ++o) { const s = r[o] - r[o - 1]; s > 0 && (a = a === null ? s : Math.min(a, s)) }n[i] = a } } return n } function bh(t) {
    const e = wh(t); const n = []; return f(t, function (t) {
      let i; const r = t.coordinateSystem; const a = r.getBaseAxis(); const o = a.getExtent(); if (a.type === 'category')i = a.getBandWidth(); else if (a.type === 'value' || a.type === 'time') { const s = `${a.dim}_${a.index}`; const l = e[s]; const u = Math.abs(o[1] - o[0]); const h = a.scale.getExtent(); const c = Math.abs(h[1] - h[0]); i = l ? u / c * l : u } else { const d = t.getData(); i = Math.abs(o[1] - o[0]) / d.count() } const f = yo(t.get('barWidth'), i); const p = yo(t.get('barMaxWidth'), i); const g = yo(t.get('barMinWidth') || 1, i); const v = t.get('barGap'); const m = t.get('barCategoryGap'); n.push({
        bandWidth: i, barWidth: f, barMaxWidth: p, barMinWidth: g, barGap: v, barCategoryGap: m, axisKey: _h(a), stackId: yh(t)
      })
    }), Sh(n)
  } function Sh(t) {
    const e = {}; f(t, function (t) {
      const n = t.axisKey; const i = t.bandWidth; const r = e[n] || {
        bandWidth: i, remainedWidth: i, autoWidthCount: 0, categoryGap: '20%', gap: '30%', stacks: {}
      }; const a = r.stacks; e[n] = r; const o = t.stackId; a[o] || r.autoWidthCount++, a[o] = a[o] || {width: 0, maxWidth: 0}; let s = t.barWidth; s && !a[o].width && (a[o].width = s, s = Math.min(r.remainedWidth, s), r.remainedWidth -= s); const l = t.barMaxWidth; l && (a[o].maxWidth = l); const u = t.barMinWidth; u && (a[o].minWidth = u); const h = t.barGap; h != null && (r.gap = h); const c = t.barCategoryGap; c != null && (r.categoryGap = c)
    }); const n = {}; return f(e, function (t, e) { n[e] = {}; const i = t.stacks; const r = t.bandWidth; const a = yo(t.categoryGap, r); const o = yo(t.gap, 1); let s = t.remainedWidth; let l = t.autoWidthCount; let u = (s - a) / (l + (l - 1) * o); u = Math.max(u, 0), f(i, function (t) { const e = t.maxWidth; const n = t.minWidth; if (t.width) { var i = t.width; e && (i = Math.min(i, e)), n && (i = Math.max(i, n)), t.width = i, s -= i + o * i, l-- } else { var i = u; e && i > e && (i = Math.min(e, s)), n && n > i && (i = n), i !== u && (t.width = i, s -= i + o * i, l--) } }), u = (s - a) / (l + (l - 1) * o), u = Math.max(u, 0); let h; let c = 0; f(i, function (t) { t.width || (t.width = u), h = t, c += t.width * (1 + o) }), h && (c -= h.width * o); let d = -c / 2; f(i, function (t, i) { n[e][i] = n[e][i] || {bandWidth: r, offset: d, width: t.width}, d += t.width * (1 + o) }) }), n
  } function Mh(t, e, n) { if (t && e) { let i = t[_h(e)]; return i != null && n != null && (i = i[yh(n)]), i } } function Ih(t, e) {
    const n = xh(t, e); const i = bh(n); const r = {}; f(n, function (t) {
      const e = t.getData(); const n = t.coordinateSystem; const a = n.getBaseAxis(); const o = yh(t); const s = i[_h(a)][o]; const l = s.offset; const u = s.width; const h = n.getOtherAxis(a); const c = t.get('barMinHeight') || 0; r[o] = r[o] || [], e.setLayout({bandWidth: s.bandWidth, offset: l, size: u}); for (let d = e.mapDimension(h.dim), f = e.mapDimension(a.dim), p = ah(e, d), g = h.isHorizontal(), v = Dh(a, h, p), m = 0, y = e.count(); y > m; m++) {
        const _ = e.get(d, m); const x = e.get(f, m); if (!isNaN(_) && !isNaN(x)) {
          const w = _ >= 0 ? 'p' : 'n'; let
            b = v; p && (r[o][x] || (r[o][x] = {p: v, n: v}), b = r[o][x][w]); var S; var M; var I; var T; if (g) { var C = n.dataToPoint([_, x]); S = b, M = C[1] + l, I = C[0] - v, T = u, Math.abs(I) < c && (I = (I < 0 ? -1 : 1) * c), p && (r[o][x][w] += I) } else { var C = n.dataToPoint([x, _]); S = C[0] + l, M = b, I = u, T = C[1] - v, Math.abs(T) < c && (T = (T <= 0 ? -1 : 1) * c), p && (r[o][x][w] += T) }e.setItemLayout(m, {
            x: S, y: M, width: I, height: T
          })
        }
      }
    }, this)
  } function Th(t) { return t.coordinateSystem && t.coordinateSystem.type === 'cartesian2d' } function Ch(t) { return t.pipelineContext && t.pipelineContext.large } function Dh(t, e) { return e.toGlobalCoord(e.dataToCoord(e.type === 'log' ? 1 : 0)) } function Ah(t, e) { return bw(t, ww(e)) } function kh(t, e) { let n; let i; let r; const a = t.type; let o = e.getMin(); let s = e.getMax(); const l = o != null; const u = s != null; const h = t.getExtent(); a === 'ordinal' ? n = e.getCategories().length : (i = e.get('boundaryGap'), x(i) || (i = [i || 0, i || 0]), typeof i[0] === 'boolean' && (i = [0, 0]), i[0] = yo(i[0], 1), i[1] = yo(i[1], 1), r = h[1] - h[0] || Math.abs(h[0])), o == null && (o = a === 'ordinal' ? n ? 0 : 0 / 0 : h[0] - i[0] * r), s == null && (s = a === 'ordinal' ? n ? n - 1 : 0 / 0 : h[1] + i[1] * r), o === 'dataMin' ? o = h[0] : typeof o === 'function' && (o = o({min: h[0], max: h[1]})), s === 'dataMax' ? s = h[1] : typeof s === 'function' && (s = s({min: h[0], max: h[1]})), (o == null || !isFinite(o)) && (o = 0 / 0), (s == null || !isFinite(s)) && (s = 0 / 0), t.setBlank(C(o) || C(s) || a === 'ordinal' && !t.getOrdinalMeta().categories.length), e.getNeedCrossZero() && (o > 0 && s > 0 && !l && (o = 0), o < 0 && s < 0 && !u && (s = 0)); const c = e.ecModel; if (c && a === 'time') { let d; const p = xh('bar', c); if (f(p, function (t) { d |= t.getBaseAxis() === e.axis }), d) { const g = bh(p); const v = Ph(o, s, e, g); o = v.min, s = v.max } } return [o, s] } function Ph(t, e, n, i) { const r = n.axis.getExtent(); const a = r[1] - r[0]; const o = Mh(i, n.axis); if (void 0 === o) return {min: t, max: e}; let s = 1 / 0; f(o, function (t) { s = Math.min(t.offset, s) }); let l = -1 / 0; f(o, function (t) { l = Math.max(t.offset + t.width, l) }), s = Math.abs(s), l = Math.abs(l); const u = s + l; const h = e - t; const c = 1 - (s + l) / a; const d = h / c - h; return e += d * (l / u), t -= d * (s / u), {min: t, max: e} } function Lh(t, e) {
    const n = kh(t, e); const i = e.getMin() != null; const r = e.getMax() != null; const a = e.get('splitNumber'); t.type === 'log' && (t.base = e.get('logBase')); const o = t.type; t.setExtent(n[0], n[1]), t.niceExtent({
      splitNumber: a, fixMin: i, fixMax: r, minInterval: o === 'interval' || o === 'time' ? e.get('minInterval') : null, maxInterval: o === 'interval' || o === 'time' ? e.get('maxInterval') : null
    }); const s = e.get('interval'); s != null && t.setInterval && t.setInterval(s)
  } function Oh(t, e) { if (e = e || t.get('type')) switch (e) { case 'category': return new ew(t.getOrdinalMeta ? t.getOrdinalMeta() : t.getCategories(), [1 / 0, -1 / 0]); case 'value': return new rw(); default: return (hh.getClass(e) || rw).create(t) } } function Bh(t) { const e = t.scale.getExtent(); const n = e[0]; const i = e[1]; return !(n > 0 && i > 0 || n < 0 && i < 0) } function Eh(t) { let e = t.getLabelModel().get('formatter'); const n = t.type === 'category' ? t.scale.getExtent()[0] : null; return typeof e === 'string' ? e = (function (e) { return function (n) { return n = t.scale.getLabel(n), e.replace('{value}', n != null ? n : '') } }(e)) : typeof e === 'function' ? function (i, r) { return n != null && (r = i - n), e(zh(t, i), r) } : function (e) { return t.scale.getLabel(e) } } function zh(t, e) { return t.type === 'category' ? t.scale.getLabel(e) : e } function Rh(t) { const e = t.model; const n = t.scale; if (e.get('axisLabel.show') && !n.isBlank()) { let i; let r; const a = t.type === 'category'; const o = n.getExtent(); a ? r = n.count() : (i = n.getTicks(), r = i.length); let s; const l = t.getLabelModel(); const u = Eh(t); let h = 1; r > 40 && (h = Math.ceil(r / 40)); for (let c = 0; r > c; c += h) { const d = i ? i[c] : o[0] + c; const f = u(d); const p = l.getTextRect(f); const g = Nh(p, l.get('rotate') || 0); s ? s.union(g) : s = g } return s } } function Nh(t, e) { const n = e * Math.PI / 180; const i = t.plain(); const r = i.width; const a = i.height; const o = r * Math.cos(n) + a * Math.sin(n); const s = r * Math.sin(n) + a * Math.cos(n); const l = new Sn(i.x, i.y, o, s); return l } function Fh(t) { const e = t.get('interval'); return e == null ? 'auto' : e } function Vh(t) { return t.type === 'category' && Fh(t.getLabelModel()) === 0 } function Hh(t, e) { if (this.type !== 'image') { const n = this.style; const i = this.shape; i && i.symbolType === 'line' ? n.stroke = t : this.__isEmptyBrush ? (n.stroke = t, n.fill = e || '#fff') : (n.fill && (n.fill = t), n.stroke && (n.stroke = t)), this.dirty(!1) } } function Gh(t, e, n, i, r, a, o) {
    const s = t.indexOf('empty') === 0; s && (t = t.substr(5, 1).toLowerCase() + t.substr(6)); let l; return l = t.indexOf('image://') === 0 ? va(t.slice(8), new Sn(e, n, i, r), o ? 'center' : 'cover') : t.indexOf('path://') === 0 ? ga(t.slice(7), {}, new Sn(e, n, i, r), o ? 'center' : 'cover') : new zw({
      shape: {
        symbolType: t, x: e, y: n, width: i, height: r
      }
    }), l.__isEmptyBrush = s, l.setColor = Hh, l.setColor(a), l
  } function Wh(t) { return sh(t.getSource(), t) } function Xh(t, e) { let n = e; uo.isInstance(e) || (n = new uo(e), c(n, Dw)); const i = Oh(n); return i.setExtent(t[0], t[1]), Lh(i, n), i } function Yh(t) { c(t, Dw) } function Uh(t, e) { return Math.abs(t - e) < Fw } function qh(t, e, n) { let i = 0; let r = t[0]; if (!r) return !1; for (let a = 1; a < t.length; a++) { const o = t[a]; i += Gr(r[0], r[1], o[0], o[1], e, n), r = o } const s = t[0]; return Uh(r[0], s[0]) && Uh(r[1], s[1]) || (i += Gr(r[0], r[1], s[0], s[1], e, n)), i !== 0 } function jh(t, e, n) { if (this.name = t, this.geometries = e, n)n = [n[0], n[1]]; else { const i = this.getBoundingRect(); n = [i.x + i.width / 2, i.y + i.height / 2] } this.center = n } function Zh(t) { if (!t.UTF8Encoding) return t; let e = t.UTF8Scale; e == null && (e = 1024); for (let n = t.features, i = 0; i < n.length; i++) for (let r = n[i], a = r.geometry, o = a.coordinates, s = a.encodeOffsets, l = 0; l < o.length; l++) { const u = o[l]; if (a.type === 'Polygon')o[l] = Kh(u, s[l], e); else if (a.type === 'MultiPolygon') for (let h = 0; h < u.length; h++) { const c = u[h]; u[h] = Kh(c, s[l][h], e) } } return t.UTF8Encoding = !1, t } function Kh(t, e, n) { for (var i = [], r = e[0], a = e[1], o = 0; o < t.length; o += 2) { let s = t.charCodeAt(o) - 64; let l = t.charCodeAt(o + 1) - 64; s = s >> 1 ^ -(1 & s), l = l >> 1 ^ -(1 & l), s += r, l += a, r = s, a = l, i.push([s / n, l / n]) } return i } function $h(t) { return t.type === 'category' ? Jh(t) : nc(t) } function Qh(t, e) { return t.type === 'category' ? ec(t, e) : {ticks: t.scale.getTicks()} } function Jh(t) { const e = t.getLabelModel(); const n = tc(t, e); return !e.get('show') || t.scale.isBlank() ? {labels: [], labelCategoryInterval: n.labelCategoryInterval} : n } function tc(t, e) { const n = ic(t, 'labels'); const i = Fh(e); const r = rc(n, i); if (r) return r; let a; let o; return w(i) ? a = hc(t, i) : (o = i === 'auto' ? oc(t) : i, a = uc(t, o)), ac(n, i, {labels: a, labelCategoryInterval: o}) } function ec(t, e) { const n = ic(t, 'ticks'); const i = Fh(e); const r = rc(n, i); if (r) return r; let a; let o; if ((!e.get('show') || t.scale.isBlank()) && (a = []), w(i))a = hc(t, i, !0); else if (i === 'auto') { const s = tc(t, t.getLabelModel()); o = s.labelCategoryInterval, a = p(s.labels, function (t) { return t.tickValue }) } else o = i, a = uc(t, o, !0); return ac(n, i, {ticks: a, tickCategoryInterval: o}) } function nc(t) { const e = t.scale.getTicks(); const n = Eh(t); return {labels: p(e, function (e, i) { return {formattedLabel: n(e, i), rawLabel: t.scale.getLabel(e), tickValue: e} })} } function ic(t, e) { return Hw(t)[e] || (Hw(t)[e] = []) } function rc(t, e) { for (let n = 0; n < t.length; n++) if (t[n].key === e) return t[n].value } function ac(t, e, n) { return t.push({key: e, value: n}), n } function oc(t) { const e = Hw(t).autoInterval; return e != null ? e : Hw(t).autoInterval = t.calculateCategoryInterval() } function sc(t) { const e = lc(t); const n = Eh(t); const i = (e.axisRotate - e.labelRotate) / 180 * Math.PI; const r = t.scale; const a = r.getExtent(); const o = r.count(); if (a[1] - a[0] < 1) return 0; let s = 1; o > 40 && (s = Math.max(1, Math.floor(o / 40))); for (var l = a[0], u = t.dataToCoord(l + 1) - t.dataToCoord(l), h = Math.abs(u * Math.cos(i)), c = Math.abs(u * Math.sin(i)), d = 0, f = 0; l <= a[1]; l += s) { let p = 0; let g = 0; const v = Gn(n(l), e.font, 'center', 'top'); p = 1.3 * v.width, g = 1.3 * v.height, d = Math.max(d, p, 7), f = Math.max(f, g, 7) } let m = d / h; let y = f / c; isNaN(m) && (m = 1 / 0), isNaN(y) && (y = 1 / 0); let _ = Math.max(0, Math.floor(Math.min(m, y))); const x = Hw(t.model); const w = t.getExtent(); const b = x.lastAutoInterval; const S = x.lastTickCount; return b != null && S != null && Math.abs(b - _) <= 1 && Math.abs(S - o) <= 1 && b > _ && x.axisExtend0 === w[0] && x.axisExtend1 === w[1] ? _ = b : (x.lastTickCount = o, x.lastAutoInterval = _, x.axisExtend0 = w[0], x.axisExtend1 = w[1]), _ } function lc(t) { const e = t.getLabelModel(); return {axisRotate: t.getRotate ? t.getRotate() : t.isHorizontal && !t.isHorizontal() ? 90 : 0, labelRotate: e.get('rotate') || 0, font: e.getFont()} } function uc(t, e, n) { function i(t) { l.push(n ? t : {formattedLabel: r(t), rawLabel: a.getLabel(t), tickValue: t}) } var r = Eh(t); var a = t.scale; const o = a.getExtent(); const s = t.getLabelModel(); var l = []; const u = Math.max((e || 0) + 1, 1); let h = o[0]; const c = a.count(); h !== 0 && u > 1 && c / u > 2 && (h = Math.round(Math.ceil(h / u) * u)); const d = Vh(t); const f = s.get('showMinLabel') || d; const p = s.get('showMaxLabel') || d; f && h !== o[0] && i(o[0]); for (var g = h; g <= o[1]; g += u)i(g); return p && g - u !== o[1] && i(o[1]), l } function hc(t, e, n) { const i = t.scale; const r = Eh(t); const a = []; return f(i.getTicks(), function (t) { const o = i.getLabel(t); e(t, o) && a.push(n ? t : {formattedLabel: r(t), rawLabel: o, tickValue: t}) }), a } function cc(t, e) { const n = t[1] - t[0]; const i = e; const r = n / i / 2; t[0] += r, t[1] -= r } function dc(t, e, n, i) { function r(t, e) { return t = _o(t), e = _o(e), d ? t > e : e > t } const a = e.length; if (t.onBand && !n && a) { let o; let s; const l = t.getExtent(); if (a === 1)e[0].coord = l[0], o = e[1] = {coord: l[0]}; else { const u = e[a - 1].tickValue - e[0].tickValue; const h = (e[a - 1].coord - e[0].coord) / u; f(e, function (t) { t.coord -= h / 2 }); const c = t.scale.getExtent(); s = 1 + c[1] - e[a - 1].tickValue, o = {coord: e[a - 1].coord + h * s}, e.push(o) } var d = l[0] > l[1]; r(e[0].coord, l[0]) && (i ? e[0].coord = l[0] : e.shift()), i && r(l[0], e[0].coord) && e.unshift({coord: l[0]}), r(l[1], o.coord) && (i ? o.coord = l[1] : e.pop()), i && r(o.coord, l[1]) && e.push({coord: l[1]}) } } function fc(t) { return this._axes[t] } function pc(t) { qw.call(this, t) } function gc(t, e) { return e.type || (e.data ? 'category' : 'value') } function vc(t, e) { return t.getCoordSysModel() === e } function mc(t, e, n) { this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this._initCartesian(t, e, n), this.model = t } function yc(t, e, n, i) { function r(t) { return `${t.dim}_${t.index}` }n.getAxesOnZeroOf = function () { return a ? [a] : [] }; let a; const o = t[e]; const s = n.model; const l = s.get('axisLine.onZero'); const u = s.get('axisLine.onZeroAxisIndex'); if (l) { if (u != null)_c(o[u]) && (a = o[u]); else for (const h in o) if (o.hasOwnProperty(h) && _c(o[h]) && !i[r(o[h])]) { a = o[h]; break }a && (i[r(a)] = !0) } } function _c(t) { return t && t.type !== 'category' && t.type !== 'time' && Bh(t) } function xc(t, e) { const n = t.getExtent(); const i = n[0] + n[1]; t.toGlobalCoord = t.dim === 'x' ? function (t) { return t + e } : function (t) { return i - t + e }, t.toLocalCoord = t.dim === 'x' ? function (t) { return t - e } : function (t) { return i - t + e } } function wc(t) { return p(nb, function (e) { const n = t.getReferringComponents(e)[0]; return n }) } function bc(t) { return t.get('coordinateSystem') === 'cartesian2d' } function Sc(t, e) { const n = t.mapDimension('defaultedLabel', !0); const i = n.length; if (i === 1) return Us(t, e, n[0]); if (i) { for (var r = [], a = 0; a < n.length; a++) { const o = Us(t, e, n[a]); r.push(o) } return r.join(' ') } } function Mc(t, e, n, i, r, a) {
    const o = n.getModel('label'); const s = n.getModel('emphasis.label'); Na(t, e, o, s, {
      labelFetcher: r, labelDataIndex: a, defaultText: Sc(r.getData(), a), isRectText: !0, autoColor: i
    }), Ic(t), Ic(e)
  } function Ic(t, e) { t.textPosition === 'outside' && (t.textPosition = e) } function Tc(t, e, n) {
    const i = t.getArea(); const r = t.getBaseAxis().isHorizontal(); let a = i.x; let o = i.y; let s = i.width; let l = i.height; const u = n.get('lineStyle.width') || 2; a -= u / 2, o -= u / 2, s += u, l += u; const h = new Cm({
      shape: {
        x: a, y: o, width: s, height: l
      }
    }); return e && (h.shape[r ? 'width' : 'height'] = 0, $a(h, {shape: {width: s, height: l}}, n)), h
  } function Cc(t, e, n) {
    const i = t.getArea(); const r = new _m({
      shape: {
        cx: _o(t.cx, 1), cy: _o(t.cy, 1), r0: _o(i.r0, 1), r: _o(i.r, 1), startAngle: i.startAngle, endAngle: i.endAngle, clockwise: i.clockwise
      }
    }); return e && (r.shape.endAngle = i.startAngle, $a(r, {shape: {endAngle: i.endAngle}}, n)), r
  } function Dc(t, e, n) { return t ? t.type === 'polar' ? Cc(t, e, n) : t.type === 'cartesian2d' ? Tc(t, e, n) : null : null } function Ac(t, e) { const n = t.getArea && t.getArea(); if (t.type === 'cartesian2d') { const i = t.getBaseAxis(); if (i.type !== 'category' || !i.onBand) { const r = e.getLayout('bandWidth'); i.isHorizontal() ? (n.x -= r, n.width += 2 * r) : (n.y -= r, n.height += 2 * r) } } return n } function kc(t, e, n) { n.style.text = null, Ka(n, {shape: {width: 0}}, e, t, function () { n.parent && n.parent.remove(n) }) } function Pc(t, e, n) { n.style.text = null, Ka(n, {shape: {r: n.shape.r0}}, e, t, function () { n.parent && n.parent.remove(n) }) } function Lc(t) { return t.startAngle != null && t.endAngle != null && t.startAngle === t.endAngle } function Oc(t, e, n, i, r, a, o, l) { const u = e.getItemVisual(n, 'color'); const h = e.getItemVisual(n, 'opacity'); const c = e.getVisual('borderColor'); const d = i.getModel('itemStyle'); const f = i.getModel('emphasis.itemStyle').getBarItemStyle(); l || t.setShape('r', d.get('barBorderRadius') || 0), t.useStyle(s({stroke: Lc(r) ? 'none' : c, fill: Lc(r) ? 'none' : u, opacity: h}, d.getBarItemStyle())); const p = i.getShallow('cursor'); p && t.attr('cursor', p); const g = o ? r.height > 0 ? 'bottom' : 'top' : r.width > 0 ? 'left' : 'right'; l || Mc(t.style, f, i, u, a, n, g), Lc(r) && (f.fill = f.stroke = 'none'), Ba(t, f) } function Bc(t, e) { const n = t.get(sb) || 0; return Math.min(n, Math.abs(e.width), Math.abs(e.height)) } function Ec(t, e, n) {
    const i = t.getData(); const r = []; const a = i.getLayout('valueAxisHorizontal') ? 1 : 0; r[1 - a] = i.getLayout('valueAxisStart'); const o = new pb({
      shape: {points: i.getLayout('largePoints')}, incremental: !!n, __startPoint: r, __baseDimIdx: a, __largeDataIndices: i.getLayout('largeDataIndices'), __barWidth: i.getLayout('barWidth')
    }); e.add(o), Rc(o, t, i), o.seriesIndex = t.seriesIndex, t.get('silent') || (o.on('mousedown', gb), o.on('mousemove', gb))
  } function zc(t, e, n) { const i = t.__baseDimIdx; const r = 1 - i; const a = t.shape.points; const o = t.__largeDataIndices; const s = Math.abs(t.__barWidth / 2); const l = t.__startPoint[r]; lb[0] = e, lb[1] = n; for (let u = lb[i], h = lb[1 - i], c = u - s, d = u + s, f = 0, p = a.length / 2; p > f; f++) { const g = 2 * f; const v = a[g + i]; const m = a[g + r]; if (v >= c && d >= v && (m >= l ? h >= l && m >= h : h >= m && l >= h)) return o[f] } return -1 } function Rc(t, e, n) { const i = n.getVisual('borderColor') || n.getVisual('color'); const r = e.getModel('itemStyle').getItemStyle(['color', 'borderColor']); t.useStyle(r), t.style.fill = null, t.style.stroke = i, t.style.lineWidth = n.getLayout('barWidth') } function Nc(t, e, n, i) { let r; let a; const o = Io(n - t.rotation); const s = i[0] > i[1]; const l = e === 'start' && !s || e !== 'start' && s; return To(o - vb / 2) ? (a = l ? 'bottom' : 'top', r = 'center') : To(o - 1.5 * vb) ? (a = l ? 'top' : 'bottom', r = 'center') : (a = 'middle', r = 1.5 * vb > o && o > vb / 2 ? l ? 'left' : 'right' : l ? 'right' : 'left'), {rotation: o, textAlign: r, textVerticalAlign: a} } function Fc(t, e, n) { if (!Vh(t.axis)) { const i = t.get('axisLabel.showMinLabel'); const r = t.get('axisLabel.showMaxLabel'); e = e || [], n = n || []; const a = e[0]; const o = e[1]; const s = e[e.length - 1]; const l = e[e.length - 2]; const u = n[0]; const h = n[1]; const c = n[n.length - 1]; const d = n[n.length - 2]; i === !1 ? (Vc(a), Vc(u)) : Hc(a, o) && (i ? (Vc(o), Vc(h)) : (Vc(a), Vc(u))), r === !1 ? (Vc(s), Vc(c)) : Hc(l, s) && (r ? (Vc(l), Vc(d)) : (Vc(s), Vc(c))) } } function Vc(t) { t && (t.ignore = !0) } function Hc(t, e) { const n = t && t.getBoundingRect().clone(); const i = e && e.getBoundingRect().clone(); if (n && i) { const r = ke([]); return Be(r, r, -t.rotation), n.applyTransform(Le([], r, t.getLocalTransform())), i.applyTransform(Le([], r, e.getLocalTransform())), n.intersect(i) } } function Gc(t) { return t === 'middle' || t === 'center' } function Wc(t, e, n, i, r) {
    for (var a = [], o = [], s = [], l = 0; l < t.length; l++) {
      const u = t[l].coord; o[0] = u, o[1] = 0, s[0] = u, s[1] = n, e && (ae(o, o, e), ae(s, s, e)); const h = new Am({
        anid: `${r}_${t[l].tickValue}`,
        subPixelOptimize: !0,
        shape: {
          x1: o[0], y1: o[1], x2: s[0], y2: s[1]
        },
        style: i,
        z2: 2,
        silent: !0
      }); a.push(h)
    } return a
  } function Xc(t, e, n) { const i = e.axis; const r = e.getModel('axisTick'); if (r.get('show') && !i.scale.isBlank()) { for (var a = r.getModel('lineStyle'), o = n.tickDirection * r.get('length'), l = i.getTicksCoords(), u = Wc(l, t._transform, o, s(a.getLineStyle(), {stroke: e.get('axisLine.lineStyle.color')}), 'ticks'), h = 0; h < u.length; h++)t.group.add(u[h]); return u } } function Yc(t, e, n) { const i = e.axis; const r = e.getModel('minorTick'); if (r.get('show') && !i.scale.isBlank()) { const a = i.getMinorTicksCoords(); if (a.length) for (let o = r.getModel('lineStyle'), l = n.tickDirection * r.get('length'), u = s(o.getLineStyle(), s(e.getModel('axisTick').getLineStyle(), {stroke: e.get('axisLine.lineStyle.color')})), h = 0; h < a.length; h++) for (let c = Wc(a[h], t._transform, l, u, `minorticks_${h}`), d = 0; d < c.length; d++)t.group.add(c[d]) } } function Uc(t, e, n) {
    const i = e.axis; const r = D(n.axisLabelShow, e.get('axisLabel.show')); if (r && !i.scale.isBlank()) {
      const a = e.getModel('axisLabel'); const o = a.get('margin'); const s = i.getViewLabels(); const l = (D(n.labelRotate, a.get('rotate')) || 0) * vb / 180; const u = xb(n.rotation, l, n.labelDirection); const h = e.getCategories && e.getCategories(!0); const c = []; const d = wb(e); const p = e.get('triggerEvent'); return f(s, function (r, s) {
        const l = r.tickValue; const f = r.formattedLabel; const g = r.rawLabel; let v = a; h && h[l] && h[l].textStyle && (v = new uo(h[l].textStyle, a, e.ecModel)); const m = v.getTextColor() || e.get('axisLine.lineStyle.color'); const y = i.dataToCoord(l); const _ = [y, n.labelOffset + n.labelDirection * o]; const x = new gm({
          anid: `label_${l}`, position: _, rotation: u.rotation, silent: d, z2: 10
        }); Va(x.style, v, {
          text: f, textAlign: v.getShallow('align', !0) || u.textAlign, textVerticalAlign: v.getShallow('verticalAlign', !0) || v.getShallow('baseline', !0) || u.textVerticalAlign, textFill: typeof m === 'function' ? m(i.type === 'category' ? g : i.type === 'value' ? `${l}` : l, s) : m
        }), p && (x.eventData = _b(e), x.eventData.targetType = 'axisLabel', x.eventData.value = g), t._dumbGroup.add(x), x.updateTransform(), c.push(x), t.group.add(x), x.decomposeTransform()
      }), c
    }
  } function qc(t, e) {
    const n = {
      axesInfo: {}, seriesInvolved: !1, coordSysAxesInfo: {}, coordSysMap: {}
    }; return jc(n, t, e), n.seriesInvolved && Kc(n, t), n
  } function jc(t, e, n) {
    const i = e.getComponent('tooltip'); const r = e.getComponent('axisPointer'); const a = r.get('link', !0) || []; const o = []; bb(n.getCoordinateSystems(), function (n) {
      function s(i, s, l) {
        let h = l.model.getModel('axisPointer', r); const d = h.get('show'); if (d && (d !== 'auto' || i || nd(h))) {
          s == null && (s = h.get('triggerTooltip')), h = i ? Zc(l, c, r, e, i, s) : h; const f = h.get('snap'); const p = id(l.model); const g = s || f || l.type === 'category'; const v = t.axesInfo[p] = {
            key: p, axis: l, coordSys: n, axisPointerModel: h, triggerTooltip: s, involveSeries: g, snap: f, useHandle: nd(h), seriesModels: []
          }; u[p] = v, t.seriesInvolved |= g; const m = $c(a, l); if (m != null) { const y = o[m] || (o[m] = {axesInfo: {}}); y.axesInfo[p] = v, y.mapper = a[m].mapper, v.linkGroup = y }
        }
      } if (n.axisPointerEnabled) { const l = id(n.model); var u = t.coordSysAxesInfo[l] = {}; t.coordSysMap[l] = n; const h = n.model; var c = h.getModel('tooltip', i); if (bb(n.getAxes(), Sb(s, !1, null)), n.getTooltipAxes && i && c.get('show')) { const d = c.get('trigger') === 'axis'; const f = c.get('axisPointer.type') === 'cross'; const p = n.getTooltipAxes(c.get('axisPointer.axis')); (d || f) && bb(p.baseAxes, Sb(s, f ? 'cross' : !0, d)), f && bb(p.otherAxes, Sb(s, 'cross', !1)) } }
    })
  } function Zc(t, e, n, r, a, o) { const l = e.getModel('axisPointer'); const u = {}; bb(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (t) { u[t] = i(l.get(t)) }), u.snap = t.type !== 'category' && !!o, l.get('type') === 'cross' && (u.type = 'line'); const h = u.label || (u.label = {}); if (h.show == null && (h.show = !1), a === 'cross') { const c = l.get('label.show'); if (h.show = c != null ? c : !0, !o) { const d = u.lineStyle = l.get('crossStyle'); d && s(h, d.textStyle) } } return t.model.getModel('axisPointer', new uo(u, n, r)) } function Kc(t, e) { e.eachSeries(function (e) { const n = e.coordinateSystem; const i = e.get('tooltip.trigger', !0); const r = e.get('tooltip.show', !0); n && i !== 'none' && i !== !1 && i !== 'item' && r !== !1 && e.get('axisPointer.show', !0) !== !1 && bb(t.coordSysAxesInfo[id(n.model)], function (t) { const i = t.axis; n.getAxis(i.dim) === i && (t.seriesModels.push(e), t.seriesDataCount == null && (t.seriesDataCount = 0), t.seriesDataCount += e.getData().count()) }) }, this) } function $c(t, e) { for (let n = e.model, i = e.dim, r = 0; r < t.length; r++) { const a = t[r] || {}; if (Qc(a[`${i}AxisId`], n.id) || Qc(a[`${i}AxisIndex`], n.componentIndex) || Qc(a[`${i}AxisName`], n.name)) return r } } function Qc(t, e) { return t === 'all' || x(t) && u(t, e) >= 0 || t === e } function Jc(t) { const e = td(t); if (e) { const n = e.axisPointerModel; const i = e.axis.scale; const r = n.option; const a = n.get('status'); let o = n.get('value'); o != null && (o = i.parse(o)); const s = nd(n); a == null && (r.status = s ? 'show' : 'hide'); const l = i.getExtent().slice(); l[0] > l[1] && l.reverse(), (o == null || o > l[1]) && (o = l[1]), o < l[0] && (o = l[0]), r.value = o, s && (r.status = e.axis.scale.isBlank() ? 'hide' : 'show') } } function td(t) { const e = (t.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo; return e && e.axesInfo[id(t)] } function ed(t) { const e = td(t); return e && e.axisPointerModel } function nd(t) { return !!t.get('handle.show') } function id(t) { return `${t.type}||${t.id}` } function rd(t, e, n, i, r, a) { const o = Mb.getAxisPointerClass(t.axisPointerClass); if (o) { const s = ed(e); s ? (t._axisPointer || (t._axisPointer = new o())).render(e, s, i, a) : ad(t, i) } } function ad(t, e, n) { const i = t._axisPointer; i && i.dispose(e, n), t._axisPointer = null } function od(t, e, n) {
    n = n || {}; const i = t.coordinateSystem; const r = e.axis; const a = {}; const o = r.getAxesOnZeroOf()[0]; const s = r.position; const l = o ? 'onZero' : s; const u = r.dim; const h = i.getRect(); const c = [h.x, h.x + h.width, h.y, h.y + h.height]; const d = {
      left: 0, right: 1, top: 0, bottom: 1, onZero: 2
    }; const f = e.get('offset') || 0; const p = u === 'x' ? [c[2] - f, c[3] + f] : [c[0] - f, c[1] + f]; if (o) { const g = o.toGlobalCoord(o.dataToCoord(0)); p[d.onZero] = Math.max(Math.min(g, p[1]), p[0]) }a.position = [u === 'y' ? p[d[l]] : c[0], u === 'x' ? p[d[l]] : c[3]], a.rotation = Math.PI / 2 * (u === 'x' ? 0 : 1); const v = {
      top: -1, bottom: 1, left: -1, right: 1
    }; a.labelDirection = a.tickDirection = a.nameDirection = v[s], a.labelOffset = o ? p[d[s]] - p[d.onZero] : 0, e.get('axisTick.inside') && (a.tickDirection = -a.tickDirection), D(n.labelInside, e.get('axisLabel.inside')) && (a.labelDirection = -a.labelDirection); const m = e.get('axisLabel.rotate'); return a.labelRotate = l === 'top' ? -m : m, a.z2 = 1, a
  } function sd(t, e, n) { tg.call(this), this.updateData(t, e, n) } function ld(t) { return [t[0] / 2, t[1] / 2] } function ud(t, e) { this.parent.drift(t, e) } function hd(t, e) {
    if (!this.incremental && !this.useHoverLayer) {
      if (e === 'emphasis') {
        const n = this.__symbolOriginalScale; const i = n[1] / n[0]; const r = {scale: [Math.max(1.1 * n[0], n[0] + 3), Math.max(1.1 * n[1], n[1] + 3 * i)]}
        this.animateTo(r, 400, 'elasticOut')
      } else e === 'normal' && this.animateTo({scale: this.__symbolOriginalScale}, 400, 'elasticOut')
    }
  } function cd(t) { this.group = new tg(), this._symbolCtor = t || sd } function dd(t, e, n, i) { return !(!e || isNaN(e[0]) || isNaN(e[1]) || i.isIgnore && i.isIgnore(n) || i.clipShape && !i.clipShape.contain(e[0], e[1]) || t.getItemVisual(n, 'symbol') === 'none') } function fd(t) { return t == null || S(t) || (t = {isIgnore: t}), t || {} } function pd(t) {
    const e = t.hostModel; return {
      itemStyle: e.getModel('itemStyle').getItemStyle(['color']), hoverItemStyle: e.getModel('emphasis.itemStyle').getItemStyle(), symbolRotate: e.get('symbolRotate'), symbolOffset: e.get('symbolOffset'), hoverAnimation: e.get('hoverAnimation'), labelModel: e.getModel('label'), hoverLabelModel: e.getModel('emphasis.label'), cursorStyle: e.get('cursor')
    }
  } function gd(t, e, n) {
    let i; const r = t.getBaseAxis(); const a = t.getOtherAxis(r); const o = vd(a, n); const s = r.dim; const l = a.dim; const u = e.mapDimension(l); const h = e.mapDimension(s); const c = l === 'x' || l === 'radius' ? 1 : 0; const d = p(t.dimensions, function (t) { return e.mapDimension(t) }); const f = e.getCalculationInfo('stackResultDimension'); return (i |= ah(e, d[0])) && (d[0] = f), (i |= ah(e, d[1])) && (d[1] = f), {
      dataDimsForPoint: d, valueStart: o, valueAxisDim: l, baseAxisDim: s, stacked: !!i, valueDim: u, baseDim: h, baseDataOffset: c, stackedOverDimension: e.getCalculationInfo('stackedOverDimension')
    }
  } function vd(t, e) { let n = 0; const i = t.scale.getExtent(); return e === 'start' ? n = i[0] : e === 'end' ? n = i[1] : i[0] > 0 ? n = i[0] : i[1] < 0 && (n = i[1]), n } function md(t, e, n, i) { let r = 0 / 0; t.stacked && (r = n.get(n.getCalculationInfo('stackedOverDimension'), i)), isNaN(r) && (r = t.valueStart); const a = t.baseDataOffset; const o = []; return o[a] = n.get(t.baseDim, i), o[1 - a] = r, e.dataToPoint(o) } function yd(t, e) {
    const n = []; return e.diff(t).add(function (t) { n.push({cmd: '+', idx: t}) }).update(function (t, e) { n.push({cmd: '=', idx: e, idx1: t}) }).remove(function (t) { n.push({cmd: '-', idx: t}) })
      .execute(), n
  } function _d(t) { return isNaN(t[0]) || isNaN(t[1]) } function xd(t, e, n, i, r, a, o, s, l, u) { return u !== 'none' && u ? wd.apply(this, arguments) : bd.apply(this, arguments) } function wd(t, e, n, i, r, a, o, s, l, u, h) { for (var c = 0, d = n, f = 0; i > f; f++) { const p = e[d]; if (d >= r || d < 0) break; if (_d(p)) { if (h) { d += a; continue } break } if (d === n)t[a > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]); else if (l > 0) { const g = e[c]; const v = u === 'y' ? 1 : 0; const m = (p[v] - g[v]) * l; Vb(Gb, g), Gb[v] = g[v] + m, Vb(Wb, p), Wb[v] = p[v] - m, t.bezierCurveTo(Gb[0], Gb[1], Wb[0], Wb[1], p[0], p[1]) } else t.lineTo(p[0], p[1]); c = d, d += a } return f } function bd(t, e, n, i, r, a, o, s, l, u, h) { for (var c = 0, d = n, f = 0; i > f; f++) { const p = e[d]; if (d >= r || d < 0) break; if (_d(p)) { if (h) { d += a; continue } break } if (d === n)t[a > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]), Vb(Gb, p); else if (l > 0) { let g = d + a; var v = e[g]; if (h) for (;v && _d(e[g]);)g += a, v = e[g]; let m = 0.5; const y = e[c]; var v = e[g]; if (!v || _d(v))Vb(Wb, p); else { _d(v) && !h && (v = p), q(Hb, v, y); var _; var x; if (u === 'x' || u === 'y') { const w = u === 'x' ? 0 : 1; _ = Math.abs(p[w] - y[w]), x = Math.abs(p[w] - v[w]) } else _ = ap(p, y), x = ap(p, v); m = x / (x + _), Fb(Wb, p, Hb, -l * (1 - m)) }Rb(Gb, Gb, s), Nb(Gb, Gb, o), Rb(Wb, Wb, s), Nb(Wb, Wb, o), t.bezierCurveTo(Gb[0], Gb[1], Wb[0], Wb[1], p[0], p[1]), Fb(Gb, p, Hb, l * m) } else t.lineTo(p[0], p[1]); c = d, d += a } return f } function Sd(t, e) { const n = [1 / 0, 1 / 0]; const i = [-1 / 0, -1 / 0]; if (e) for (let r = 0; r < t.length; r++) { const a = t[r]; a[0] < n[0] && (n[0] = a[0]), a[1] < n[1] && (n[1] = a[1]), a[0] > i[0] && (i[0] = a[0]), a[1] > i[1] && (i[1] = a[1]) } return {min: e ? n : i, max: e ? i : n} } function Md(t, e) { if (t.length === e.length) { for (let n = 0; n < t.length; n++) { const i = t[n]; const r = e[n]; if (i[0] !== r[0] || i[1] !== r[1]) return } return !0 } } function Id(t) { return typeof t === 'number' ? t : t ? 0.5 : 0 } function Td(t, e, n) { if (!n.valueDim) return []; for (var i = [], r = 0, a = e.count(); a > r; r++)i.push(md(n, t, e, r)); return i } function Cd(t, e, n) { for (var i = e.getBaseAxis(), r = i.dim === 'x' || i.dim === 'radius' ? 0 : 1, a = [], o = 0; o < t.length - 1; o++) { const s = t[o + 1]; const l = t[o]; a.push(l); const u = []; switch (n) { case 'end': u[r] = s[r], u[1 - r] = l[1 - r], a.push(u); break; case 'middle': var h = (l[r] + s[r]) / 2; var c = []; u[r] = c[r] = h, u[1 - r] = l[1 - r], c[1 - r] = s[1 - r], a.push(u), a.push(c); break; default: u[r] = l[r], u[1 - r] = s[1 - r], a.push(u) } } return t[o] && a.push(t[o]), a } function Dd(t, e) { const n = t.getVisual('visualMeta'); if (n && n.length && t.count() && e.type === 'cartesian2d') { for (var i, r, a = n.length - 1; a >= 0; a--) { const o = n[a].dimension; const s = t.dimensions[o]; const l = t.getDimensionInfo(s); if (i = l && l.coordDim, i === 'x' || i === 'y') { r = n[a]; break } } if (r) { const u = e.getAxis(i); const h = p(r.stops, function (t) { return {coord: u.toGlobalCoord(u.dataToCoord(t.value)), color: t.color} }); const c = h.length; const d = r.outerColors.slice(); c && h[0].coord > h[c - 1].coord && (h.reverse(), d.reverse()); const g = 10; const v = h[0].coord - g; const m = h[c - 1].coord + g; const y = m - v; if (y < 0.001) return 'transparent'; f(h, function (t) { t.offset = (t.coord - v) / y }), h.push({offset: c ? h[c - 1].offset : 0.5, color: d[1] || 'transparent'}), h.unshift({offset: c ? h[0].offset : 0.5, color: d[0] || 'transparent'}); const _ = new Em(0, 0, 0, 0, h, !0); return _[i] = v, _[`${i}2`] = m, _ } } } function Ad(t, e, n) { const i = t.get('showAllSymbol'); const r = i === 'auto'; if (!i || r) { const a = n.getAxesByScale('ordinal')[0]; if (a && (!r || !kd(a, e))) { const o = e.mapDimension(a.dim); const s = {}; return f(a.getViewLabels(), function (t) { s[t.tickValue] = 1 }), function (t) { return !s.hasOwnProperty(e.get(o, t)) } } } } function kd(t, e) { const n = t.getExtent(); let i = Math.abs(n[1] - n[0]) / t.scale.count(); isNaN(i) && (i = 0); for (let r = e.count(), a = Math.max(1, Math.round(r / 5)), o = 0; r > o; o += a) if (1.5 * sd.getSymbolSize(e, o)[t.isHorizontal() ? 1 : 0] > i) return !1; return !0 } function Pd(t, e, n) { if (t.type === 'cartesian2d') { const i = t.getBaseAxis().isHorizontal(); const r = Tc(t, e, n); if (!n.get('clip', !0)) { const a = r.shape; const o = Math.max(a.width, a.height); i ? (a.y -= o, a.height += 2 * o) : (a.x -= o, a.width += 2 * o) } return r } return Cc(t, e, n) } function Ld(t, e) { this.getAllNames = function () { const t = e(); return t.mapArray(t.getName) }, this.containName = function (t) { const n = e(); return n.indexOfName(t) >= 0 }, this.indexOfName = function (e) { const n = t(); return n.indexOfName(e) }, this.getItemVisual = function (e, n) { const i = t(); return i.getItemVisual(e, n) } } function Od(t, e, n, i) {
    const r = e.getData(); const a = this.dataIndex; const o = r.getName(a); const s = e.get('selectedOffset'); i.dispatchAction({
      type: 'pieToggleSelect', from: t, name: o, seriesId: e.id
    }), r.each(function (t) { Bd(r.getItemGraphicEl(t), r.getItemLayout(t), e.isSelected(r.getName(t)), s, n) })
  } function Bd(t, e, n, i, r) { const a = (e.startAngle + e.endAngle) / 2; const o = Math.cos(a); const s = Math.sin(a); const l = n ? i : 0; const u = [o * l, s * l]; r ? t.animate().when(200, {position: u}).start('bounceOut') : t.attr('position', u) } function Ed(t, e) { tg.call(this); const n = new _m({z2: 2}); const i = new Mm(); const r = new gm(); this.add(n), this.add(i), this.add(r), this.updateData(t, e, !0) } function zd(t, e, n, i, r, a, o, s, l, u) { function h(e, n, i) { for (let r = e; n > r && !(t[r].y + i > l + o); r++) if (t[r].y += i, r > e && n > r + 1 && t[r + 1].y > t[r].y + t[r].height) return void c(r, i / 2); c(n - 1, i / 2) } function c(e, n) { for (let i = e; i >= 0 && !(t[i].y - n < l) && (t[i].y -= n, !(i > 0 && t[i].y > t[i - 1].y + t[i - 1].height)); i--); } function d(t, e, n, i, r, a) { for (let o = a > 0 ? e ? Number.MAX_VALUE : 0 : e ? Number.MAX_VALUE : 0, s = 0, l = t.length; l > s; s++) if (t[s].labelAlignTo === 'none') { const u = Math.abs(t[s].y - i); const h = t[s].len; const c = t[s].len2; let d = r + h > u ? Math.sqrt((r + h + c) * (r + h + c) - u * u) : Math.abs(t[s].x - n); e && d >= o && (d = o - 10), !e && o >= d && (d = o + 10), t[s].x = n + d * a, o = d } }t.sort(function (t, e) { return t.y - e.y }); for (var f, p = 0, g = t.length, v = [], m = [], y = 0; g > y; y++) { if (t[y].position === 'outer' && t[y].labelAlignTo === 'labelLine') { const _ = t[y].x - u; t[y].linePoints[1][0] += _, t[y].x = u }f = t[y].y - p, f < 0 && h(y, g, -f, r), p = t[y].y + t[y].height }o - p < 0 && c(g - 1, p - o); for (var y = 0; g > y; y++)t[y].y >= n ? m.push(t[y]) : v.push(t[y]); d(v, !1, e, n, i, r), d(m, !0, e, n, i, r) } function Rd(t, e, n, i, r, a, o, s) { for (var l = [], u = [], h = Number.MAX_VALUE, c = -Number.MAX_VALUE, d = 0; d < t.length; d++)Nd(t[d]) || (t[d].x < e ? (h = Math.min(h, t[d].x), l.push(t[d])) : (c = Math.max(c, t[d].x), u.push(t[d]))); zd(u, e, n, i, 1, r, a, o, s, c), zd(l, e, n, i, -1, r, a, o, s, h); for (var d = 0; d < t.length; d++) { const f = t[d]; if (!Nd(f)) { const p = f.linePoints; if (p) { var g; const v = f.labelAlignTo === 'edge'; let m = f.textRect.width; g = v ? f.x < e ? p[2][0] - f.labelDistance - o - f.labelMargin : o + r - f.labelMargin - p[2][0] - f.labelDistance : f.x < e ? f.x - o - f.bleedMargin : o + r - f.x - f.bleedMargin, g < f.textRect.width && (f.text = jn(f.text, g, f.font), f.labelAlignTo === 'edge' && (m = Hn(f.text, f.font))); const y = p[1][0] - p[2][0]; v ? p[2][0] = f.x < e ? o + f.labelMargin + m + f.labelDistance : o + r - f.labelMargin - m - f.labelDistance : (p[2][0] = f.x < e ? f.x + f.labelDistance : f.x - f.labelDistance, p[1][0] = p[2][0] + y), p[1][1] = p[2][1] = f.y } } } } function Nd(t) { return t.position === 'center' } function Fd(t, e) { return Uo(t.getBoxLayoutParams(), {width: e.getWidth(), height: e.getHeight()}) } function Vd(t, e, n) { let i; const r = {}; const a = t === 'toggleSelected'; return n.eachComponent('legend', function (n) { a && i != null ? n[i ? 'select' : 'unSelect'](e.name) : t === 'allSelect' || t === 'inverseSelect' ? n[t]() : (n[t](e.name), i = n.isSelected(e.name)); const o = n.getData(); f(o, function (t) { const e = t.get('name'); if (e !== '\n' && e !== '') { const i = n.isSelected(e); r[e] = r.hasOwnProperty(e) ? r[e] && i : i } }) }), t === 'allSelect' || t === 'inverseSelect' ? {selected: r} : {name: e.name, selected: r} } function Hd(t, e) {
    const n = hy(e.get('padding')); const i = e.getItemStyle(['color', 'opacity']); i.fill = e.get('backgroundColor'); var t = new Cm({
      shape: {
        x: t.x - n[3], y: t.y - n[0], width: t.width + n[1] + n[3], height: t.height + n[0] + n[2], r: e.get('borderRadius')
      },
      style: i,
      silent: !0,
      z2: -1
    }); return t
  } function Gd(t, e, n, i, r, a) { let o; return e !== 'line' && e.indexOf('empty') < 0 ? (o = n.getItemStyle(), t.style.stroke = i, a || (o.stroke = r)) : o = n.getItemStyle(['borderWidth', 'borderColor']), t.setStyle(o) } function Wd(t, e, n, i) { Yd(t, e, n, i), n.dispatchAction({type: 'legendToggleSelect', name: t != null ? t : e}), Xd(t, e, n, i) } function Xd(t, e, n, i) {
    const r = n.getZr().storage.getDisplayList()[0]; r && r.useHoverLayer || n.dispatchAction({
      type: 'highlight', seriesName: t, name: e, excludeSeriesId: i
    })
  } function Yd(t, e, n, i) {
    const r = n.getZr().storage.getDisplayList()[0]; r && r.useHoverLayer || n.dispatchAction({
      type: 'downplay', seriesName: t, name: e, excludeSeriesId: i
    })
  } function Ud(t, e, n) { const i = t.getOrient(); const r = [1, 1]; r[i.index] = 0, qo(e, n, {type: 'box', ignoreSize: r}) } function qd(t, e, n, i, r) { const a = t.axis; if (!a.scale.isBlank() && a.containData(e)) { if (!t.involveSeries) return void n.showPointer(t, e); const s = jd(e, t); const l = s.payloadBatch; const u = s.snapToValue; l[0] && r.seriesIndex == null && o(r, l[0]), !i && t.snap && a.containData(u) && u != null && (e = u), n.showPointer(t, e, l, r), n.showTooltip(t, s, u) } } function jd(t, e) { const n = e.axis; const i = n.dim; let r = t; const a = []; let o = Number.MAX_VALUE; let s = -1; return SS(e.seriesModels, function (e) { let l; let u; const h = e.getData().mapDimension(i, !0); if (e.getAxisTooltipData) { const c = e.getAxisTooltipData(h, t, n); u = c.dataIndices, l = c.nestestValue } else { if (u = e.getData().indicesOfNearest(h[0], t, n.type === 'category' ? 0.5 : null), !u.length) return; l = e.getData().get(h[0], u[0]) } if (l != null && isFinite(l)) { const d = t - l; const f = Math.abs(d); o >= f && ((o > f || d >= 0 && s < 0) && (o = f, s = d, r = l, a.length = 0), SS(u, function (t) { a.push({seriesIndex: e.seriesIndex, dataIndexInside: t, dataIndex: e.getData().getRawIndex(t)}) })) } }), {payloadBatch: a, snapToValue: r} } function Zd(t, e, n, i) { t[e.key] = {value: n, payloadBatch: i} } function Kd(t, e, n, i) {
    const r = n.payloadBatch; const a = e.axis; const o = a.model; const s = e.axisPointerModel; if (e.triggerTooltip && r.length) {
      const l = e.coordSys.model; const u = id(l); let h = t.map[u]; h || (h = t.map[u] = {
        coordSysId: l.id, coordSysIndex: l.componentIndex, coordSysType: l.type, coordSysMainType: l.mainType, dataByAxis: []
      }, t.list.push(h)), h.dataByAxis.push({
        axisDim: a.dim, axisIndex: o.componentIndex, axisType: o.type, axisId: o.id, value: i, valueLabelOpt: {precision: s.get('label.precision'), formatter: s.get('label.formatter')}, seriesDataIndices: r.slice()
      })
    }
  } function $d(t, e, n) { const i = n.axesInfo = []; SS(e, function (e, n) { const r = e.axisPointerModel.option; const a = t[n]; a ? (!e.useHandle && (r.status = 'show'), r.value = a.value, r.seriesDataIndices = (a.payloadBatch || []).slice()) : !e.useHandle && (r.status = 'hide'), r.status === 'show' && i.push({axisDim: e.axis.dim, axisIndex: e.axis.model.componentIndex, value: r.value}) }) } function Qd(t, e, n, i) {
    if (nf(e) || !t.list.length) return void i({type: 'hideTip'}); const r = ((t.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {}; i({
      type: 'showTip', escapeConnect: !0, x: e[0], y: e[1], tooltipOption: n.tooltipOption, position: n.position, dataIndexInside: r.dataIndexInside, dataIndex: r.dataIndex, seriesIndex: r.seriesIndex, dataByCoordSys: t.list
    })
  } function Jd(t, e, n) { const i = n.getZr(); const r = 'axisPointerLastHighlights'; const a = IS(i)[r] || {}; const o = IS(i)[r] = {}; SS(t, function (t) { const e = t.axisPointerModel.option; e.status === 'show' && SS(e.seriesDataIndices, function (t) { const e = `${t.seriesIndex} | ${t.dataIndex}`; o[e] = t }) }); const s = []; const l = []; f(a, function (t, e) { !o[e] && l.push(t) }), f(o, function (t, e) { !a[e] && s.push(t) }), l.length && n.dispatchAction({type: 'downplay', escapeConnect: !0, batch: l}), s.length && n.dispatchAction({type: 'highlight', escapeConnect: !0, batch: s}) } function tf(t, e) { for (let n = 0; n < (t || []).length; n++) { const i = t[n]; if (e.axis.dim === i.axisDim && e.axis.model.componentIndex === i.axisIndex) return i } } function ef(t) { const e = t.axis.model; const n = {}; const i = n.axisDim = t.axis.dim; return n.axisIndex = n[`${i}AxisIndex`] = e.componentIndex, n.axisName = n[`${i}AxisName`] = e.name, n.axisId = n[`${i}AxisId`] = e.id, n } function nf(t) { return !t || t[0] == null || isNaN(t[0]) || t[1] == null || isNaN(t[1]) } function rf(t, e, n) { if (!Hf.node) { const i = e.getZr(); CS(i).records || (CS(i).records = {}), af(i, e); const r = CS(i).records[t] || (CS(i).records[t] = {}); r.handler = n } } function af(t, e) { function n(n, i) { t.on(n, function (n) { const r = uf(e); DS(CS(t).records, function (t) { t && i(t, n, r.dispatchAction) }), of(r.pendings, e) }) }CS(t).initialized || (CS(t).initialized = !0, n('click', _(lf, 'click')), n('mousemove', _(lf, 'mousemove')), n('globalout', sf)) } function of(t, e) { let n; const i = t.showTip.length; const r = t.hideTip.length; i ? n = t.showTip[i - 1] : r && (n = t.hideTip[r - 1]), n && (n.dispatchAction = null, e.dispatchAction(n)) } function sf(t, e, n) { t.handler('leave', null, n) } function lf(t, e, n, i) { e.handler(t, n, i) } function uf(t) { const e = {showTip: [], hideTip: []}; var n = function (i) { const r = e[i.type]; r ? r.push(i) : (i.dispatchAction = n, t.dispatchAction(i)) }; return {dispatchAction: n, pendings: e} } function hf(t, e) { if (!Hf.node) { const n = e.getZr(); const i = (CS(n).records || {})[t]; i && (CS(n).records[t] = null) } } function cf() {} function df(t, e, n, i) { ff(kS(n).lastProp, i) || (kS(n).lastProp = i, e ? Ka(n, i, t) : (n.stopAnimation(), n.attr(i))) } function ff(t, e) { if (S(t) && S(e)) { let n = !0; return f(e, function (e, i) { n = n && ff(t[i], e) }), !!n } return t === e } function pf(t, e) { t[e.get('label.show') ? 'show' : 'hide']() } function gf(t) { return {position: t.position.slice(), rotation: t.rotation || 0} } function vf(t, e, n) { const i = e.get('z'); const r = e.get('zlevel'); t && t.traverse(function (t) { t.type !== 'group' && (i != null && (t.z = i), r != null && (t.zlevel = r), t.silent = n) }) } function mf(t) { let e; const n = t.get('type'); const i = t.getModel(`${n}Style`); return n === 'line' ? (e = i.getLineStyle(), e.fill = null) : n === 'shadow' && (e = i.getAreaStyle(), e.stroke = null), e } function yf(t, e, n, i, r) {
    const a = n.get('value'); const o = xf(a, e.axis, e.ecModel, n.get('seriesDataIndices'), {precision: n.get('label.precision'), formatter: n.get('label.formatter')}); const s = n.getModel('label'); const l = hy(s.get('padding') || 0); const u = s.getFont(); const h = Gn(o, u); const c = r.position; const d = h.width + l[1] + l[3]; const f = h.height + l[0] + l[2]; const p = r.align; p === 'right' && (c[0] -= d), p === 'center' && (c[0] -= d / 2); const g = r.verticalAlign; g === 'bottom' && (c[1] -= f), g === 'middle' && (c[1] -= f / 2), _f(c, d, f, i); let v = s.get('backgroundColor'); v && v !== 'auto' || (v = e.get('axisLine.lineStyle.color')), t.label = {
      shape: {
        x: 0, y: 0, width: d, height: f, r: s.get('borderRadius')
      },
      position: c.slice(),
      style: {
        text: o, textFont: u, textFill: s.getTextColor(), textPosition: 'inside', textPadding: l, fill: v, stroke: s.get('borderColor') || 'transparent', lineWidth: s.get('borderWidth') || 0, shadowBlur: s.get('shadowBlur'), shadowColor: s.get('shadowColor'), shadowOffsetX: s.get('shadowOffsetX'), shadowOffsetY: s.get('shadowOffsetY')
      },
      z2: 10
    }
  } function _f(t, e, n, i) { const r = i.getWidth(); const a = i.getHeight(); t[0] = Math.min(t[0] + e, r) - e, t[1] = Math.min(t[1] + n, a) - n, t[0] = Math.max(t[0], 0), t[1] = Math.max(t[1], 0) } function xf(t, e, n, i, r) {
    t = e.scale.parse(t); let a = e.scale.getLabel(t, {precision: r.precision}); const o = r.formatter; if (o) {
      const s = {
        value: zh(e, t), axisDimension: e.dim, axisIndex: e.index, seriesData: []
      }; f(i, function (t) { const e = n.getSeriesByIndex(t.seriesIndex); const i = t.dataIndexInside; const r = e && e.getDataParams(i); r && s.seriesData.push(r) }), b(o) ? a = o.replace('{value}', a) : w(o) && (a = o(s))
    } return a
  } function wf(t, e, n) { const i = Ae(); return Be(i, i, n.rotation), Oe(i, i, n.position), Ja([t.dataToCoord(e), (n.labelOffset || 0) + (n.labelDirection || 1) * (n.labelMargin || 0)], i) } function bf(t, e, n, i, r, a) { const o = mb.innerTextLayout(n.rotation, 0, n.labelDirection); n.labelMargin = r.get('label.margin'), yf(e, i, r, a, {position: wf(i.axis, t, n), align: o.textAlign, verticalAlign: o.textVerticalAlign}) } function Sf(t, e, n) {
    return n = n || 0, {
      x1: t[n], y1: t[1 - n], x2: e[n], y2: e[1 - n]
    }
  } function Mf(t, e, n) {
    return n = n || 0, {
      x: t[n], y: t[1 - n], width: e[n], height: e[1 - n]
    }
  } function If(t, e) { const n = {}; return n[`${e.dim}AxisIndex`] = e.index, t.getCartesian(n) } function Tf(t) { return t.dim === 'x' ? 0 : 1 } function Cf(t) { const e = 'cubic-bezier(0.23, 1, 0.32, 1)'; const n = `left ${t}s ${e},top ${t}s ${e}`; return p(RS, function (t) { return `${t}transition:${n}` }).join(';') } function Df(t) { const e = []; const n = t.get('fontSize'); const i = t.getTextColor(); return i && e.push(`color:${i}`), e.push(`font:${t.getFont()}`), n && e.push(`line-height:${Math.round(3 * n / 2)}px`), ES(['decoration', 'align'], function (n) { const i = t.get(n); i && e.push(`text-${n}:${i}`) }), e.join(';') } function Af(t) { const e = []; const n = t.get('transitionDuration'); const i = t.get('backgroundColor'); const r = t.getModel('textStyle'); const a = t.get('padding'); return n && e.push(Cf(n)), i && (Hf.canvasSupported ? e.push(`background-Color:${i}`) : (e.push(`background-Color:#${tn(i)}`), e.push('filter:alpha(opacity=70)'))), ES(['width', 'color', 'radius'], function (n) { const i = `border-${n}`; const r = zS(i); const a = t.get(r); a != null && e.push(`${i}:${a}${n === 'color' ? '' : 'px'}`) }), e.push(Df(r)), a != null && e.push(`padding:${hy(a).join('px ')}px`), `${e.join(';')};` } function kf(t, e) { if (Hf.wxa) return null; const n = document.createElement('div'); const i = this._zr = e.getZr(); this.el = n, this._x = e.getWidth() / 2, this._y = e.getHeight() / 2, t.appendChild(n), this._container = t, this._show = !1, this._hideTimeout; const r = this; n.onmouseenter = function () { r._enterable && (clearTimeout(r._hideTimeout), r._show = !0), r._inContent = !0 }, n.onmousemove = function (e) { if (e = e || window.event, !r._enterable) { const n = i.handler; _e(t, e, !0), n.dispatch('mousemove', e) } }, n.onmouseleave = function () { r._enterable && r._show && r.hideLater(r._hideDelay), r._inContent = !1 } } function Pf(t) { this._zr = t.getZr(), this._show = !1, this._hideTimeout } function Lf(t) { for (var e = t.pop(); t.length;) { let n = t.pop(); n && (uo.isInstance(n) && (n = n.get('tooltip', !0)), typeof n === 'string' && (n = {formatter: n}), e = new uo(n, e, e.ecModel)) } return e } function Of(t, e) { return t.dispatchAction || y(e.dispatchAction, e) } function Bf(t, e, n, i, r, a, o) { const s = n.getOuterSize(); const l = s.width; const u = s.height; return a != null && (t + l + a > i ? t -= l + a : t += a), o != null && (e + u + o > r ? e -= u + o : e += o), [t, e] } function Ef(t, e, n, i, r) { const a = n.getOuterSize(); const o = a.width; const s = a.height; return t = Math.min(t + o, i) - o, e = Math.min(e + s, r) - s, t = Math.max(t, 0), e = Math.max(e, 0), [t, e] } function zf(t, e, n) { const i = n[0]; const r = n[1]; const a = 5; let o = 0; let s = 0; const l = e.width; const u = e.height; switch (t) { case 'inside': o = e.x + l / 2 - i / 2, s = e.y + u / 2 - r / 2; break; case 'top': o = e.x + l / 2 - i / 2, s = e.y - r - a; break; case 'bottom': o = e.x + l / 2 - i / 2, s = e.y + u + a; break; case 'left': o = e.x - i - a, s = e.y + u / 2 - r / 2; break; case 'right': o = e.x + l + a, s = e.y + u / 2 - r / 2 } return [o, s] } function Rf(t) { return t === 'center' || t === 'middle' } let Nf = 2311; var Ff = function () { return Nf++ }; let Vf = {}; Vf = typeof wx === 'object' && typeof wx.getSystemInfoSync === 'function' ? {
    browser: {}, os: {}, node: !1, wxa: !0, canvasSupported: !0, svgSupported: !1, touchEventsSupported: !0, domSupported: !1
  } : typeof document === 'undefined' && typeof self !== 'undefined' ? {
    browser: {}, os: {}, node: !1, worker: !0, canvasSupported: !0, domSupported: !1
  } : typeof navigator === 'undefined' ? {
    browser: {}, os: {}, node: !0, worker: !1, canvasSupported: !0, svgSupported: !0, domSupported: !1
  } : e(navigator.userAgent); var Hf = Vf; var Gf = {
    '[object Function]': 1, '[object RegExp]': 1, '[object Date]': 1, '[object Error]': 1, '[object CanvasGradient]': 1, '[object CanvasPattern]': 1, '[object Image]': 1, '[object Canvas]': 1
  }; var Wf = {
    '[object Int8Array]': 1, '[object Uint8Array]': 1, '[object Uint8ClampedArray]': 1, '[object Int16Array]': 1, '[object Uint16Array]': 1, '[object Int32Array]': 1, '[object Uint32Array]': 1, '[object Float32Array]': 1, '[object Float64Array]': 1
  }; var Xf = Object.prototype.toString; const Yf = Array.prototype; var Uf = Yf.forEach; var qf = Yf.filter; var jf = Yf.slice; var Zf = Yf.map; var Kf = Yf.reduce; var $f = {}; var Qf = function () { return $f.createCanvas() }; $f.createCanvas = function () { return document.createElement('canvas') }; let Jf; var tp = '__ec_primitive__'; R.prototype = {
    constructor: R, get(t) { return this.data.hasOwnProperty(t) ? this.data[t] : null }, set(t, e) { return this.data[t] = e }, each(t, e) { void 0 !== e && (t = y(t, e)); for (const n in this.data) this.data.hasOwnProperty(n) && t(this.data[n], n) }, removeKey(t) { delete this.data[t] }
  }; const ep = (Object.freeze || Object)({
    $override: n, clone: i, merge: r, mergeAll: a, extend: o, defaults: s, createCanvas: Qf, getContext: l, indexOf: u, inherits: h, mixin: c, isArrayLike: d, each: f, map: p, reduce: g, filter: v, find: m, bind: y, curry: _, isArray: x, isFunction: w, isString: b, isObject: S, isBuiltInObject: M, isTypedArray: I, isDom: T, eqNaN: C, retrieve: D, retrieve2: A, retrieve3: k, slice: P, normalizeCssArray: L, assert: O, trim: B, setAsPrimitive: E, isPrimitive: z, createHashMap: N, concatArray: F, noop: V
  }); var np = typeof Float32Array === 'undefined' ? Array : Float32Array; const ip = j; const rp = Z; var ap = ee; var op = ne; const sp = (Object.freeze || Object)({
    create: H, copy: G, clone: W, set: X, add: Y, scaleAndAdd: U, sub: q, len: j, length: ip, lenSquare: Z, lengthSquare: rp, mul: K, div: $, dot: Q, scale: J, normalize: te, distance: ee, dist: ap, distanceSquare: ne, distSquare: op, negate: ie, lerp: re, applyTransform: ae, min: oe, max: se
  }); le.prototype = {
    constructor: le, _dragStart(t) { const e = t.target; e && e.draggable && (this._draggingTarget = e, e.dragging = !0, this._x = t.offsetX, this._y = t.offsetY, this.dispatchToElement(ue(e, t), 'dragstart', t.event)) }, _drag(t) { const e = this._draggingTarget; if (e) { const n = t.offsetX; const i = t.offsetY; const r = n - this._x; const a = i - this._y; this._x = n, this._y = i, e.drift(r, a, t), this.dispatchToElement(ue(e, t), 'drag', t.event); const o = this.findHover(n, i, e).target; const s = this._dropTarget; this._dropTarget = o, e !== o && (s && o !== s && this.dispatchToElement(ue(s, t), 'dragleave', t.event), o && o !== s && this.dispatchToElement(ue(o, t), 'dragenter', t.event)) } }, _dragEnd(t) { const e = this._draggingTarget; e && (e.dragging = !1), this.dispatchToElement(ue(e, t), 'dragend', t.event), this._dropTarget && this.dispatchToElement(ue(this._dropTarget, t), 'drop', t.event), this._draggingTarget = null, this._dropTarget = null }
  }; const lp = Array.prototype.slice; var up = function (t) { this._$handlers = {}, this._$eventProcessor = t }; up.prototype = {
    constructor: up, one(t, e, n, i) { return ce(this, t, e, n, i, !0) }, on(t, e, n, i) { return ce(this, t, e, n, i, !1) }, isSilent(t) { const e = this._$handlers; return !e[t] || !e[t].length }, off(t, e) { const n = this._$handlers; if (!t) return this._$handlers = {}, this; if (e) { if (n[t]) { for (var i = [], r = 0, a = n[t].length; a > r; r++)n[t][r].h !== e && i.push(n[t][r]); n[t] = i }n[t] && n[t].length === 0 && delete n[t] } else delete n[t]; return this }, trigger(t) { const e = this._$handlers[t]; const n = this._$eventProcessor; if (e) { let i = arguments; const r = i.length; r > 3 && (i = lp.call(i, 1)); for (let a = e.length, o = 0; a > o;) { const s = e[o]; if (n && n.filter && s.query != null && !n.filter(t, s.query))o++; else { switch (r) { case 1: s.h.call(s.ctx); break; case 2: s.h.call(s.ctx, i[1]); break; case 3: s.h.call(s.ctx, i[1], i[2]); break; default: s.h.apply(s.ctx, i) }s.one ? (e.splice(o, 1), a--) : o++ } } } return n && n.afterTrigger && n.afterTrigger(t), this }, triggerWithContext(t) { const e = this._$handlers[t]; const n = this._$eventProcessor; if (e) { let i = arguments; const r = i.length; r > 4 && (i = lp.call(i, 1, i.length - 1)); for (let a = i[i.length - 1], o = e.length, s = 0; o > s;) { const l = e[s]; if (n && n.filter && l.query != null && !n.filter(t, l.query))s++; else { switch (r) { case 1: l.h.call(a); break; case 2: l.h.call(a, i[1]); break; case 3: l.h.call(a, i[1], i[2]); break; default: l.h.apply(a, i) }l.one ? (e.splice(s, 1), o--) : s++ } } } return n && n.afterTrigger && n.afterTrigger(t), this }
  }; var hp = Math.log(2); var cp = typeof window !== 'undefined' && !!window.addEventListener; var dp = /^(?:mouse|pointer|contextmenu|drag|drop)|click/; var fp = '___zrEVENTSAVED'; var pp = []; var gp = cp ? function (t) { t.preventDefault(), t.stopPropagation(), t.cancelBubble = !0 } : function (t) { t.returnValue = !1, t.cancelBubble = !0 }; const vp = function () { this._track = [] }; vp.prototype = {
    constructor: vp,
    recognize(t, e, n) { return this._doTrack(t, e, n), this._recognize(t) },
    clear() { return this._track.length = 0, this },
    _doTrack(t, e, n) {
      const i = t.touches; if (i) {
        for (var r = {
            points: [], touches: [], target: e, event: t
          }, a = 0, o = i.length; o > a; a++) { const s = i[a]; const l = pe(n, s, {}); r.points.push([l.zrX, l.zrY]), r.touches.push(s) } this._track.push(r)
      }
    },
    _recognize(t) { for (const e in mp) if (mp.hasOwnProperty(e)) { const n = mp[e](this._track, t); if (n) return n } }
  }; var mp = {pinch(t, e) { const n = t.length; if (n) { const i = (t[n - 1] || {}).points; const r = (t[n - 2] || {}).points || i; if (r && r.length > 1 && i && i.length > 1) { let a = be(i) / be(r); !isFinite(a) && (a = 1), e.pinchScale = a; const o = Se(i); return e.pinchX = o[0], e.pinchY = o[1], {type: 'pinch', target: t[0].target, event: e} } } }}; var yp = 'silent'; Te.prototype.dispose = function () {}; const _p = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu']; const xp = function (t, e, n, i) { up.call(this), this.storage = t, this.painter = e, this.painterRoot = i, n = n || new Te(), this.proxy = null, this._hovered = {}, this._lastTouchMoment, this._lastX, this._lastY, this._gestureMgr, le.call(this), this.setHandlerProxy(n) }; xp.prototype = {
    constructor: xp, setHandlerProxy(t) { this.proxy && this.proxy.dispose(), t && (f(_p, function (e) { t.on && t.on(e, this[e], this) }, this), t.handler = this), this.proxy = t }, mousemove(t) { const e = t.zrX; const n = t.zrY; const i = De(this, e, n); let r = this._hovered; let a = r.target; a && !a.__zr && (r = this.findHover(r.x, r.y), a = r.target); const o = this._hovered = i ? {x: e, y: n} : this.findHover(e, n); const s = o.target; const l = this.proxy; l.setCursor && l.setCursor(s ? s.cursor : 'default'), a && s !== a && this.dispatchToElement(r, 'mouseout', t), this.dispatchToElement(o, 'mousemove', t), s && s !== a && this.dispatchToElement(o, 'mouseover', t) }, mouseout(t) { const e = t.zrEventControl; const n = t.zrIsToLocalDOM; e !== 'only_globalout' && this.dispatchToElement(this._hovered, 'mouseout', t), e !== 'no_globalout' && !n && this.trigger('globalout', {type: 'globalout', event: t}) }, resize() { this._hovered = {} }, dispatch(t, e) { const n = this[t]; n && n.call(this, e) }, dispose() { this.proxy.dispose(), this.storage = this.proxy = this.painter = null }, setCursorStyle(t) { const e = this.proxy; e.setCursor && e.setCursor(t) }, dispatchToElement(t, e, n) { t = t || {}; let i = t.target; if (!i || !i.silent) { for (var r = `on${e}`, a = Me(e, t, n); i && (i[r] && (a.cancelBubble = i[r].call(i, a)), i.trigger(e, a), i = i.parent, !a.cancelBubble););a.cancelBubble || (this.trigger(e, a), this.painter && this.painter.eachOtherLayer(function (t) { typeof t[r] === 'function' && t[r].call(t, a), t.trigger && t.trigger(e, a) })) } }, findHover(t, e, n) { for (var i = this.storage.getDisplayList(), r = {x: t, y: e}, a = i.length - 1; a >= 0; a--) { var o; if (i[a] !== n && !i[a].ignore && (o = Ce(i[a], t, e)) && (!r.topTarget && (r.topTarget = i[a]), o !== yp)) { r.target = i[a]; break } } return r }, processGesture(t, e) { this._gestureMgr || (this._gestureMgr = new vp()); const n = this._gestureMgr; e === 'start' && n.clear(); const i = n.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom); if (e === 'end' && n.clear(), i) { const r = i.type; t.gestureEvent = r, this.dispatchToElement({target: i.target}, r, i.event) } }
  }, f(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (t) { xp.prototype[t] = function (e) { let n; let i; const r = e.zrX; const a = e.zrY; const o = De(this, r, a); if (t === 'mouseup' && o || (n = this.findHover(r, a), i = n.target), t === 'mousedown') this._downEl = i, this._downPoint = [e.zrX, e.zrY], this._upEl = i; else if (t === 'mouseup') this._upEl = i; else if (t === 'click') { if (this._downEl !== this._upEl || !this._downPoint || ap(this._downPoint, [e.zrX, e.zrY]) > 4) return; this._downPoint = null } this.dispatchToElement(n, t, e) } }), c(xp, up), c(xp, le); var wp = typeof Float32Array === 'undefined' ? Array : Float32Array; const bp = (Object.freeze || Object)({
    create: Ae, identity: ke, copy: Pe, mul: Le, translate: Oe, rotate: Be, scale: Ee, invert: ze, clone: Re
  }); const Sp = ke; var Mp = 5e-5; var Ip = function (t) { t = t || {}, t.position || (this.position = [0, 0]), t.rotation == null && (this.rotation = 0), t.scale || (this.scale = [1, 1]), this.origin = this.origin || null }; const Tp = Ip.prototype; Tp.transform = null, Tp.needLocalTransform = function () { return Ne(this.rotation) || Ne(this.position[0]) || Ne(this.position[1]) || Ne(this.scale[0] - 1) || Ne(this.scale[1] - 1) }; const Cp = []; Tp.updateTransform = function () { const t = this.parent; const e = t && t.transform; const n = this.needLocalTransform(); let i = this.transform; if (!n && !e) return void (i && Sp(i)); i = i || Ae(), n ? this.getLocalTransform(i) : Sp(i), e && (n ? Le(i, t.transform, i) : Pe(i, t.transform)), this.transform = i; const r = this.globalScaleRatio; if (r != null && r !== 1) { this.getGlobalScale(Cp); const a = Cp[0] < 0 ? -1 : 1; const o = Cp[1] < 0 ? -1 : 1; const s = ((Cp[0] - a) * r + a) / Cp[0] || 0; const l = ((Cp[1] - o) * r + o) / Cp[1] || 0; i[0] *= s, i[1] *= s, i[2] *= l, i[3] *= l } this.invTransform = this.invTransform || Ae(), ze(this.invTransform, i) }, Tp.getLocalTransform = function (t) { return Ip.getLocalTransform(this, t) }, Tp.setTransform = function (t) { const e = this.transform; const n = t.dpr || 1; e ? t.setTransform(n * e[0], n * e[1], n * e[2], n * e[3], n * e[4], n * e[5]) : t.setTransform(n, 0, 0, n, 0, 0) }, Tp.restoreTransform = function (t) { const e = t.dpr || 1; t.setTransform(e, 0, 0, e, 0, 0) }; const Dp = []; const Ap = Ae(); Tp.setLocalTransform = function (t) { if (t) { let e = t[0] * t[0] + t[1] * t[1]; let n = t[2] * t[2] + t[3] * t[3]; const i = this.position; const r = this.scale; Ne(e - 1) && (e = Math.sqrt(e)), Ne(n - 1) && (n = Math.sqrt(n)), t[0] < 0 && (e = -e), t[3] < 0 && (n = -n), i[0] = t[4], i[1] = t[5], r[0] = e, r[1] = n, this.rotation = Math.atan2(-t[1] / n, t[0] / e) } }, Tp.decomposeTransform = function () { if (this.transform) { const t = this.parent; let e = this.transform; t && t.transform && (Le(Dp, t.invTransform, e), e = Dp); const n = this.origin; n && (n[0] || n[1]) && (Ap[4] = n[0], Ap[5] = n[1], Le(Dp, e, Ap), Dp[4] -= n[0], Dp[5] -= n[1], e = Dp), this.setLocalTransform(e) } }, Tp.getGlobalScale = function (t) { const e = this.transform; return t = t || [], e ? (t[0] = Math.sqrt(e[0] * e[0] + e[1] * e[1]), t[1] = Math.sqrt(e[2] * e[2] + e[3] * e[3]), e[0] < 0 && (t[0] = -t[0]), e[3] < 0 && (t[1] = -t[1]), t) : (t[0] = 1, t[1] = 1, t) }, Tp.transformCoordToLocal = function (t, e) { const n = [t, e]; const i = this.invTransform; return i && ae(n, n, i), n }, Tp.transformCoordToGlobal = function (t, e) { const n = [t, e]; const i = this.transform; return i && ae(n, n, i), n }, Ip.getLocalTransform = function (t, e) { e = e || [], Sp(e); const n = t.origin; const i = t.scale || [1, 1]; const r = t.rotation || 0; const a = t.position || [0, 0]; return n && (e[4] -= n[0], e[5] -= n[1]), Ee(e, e, i), r && Be(e, e, r), n && (e[4] += n[0], e[5] += n[1]), e[4] += a[0], e[5] += a[1], e }; var kp = {
    linear(t) { return t }, quadraticIn(t) { return t * t }, quadraticOut(t) { return t * (2 - t) }, quadraticInOut(t) { return (t *= 2) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1) }, cubicIn(t) { return t * t * t }, cubicOut(t) { return --t * t * t + 1 }, cubicInOut(t) { return (t *= 2) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2) }, quarticIn(t) { return t * t * t * t }, quarticOut(t) { return 1 - --t * t * t * t }, quarticInOut(t) { return (t *= 2) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2) }, quinticIn(t) { return t * t * t * t * t }, quinticOut(t) { return --t * t * t * t * t + 1 }, quinticInOut(t) { return (t *= 2) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2) }, sinusoidalIn(t) { return 1 - Math.cos(t * Math.PI / 2) }, sinusoidalOut(t) { return Math.sin(t * Math.PI / 2) }, sinusoidalInOut(t) { return 0.5 * (1 - Math.cos(Math.PI * t)) }, exponentialIn(t) { return t === 0 ? 0 : Math.pow(1024, t - 1) }, exponentialOut(t) { return t === 1 ? 1 : 1 - Math.pow(2, -10 * t) }, exponentialInOut(t) { return t === 0 ? 0 : t === 1 ? 1 : (t *= 2) < 1 ? 0.5 * Math.pow(1024, t - 1) : 0.5 * (-Math.pow(2, -10 * (t - 1)) + 2) }, circularIn(t) { return 1 - Math.sqrt(1 - t * t) }, circularOut(t) { return Math.sqrt(1 - --t * t) }, circularInOut(t) { return (t *= 2) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) }, elasticIn(t) { let e; let n = 0.1; const i = 0.4; return t === 0 ? 0 : t === 1 ? 1 : (!n || n < 1 ? (n = 1, e = i / 4) : e = i * Math.asin(1 / n) / (2 * Math.PI), -(n * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (t - e) * Math.PI / i))) }, elasticOut(t) { let e; let n = 0.1; const i = 0.4; return t === 0 ? 0 : t === 1 ? 1 : (!n || n < 1 ? (n = 1, e = i / 4) : e = i * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * t) * Math.sin(2 * (t - e) * Math.PI / i) + 1) }, elasticInOut(t) { let e; let n = 0.1; const i = 0.4; return t === 0 ? 0 : t === 1 ? 1 : (!n || n < 1 ? (n = 1, e = i / 4) : e = i * Math.asin(1 / n) / (2 * Math.PI), (t *= 2) < 1 ? -0.5 * n * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (t - e) * Math.PI / i) : n * Math.pow(2, -10 * (t -= 1)) * Math.sin(2 * (t - e) * Math.PI / i) * 0.5 + 1) }, backIn(t) { const e = 1.70158; return t * t * ((e + 1) * t - e) }, backOut(t) { const e = 1.70158; return --t * t * ((e + 1) * t + e) + 1 }, backInOut(t) { const e = 2.5949095; return (t *= 2) < 1 ? 0.5 * t * t * ((e + 1) * t - e) : 0.5 * ((t -= 2) * t * ((e + 1) * t + e) + 2) }, bounceIn(t) { return 1 - kp.bounceOut(1 - t) }, bounceOut(t) { return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375 : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375 }, bounceInOut(t) { return t < 0.5 ? 0.5 * kp.bounceIn(2 * t) : 0.5 * kp.bounceOut(2 * t - 1) + 0.5 }
  }; Fe.prototype = {
    constructor: Fe,
    step(t, e) {
      if (this._initialized || (this._startTime = t + this._delay, this._initialized = !0), this._paused) return void (this._pausedTime += e); let n = (t - this._startTime - this._pausedTime) / this._life; if (!(n < 0)) {
        n = Math.min(n, 1)
        const i = this.easing; const r = typeof i === 'string' ? kp[i] : i; const a = typeof r === 'function' ? r(n) : n; return this.fire('frame', a), n === 1 ? this.loop ? (this.restart(t), 'restart') : (this._needsRemove = !0, 'destroy') : null
      }
    },
    restart(t) { const e = (t - this._startTime - this._pausedTime) % this._life; this._startTime = t - e + this.gap, this._pausedTime = 0, this._needsRemove = !1 },
    fire(t, e) { t = `on${t}`, this[t] && this[t](this._target, e) },
    pause() { this._paused = !0 },
    resume() { this._paused = !1 }
  }; const Pp = function () { this.head = null, this.tail = null, this._len = 0 }; const Lp = Pp.prototype; Lp.insert = function (t) { const e = new Op(t); return this.insertEntry(e), e }, Lp.insertEntry = function (t) { this.head ? (this.tail.next = t, t.prev = this.tail, t.next = null, this.tail = t) : this.head = this.tail = t, this._len++ }, Lp.remove = function (t) { const e = t.prev; const n = t.next; e ? e.next = n : this.head = n, n ? n.prev = e : this.tail = e, t.next = t.prev = null, this._len-- }, Lp.len = function () { return this._len }, Lp.clear = function () { this.head = this.tail = null, this._len = 0 }; var Op = function (t) { this.value = t, this.next, this.prev }; const Bp = function (t) { this._list = new Pp(), this._map = {}, this._maxSize = t || 10, this._lastRemovedEntry = null }; const Ep = Bp.prototype; Ep.put = function (t, e) { const n = this._list; const i = this._map; let r = null; if (i[t] == null) { const a = n.len(); let o = this._lastRemovedEntry; if (a >= this._maxSize && a > 0) { const s = n.head; n.remove(s), delete i[s.key], r = s.value, this._lastRemovedEntry = s }o ? o.value = e : o = new Op(e), o.key = t, n.insertEntry(o), i[t] = o } return r }, Ep.get = function (t) { const e = this._map[t]; const n = this._list; return e != null ? (e !== n.tail && (n.remove(e), n.insertEntry(e)), e.value) : void 0 }, Ep.clear = function () { this._list.clear(), this._map = {} }; var zp = {
    transparent: [0, 0, 0, 0], aliceblue: [240, 248, 255, 1], antiquewhite: [250, 235, 215, 1], aqua: [0, 255, 255, 1], aquamarine: [127, 255, 212, 1], azure: [240, 255, 255, 1], beige: [245, 245, 220, 1], bisque: [255, 228, 196, 1], black: [0, 0, 0, 1], blanchedalmond: [255, 235, 205, 1], blue: [0, 0, 255, 1], blueviolet: [138, 43, 226, 1], brown: [165, 42, 42, 1], burlywood: [222, 184, 135, 1], cadetblue: [95, 158, 160, 1], chartreuse: [127, 255, 0, 1], chocolate: [210, 105, 30, 1], coral: [255, 127, 80, 1], cornflowerblue: [100, 149, 237, 1], cornsilk: [255, 248, 220, 1], crimson: [220, 20, 60, 1], cyan: [0, 255, 255, 1], darkblue: [0, 0, 139, 1], darkcyan: [0, 139, 139, 1], darkgoldenrod: [184, 134, 11, 1], darkgray: [169, 169, 169, 1], darkgreen: [0, 100, 0, 1], darkgrey: [169, 169, 169, 1], darkkhaki: [189, 183, 107, 1], darkmagenta: [139, 0, 139, 1], darkolivegreen: [85, 107, 47, 1], darkorange: [255, 140, 0, 1], darkorchid: [153, 50, 204, 1], darkred: [139, 0, 0, 1], darksalmon: [233, 150, 122, 1], darkseagreen: [143, 188, 143, 1], darkslateblue: [72, 61, 139, 1], darkslategray: [47, 79, 79, 1], darkslategrey: [47, 79, 79, 1], darkturquoise: [0, 206, 209, 1], darkviolet: [148, 0, 211, 1], deeppink: [255, 20, 147, 1], deepskyblue: [0, 191, 255, 1], dimgray: [105, 105, 105, 1], dimgrey: [105, 105, 105, 1], dodgerblue: [30, 144, 255, 1], firebrick: [178, 34, 34, 1], floralwhite: [255, 250, 240, 1], forestgreen: [34, 139, 34, 1], fuchsia: [255, 0, 255, 1], gainsboro: [220, 220, 220, 1], ghostwhite: [248, 248, 255, 1], gold: [255, 215, 0, 1], goldenrod: [218, 165, 32, 1], gray: [128, 128, 128, 1], green: [0, 128, 0, 1], greenyellow: [173, 255, 47, 1], grey: [128, 128, 128, 1], honeydew: [240, 255, 240, 1], hotpink: [255, 105, 180, 1], indianred: [205, 92, 92, 1], indigo: [75, 0, 130, 1], ivory: [255, 255, 240, 1], khaki: [240, 230, 140, 1], lavender: [230, 230, 250, 1], lavenderblush: [255, 240, 245, 1], lawngreen: [124, 252, 0, 1], lemonchiffon: [255, 250, 205, 1], lightblue: [173, 216, 230, 1], lightcoral: [240, 128, 128, 1], lightcyan: [224, 255, 255, 1], lightgoldenrodyellow: [250, 250, 210, 1], lightgray: [211, 211, 211, 1], lightgreen: [144, 238, 144, 1], lightgrey: [211, 211, 211, 1], lightpink: [255, 182, 193, 1], lightsalmon: [255, 160, 122, 1], lightseagreen: [32, 178, 170, 1], lightskyblue: [135, 206, 250, 1], lightslategray: [119, 136, 153, 1], lightslategrey: [119, 136, 153, 1], lightsteelblue: [176, 196, 222, 1], lightyellow: [255, 255, 224, 1], lime: [0, 255, 0, 1], limegreen: [50, 205, 50, 1], linen: [250, 240, 230, 1], magenta: [255, 0, 255, 1], maroon: [128, 0, 0, 1], mediumaquamarine: [102, 205, 170, 1], mediumblue: [0, 0, 205, 1], mediumorchid: [186, 85, 211, 1], mediumpurple: [147, 112, 219, 1], mediumseagreen: [60, 179, 113, 1], mediumslateblue: [123, 104, 238, 1], mediumspringgreen: [0, 250, 154, 1], mediumturquoise: [72, 209, 204, 1], mediumvioletred: [199, 21, 133, 1], midnightblue: [25, 25, 112, 1], mintcream: [245, 255, 250, 1], mistyrose: [255, 228, 225, 1], moccasin: [255, 228, 181, 1], navajowhite: [255, 222, 173, 1], navy: [0, 0, 128, 1], oldlace: [253, 245, 230, 1], olive: [128, 128, 0, 1], olivedrab: [107, 142, 35, 1], orange: [255, 165, 0, 1], orangered: [255, 69, 0, 1], orchid: [218, 112, 214, 1], palegoldenrod: [238, 232, 170, 1], palegreen: [152, 251, 152, 1], paleturquoise: [175, 238, 238, 1], palevioletred: [219, 112, 147, 1], papayawhip: [255, 239, 213, 1], peachpuff: [255, 218, 185, 1], peru: [205, 133, 63, 1], pink: [255, 192, 203, 1], plum: [221, 160, 221, 1], powderblue: [176, 224, 230, 1], purple: [128, 0, 128, 1], red: [255, 0, 0, 1], rosybrown: [188, 143, 143, 1], royalblue: [65, 105, 225, 1], saddlebrown: [139, 69, 19, 1], salmon: [250, 128, 114, 1], sandybrown: [244, 164, 96, 1], seagreen: [46, 139, 87, 1], seashell: [255, 245, 238, 1], sienna: [160, 82, 45, 1], silver: [192, 192, 192, 1], skyblue: [135, 206, 235, 1], slateblue: [106, 90, 205, 1], slategray: [112, 128, 144, 1], slategrey: [112, 128, 144, 1], snow: [255, 250, 250, 1], springgreen: [0, 255, 127, 1], steelblue: [70, 130, 180, 1], tan: [210, 180, 140, 1], teal: [0, 128, 128, 1], thistle: [216, 191, 216, 1], tomato: [255, 99, 71, 1], turquoise: [64, 224, 208, 1], violet: [238, 130, 238, 1], wheat: [245, 222, 179, 1], white: [255, 255, 255, 1], whitesmoke: [245, 245, 245, 1], yellow: [255, 255, 0, 1], yellowgreen: [154, 205, 50, 1]
  }; var Rp = new Bp(20); var Np = null; const Fp = en; const Vp = nn; const Hp = (Object.freeze || Object)({
    parse: Ke, lift: Je, toHex: tn, fastLerp: en, fastMapToColor: Fp, lerp: nn, mapToColor: Vp, modifyHSL: rn, modifyAlpha: an, stringify: on
  }); var Gp = Array.prototype.slice; const Wp = function (t, e, n, i) { this._tracks = {}, this._target = t, this._loop = e || !1, this._getter = n || sn, this._setter = i || ln, this._clipCount = 0, this._delay = 0, this._doneList = [], this._onframeList = [], this._clipList = [] }; Wp.prototype = {
    when(t, e) { const n = this._tracks; for (const i in e) if (e.hasOwnProperty(i)) { if (!n[i]) { n[i] = []; const r = this._getter(this._target, i); if (r == null) continue; t !== 0 && n[i].push({time: 0, value: vn(r)}) }n[i].push({time: t, value: e[i]}) } return this }, during(t) { return this._onframeList.push(t), this }, pause() { for (let t = 0; t < this._clipList.length; t++) this._clipList[t].pause(); this._paused = !0 }, resume() { for (let t = 0; t < this._clipList.length; t++) this._clipList[t].resume(); this._paused = !1 }, isPaused() { return !!this._paused }, _doneCallback() { this._tracks = {}, this._clipList.length = 0; for (let t = this._doneList, e = t.length, n = 0; e > n; n++)t[n].call(this) }, start(t, e) { let n; const i = this; let r = 0; const a = function () { r--, r || i._doneCallback() }; for (const o in this._tracks) if (this._tracks.hasOwnProperty(o)) { const s = _n(this, t, a, this._tracks[o], o, e); s && (this._clipList.push(s), r++, this.animation && this.animation.addClip(s), n = s) } if (n) { const l = n.onframe; n.onframe = function (t, e) { l(t, e); for (let n = 0; n < i._onframeList.length; n++)i._onframeList[n](t, e) } } return r || this._doneCallback(), this }, stop(t) { for (var e = this._clipList, n = this.animation, i = 0; i < e.length; i++) { const r = e[i]; t && r.onframe(this._target, 1), n && n.removeClip(r) }e.length = 0 }, delay(t) { return this._delay = t, this }, done(t) { return t && this._doneList.push(t), this }, getClips() { return this._clipList }
  }; let Xp = 1; typeof window !== 'undefined' && (Xp = Math.max(window.devicePixelRatio || 1, 1)); const Yp = 0; const Up = Xp; let qp = function () {}; Yp === 1 && (qp = console.error); const jp = qp; const Zp = function () { this.animators = [] }; Zp.prototype = {
    constructor: Zp, animate(t, e) { let n; let i = !1; const r = this; const a = this.__zr; if (t) { const o = t.split('.'); let s = r; i = o[0] === 'shape'; for (let l = 0, h = o.length; h > l; l++)s && (s = s[o[l]]); s && (n = s) } else n = r; if (!n) return void jp(`Property "${t}" is not existed in element ${r.id}`); const c = r.animators; const d = new Wp(n, e); return d.during(function () { r.dirty(i) }).done(function () { c.splice(u(c, d), 1) }), c.push(d), a && a.animation.addAnimator(d), d }, stopAnimation(t) { for (var e = this.animators, n = e.length, i = 0; n > i; i++)e[i].stop(t); return e.length = 0, this }, animateTo(t, e, n, i, r, a) { xn(this, t, e, n, i, r, a) }, animateFrom(t, e, n, i, r, a) { xn(this, t, e, n, i, r, a, !0) }
  }; var Kp = function (t) { Ip.call(this, t), up.call(this, t), Zp.call(this, t), this.id = t.id || Ff() }; Kp.prototype = {
    type: 'element', name: '', __zr: null, ignore: !1, clipPath: null, isGroup: !1, drift(t, e) { switch (this.draggable) { case 'horizontal': e = 0; break; case 'vertical': t = 0 } let n = this.transform; n || (n = this.transform = [1, 0, 0, 1, 0, 0]), n[4] += t, n[5] += e, this.decomposeTransform(), this.dirty(!1) }, beforeUpdate() {}, afterUpdate() {}, update() { this.updateTransform() }, traverse() {}, attrKV(t, e) { if (t === 'position' || t === 'scale' || t === 'origin') { if (e) { let n = this[t]; n || (n = this[t] = []), n[0] = e[0], n[1] = e[1] } } else this[t] = e }, hide() { this.ignore = !0, this.__zr && this.__zr.refresh() }, show() { this.ignore = !1, this.__zr && this.__zr.refresh() }, attr(t, e) { if (typeof t === 'string') this.attrKV(t, e); else if (S(t)) for (const n in t)t.hasOwnProperty(n) && this.attrKV(n, t[n]); return this.dirty(!1), this }, setClipPath(t) { const e = this.__zr; e && t.addSelfToZr(e), this.clipPath && this.clipPath !== t && this.removeClipPath(), this.clipPath = t, t.__zr = e, t.__clipTarget = this, this.dirty(!1) }, removeClipPath() { const t = this.clipPath; t && (t.__zr && t.removeSelfFromZr(t.__zr), t.__zr = null, t.__clipTarget = null, this.clipPath = null, this.dirty(!1)) }, addSelfToZr(t) { this.__zr = t; const e = this.animators; if (e) for (let n = 0; n < e.length; n++)t.animation.addAnimator(e[n]); this.clipPath && this.clipPath.addSelfToZr(t) }, removeSelfFromZr(t) { this.__zr = null; const e = this.animators; if (e) for (let n = 0; n < e.length; n++)t.animation.removeAnimator(e[n]); this.clipPath && this.clipPath.removeSelfFromZr(t) }
  }, c(Kp, Zp), c(Kp, Ip), c(Kp, up); const $p = ae; const Qp = Math.min; const Jp = Math.max; Sn.prototype = {
    constructor: Sn,
    union(t) { const e = Qp(t.x, this.x); const n = Qp(t.y, this.y); this.width = Jp(t.x + t.width, this.x + this.width) - e, this.height = Jp(t.y + t.height, this.y + this.height) - n, this.x = e, this.y = n },
    applyTransform: (function () { const t = []; const e = []; const n = []; const i = []; return function (r) { if (r) { t[0] = n[0] = this.x, t[1] = i[1] = this.y, e[0] = i[0] = this.x + this.width, e[1] = n[1] = this.y + this.height, $p(t, t, r), $p(e, e, r), $p(n, n, r), $p(i, i, r), this.x = Qp(t[0], e[0], n[0], i[0]), this.y = Qp(t[1], e[1], n[1], i[1]); const a = Jp(t[0], e[0], n[0], i[0]); const o = Jp(t[1], e[1], n[1], i[1]); this.width = a - this.x, this.height = o - this.y } } }()),
    calculateTransform(t) { const e = this; const n = t.width / e.width; const i = t.height / e.height; const r = Ae(); return Oe(r, r, [-e.x, -e.y]), Ee(r, r, [n, i]), Oe(r, r, [t.x, t.y]), r },
    intersect(t) { if (!t) return !1; t instanceof Sn || (t = Sn.create(t)); const e = this; const n = e.x; const i = e.x + e.width; const r = e.y; const a = e.y + e.height; const o = t.x; const s = t.x + t.width; const l = t.y; const u = t.y + t.height; return !(o > i || n > s || l > a || r > u) },
    contain(t, e) { const n = this; return t >= n.x && t <= n.x + n.width && e >= n.y && e <= n.y + n.height },
    clone() { return new Sn(this.x, this.y, this.width, this.height) },
    copy(t) { this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height },
    plain() {
      return {
        x: this.x, y: this.y, width: this.width, height: this.height
      }
    }
  }, Sn.create = function (t) { return new Sn(t.x, t.y, t.width, t.height) }; var tg = function (t) { t = t || {}, Kp.call(this, t); for (const e in t)t.hasOwnProperty(e) && (this[e] = t[e]); this._children = [], this.__storage = null, this.__dirty = !0 }; tg.prototype = {
    constructor: tg, isGroup: !0, type: 'group', silent: !1, children() { return this._children.slice() }, childAt(t) { return this._children[t] }, childOfName(t) { for (let e = this._children, n = 0; n < e.length; n++) if (e[n].name === t) return e[n] }, childCount() { return this._children.length }, add(t) { return t && t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), this }, addBefore(t, e) { if (t && t !== this && t.parent !== this && e && e.parent === this) { const n = this._children; const i = n.indexOf(e); i >= 0 && (n.splice(i, 0, t), this._doAdd(t)) } return this }, _doAdd(t) { t.parent && t.parent.remove(t), t.parent = this; const e = this.__storage; const n = this.__zr; e && e !== t.__storage && (e.addToStorage(t), t instanceof tg && t.addChildrenToStorage(e)), n && n.refresh() }, remove(t) { const e = this.__zr; const n = this.__storage; const i = this._children; const r = u(i, t); return r < 0 ? this : (i.splice(r, 1), t.parent = null, n && (n.delFromStorage(t), t instanceof tg && t.delChildrenFromStorage(n)), e && e.refresh(), this) }, removeAll() { let t; let e; const n = this._children; const i = this.__storage; for (e = 0; e < n.length; e++)t = n[e], i && (i.delFromStorage(t), t instanceof tg && t.delChildrenFromStorage(i)), t.parent = null; return n.length = 0, this }, eachChild(t, e) { for (let n = this._children, i = 0; i < n.length; i++) { const r = n[i]; t.call(e, r, i) } return this }, traverse(t, e) { for (let n = 0; n < this._children.length; n++) { const i = this._children[n]; t.call(e, i), i.type === 'group' && i.traverse(t, e) } return this }, addChildrenToStorage(t) { for (let e = 0; e < this._children.length; e++) { const n = this._children[e]; t.addToStorage(n), n instanceof tg && n.addChildrenToStorage(t) } }, delChildrenFromStorage(t) { for (let e = 0; e < this._children.length; e++) { const n = this._children[e]; t.delFromStorage(n), n instanceof tg && n.delChildrenFromStorage(t) } }, dirty() { return this.__dirty = !0, this.__zr && this.__zr.refresh(), this }, getBoundingRect(t) { for (var e = null, n = new Sn(0, 0, 0, 0), i = t || this._children, r = [], a = 0; a < i.length; a++) { const o = i[a]; if (!o.ignore && !o.invisible) { const s = o.getBoundingRect(); const l = o.getLocalTransform(r); l ? (n.copy(s), n.applyTransform(l), e = e || n.clone(), e.union(n)) : (e = e || s.clone(), e.union(s)) } } return e || n }
  }, h(tg, Kp); var eg = 32; var ng = 7; const ig = function () { this._roots = [], this._displayList = [], this._displayListLen = 0 }; ig.prototype = {
    constructor: ig, traverse(t, e) { for (let n = 0; n < this._roots.length; n++) this._roots[n].traverse(t, e) }, getDisplayList(t, e) { return e = e || !1, t && this.updateDisplayList(e), this._displayList }, updateDisplayList(t) { this._displayListLen = 0; for (var e = this._roots, n = this._displayList, i = 0, r = e.length; r > i; i++) this._updateAndAddDisplayable(e[i], null, t); n.length = this._displayListLen, Hf.canvasSupported && Pn(n, Ln) }, _updateAndAddDisplayable(t, e, n) { if (!t.ignore || n) { t.beforeUpdate(), t.__dirty && t.update(), t.afterUpdate(); const i = t.clipPath; if (i) { e = e ? e.slice() : []; for (let r = i, a = t; r;)r.parent = a, r.updateTransform(), e.push(r), a = r, r = r.clipPath } if (t.isGroup) { for (let o = t._children, s = 0; s < o.length; s++) { const l = o[s]; t.__dirty && (l.__dirty = !0), this._updateAndAddDisplayable(l, e, n) }t.__dirty = !1 } else t.__clipPaths = e, this._displayList[this._displayListLen++] = t } }, addRoot(t) { t.__storage !== this && (t instanceof tg && t.addChildrenToStorage(this), this.addToStorage(t), this._roots.push(t)) }, delRoot(t) { if (t == null) { for (var e = 0; e < this._roots.length; e++) { const n = this._roots[e]; n instanceof tg && n.delChildrenFromStorage(this) } return this._roots = [], this._displayList = [], void (this._displayListLen = 0) } if (t instanceof Array) for (var e = 0, i = t.length; i > e; e++) this.delRoot(t[e]); else { const r = u(this._roots, t); r >= 0 && (this.delFromStorage(t), this._roots.splice(r, 1), t instanceof tg && t.delChildrenFromStorage(this)) } }, addToStorage(t) { return t && (t.__storage = this, t.dirty(!1)), this }, delFromStorage(t) { return t && (t.__storage = null), this }, dispose() { this._renderList = this._roots = null }, displayableSortFunc: Ln
  }; const rg = {
    shadowBlur: 1, shadowOffsetX: 1, shadowOffsetY: 1, textShadowBlur: 1, textShadowOffsetX: 1, textShadowOffsetY: 1, textBoxShadowBlur: 1, textBoxShadowOffsetX: 1, textBoxShadowOffsetY: 1
  }; var ag = function (t, e, n) { return rg.hasOwnProperty(e) ? n *= t.dpr : n }; var og = {NONE: 0, STYLE_BIND: 1, PLAIN_TEXT: 2}; var sg = 9; const lg = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; var ug = function (t) { this.extendFrom(t, !1) }; ug.prototype = {
    constructor: ug, fill: '#000', stroke: null, opacity: 1, fillOpacity: null, strokeOpacity: null, lineDash: null, lineDashOffset: 0, shadowBlur: 0, shadowOffsetX: 0, shadowOffsetY: 0, lineWidth: 1, strokeNoScale: !1, text: null, font: null, textFont: null, fontStyle: null, fontWeight: null, fontSize: null, fontFamily: null, textTag: null, textFill: '#000', textStroke: null, textWidth: null, textHeight: null, textStrokeWidth: 0, textLineHeight: null, textPosition: 'inside', textRect: null, textOffset: null, textAlign: null, textVerticalAlign: null, textDistance: 5, textShadowColor: 'transparent', textShadowBlur: 0, textShadowOffsetX: 0, textShadowOffsetY: 0, textBoxShadowColor: 'transparent', textBoxShadowBlur: 0, textBoxShadowOffsetX: 0, textBoxShadowOffsetY: 0, transformText: !1, textRotation: 0, textOrigin: null, textBackgroundColor: null, textBorderColor: null, textBorderWidth: 0, textBorderRadius: 0, textPadding: null, rich: null, truncate: null, blend: null, bind(t, e, n) { const i = this; const r = n && n.style; const a = !r || t.__attrCachedBy !== og.STYLE_BIND; t.__attrCachedBy = og.STYLE_BIND; for (let o = 0; o < lg.length; o++) { const s = lg[o]; const l = s[0]; (a || i[l] !== r[l]) && (t[l] = ag(t, l, i[l] || s[1])) } if ((a || i.fill !== r.fill) && (t.fillStyle = i.fill), (a || i.stroke !== r.stroke) && (t.strokeStyle = i.stroke), (a || i.opacity !== r.opacity) && (t.globalAlpha = i.opacity == null ? 1 : i.opacity), (a || i.blend !== r.blend) && (t.globalCompositeOperation = i.blend || 'source-over'), this.hasStroke()) { const u = i.lineWidth; t.lineWidth = u / (this.strokeNoScale && e && e.getLineScale ? e.getLineScale() : 1) } }, hasFill() { const t = this.fill; return t != null && t !== 'none' }, hasStroke() { const t = this.stroke; return t != null && t !== 'none' && this.lineWidth > 0 }, extendFrom(t, e) { if (t) for (const n in t)!t.hasOwnProperty(n) || e !== !0 && (e === !1 ? this.hasOwnProperty(n) : t[n] == null) || (this[n] = t[n]) }, set(t, e) { typeof t === 'string' ? this[t] = e : this.extendFrom(t, !0) }, clone() { const t = new this.constructor(); return t.extendFrom(this, !0), t }, getGradient(t, e, n) { for (var i = e.type === 'radial' ? Bn : On, r = i(t, e, n), a = e.colorStops, o = 0; o < a.length; o++)r.addColorStop(a[o].offset, a[o].color); return r }
  }; for (var hg = ug.prototype, cg = 0; cg < lg.length; cg++) { const dg = lg[cg]; dg[0] in hg || (hg[dg[0]] = dg[1]) }ug.getGradient = hg.getGradient; const fg = function (t, e) { this.image = t, this.repeat = e, this.type = 'pattern' }; fg.prototype.getCanvasPattern = function (t) { return t.createPattern(this.image, this.repeat || 'repeat') }; const pg = function (t, e, n) { let i; n = n || Up, typeof t === 'string' ? i = zn(t, e, n) : S(t) && (i = t, t = i.id), this.id = t, this.dom = i; const r = i.style; r && (i.onselectstart = En, r['-webkit-user-select'] = 'none', r['user-select'] = 'none', r['-webkit-touch-callout'] = 'none', r['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)', r.padding = 0, r.margin = 0, r['border-width'] = 0), this.domBack = null, this.ctxBack = null, this.painter = e, this.config = null, this.clearColor = 0, this.motionBlur = !1, this.lastFrameAlpha = 0.7, this.dpr = n }; pg.prototype = {
    constructor: pg,
    __dirty: !0,
    __used: !1,
    __drawIndex: 0,
    __startIndex: 0,
    __endIndex: 0,
    incremental: !1,
    getElementCount() { return this.__endIndex - this.__startIndex },
    initContext() { this.ctx = this.dom.getContext('2d'), this.ctx.dpr = this.dpr },
    createBackBuffer() { const t = this.dpr; this.domBack = zn(`back-${this.id}`, this.painter, t), this.ctxBack = this.domBack.getContext('2d'), t !== 1 && this.ctxBack.scale(t, t) },
    resize(t, e) { const n = this.dpr; const i = this.dom; const r = i.style; const a = this.domBack; r && (r.width = `${t}px`, r.height = `${e}px`), i.width = t * n, i.height = e * n, a && (a.width = t * n, a.height = e * n, n !== 1 && this.ctxBack.scale(n, n)) },
    clear(t, e) {
      const n = this.dom; const i = this.ctx; const r = n.width; const a = n.height; var e = e || this.clearColor; const o = this.motionBlur && !t; const s = this.lastFrameAlpha; const l = this.dpr; if (o && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = 'copy', this.ctxBack.drawImage(n, 0, 0, r / l, a / l)), i.clearRect(0, 0, r, a), e && e !== 'transparent') {
        let u; e.colorStops ? (u = e.__canvasGradient || ug.getGradient(i, e, {
          x: 0, y: 0, width: r, height: a
        }), e.__canvasGradient = u) : e.image && (u = fg.prototype.getCanvasPattern.call(e, i)), i.save(), i.fillStyle = u || e, i.fillRect(0, 0, r, a), i.restore()
      } if (o) { const h = this.domBack; i.save(), i.globalAlpha = s, i.drawImage(h, 0, 0, r, a), i.restore() }
    }
  }; const gg = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (t) { setTimeout(t, 16) }; var vg = new Bp(50); var mg = {}; var yg = 0; var _g = 5e3; var xg = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g; var wg = '12px sans-serif'; var bg = {}; bg.measureText = function (t, e) { const n = l(); return n.font = e || wg, n.measureText(t) }; var Sg = wg; var Mg = {left: 1, right: 1, center: 1}; var Ig = {top: 1, bottom: 1, middle: 1}; var Tg = [['textShadowBlur', 'shadowBlur', 0], ['textShadowOffsetX', 'shadowOffsetX', 0], ['textShadowOffsetY', 'shadowOffsetY', 0], ['textShadowColor', 'shadowColor', 'transparent']]; var Cg = {}; var Dg = {}; const Ag = new Sn(); const kg = function () {}; kg.prototype = {constructor: kg, drawRectText(t, e) { const n = this.style; e = n.textRect || e, this.__dirty && ai(n, !0); let i = n.text; if (i != null && (i += ''), bi(i, n)) { t.save(); const r = this.transform; n.transformText ? this.setTransform(t) : r && (Ag.copy(e), Ag.applyTransform(r), e = Ag), si(this, t, i, n, e, sg), t.restore() } }}, Si.prototype = {
    constructor: Si, type: 'displayable', __dirty: !0, invisible: !1, z: 0, z2: 0, zlevel: 0, draggable: !1, dragging: !1, silent: !1, culling: !1, cursor: 'pointer', rectHover: !1, progressive: !1, incremental: !1, globalScaleRatio: 1, beforeBrush() {}, afterBrush() {}, brush() {}, getBoundingRect() {}, contain(t, e) { return this.rectContain(t, e) }, traverse(t, e) { t.call(e, this) }, rectContain(t, e) { const n = this.transformCoordToLocal(t, e); const i = this.getBoundingRect(); return i.contain(n[0], n[1]) }, dirty() { this.__dirty = this.__dirtyText = !0, this._rect = null, this.__zr && this.__zr.refresh() }, animateStyle(t) { return this.animate('style', t) }, attrKV(t, e) { t !== 'style' ? Kp.prototype.attrKV.call(this, t, e) : this.style.set(e) }, setStyle(t, e) { return this.style.set(t, e), this.dirty(!1), this }, useStyle(t) { return this.style = new ug(t, this), this.dirty(!1), this }, calculateTextPosition: null
  }, h(Si, Kp), c(Si, kg), Mi.prototype = {
    constructor: Mi, type: 'image', brush(t, e) { const n = this.style; const i = n.image; n.bind(t, this, e); const r = this._image = Nn(i, this._image, this, this.onload); if (r && Vn(r)) { const a = n.x || 0; const o = n.y || 0; let s = n.width; let l = n.height; const u = r.width / r.height; if (s == null && l != null ? s = l * u : l == null && s != null ? l = s / u : s == null && l == null && (s = r.width, l = r.height), this.setTransform(t), n.sWidth && n.sHeight) { var h = n.sx || 0; var c = n.sy || 0; t.drawImage(r, h, c, n.sWidth, n.sHeight, a, o, s, l) } else if (n.sx && n.sy) { var h = n.sx; var c = n.sy; const d = s - h; const f = l - c; t.drawImage(r, h, c, d, f, a, o, s, l) } else t.drawImage(r, a, o, s, l); n.text != null && (this.restoreTransform(t), this.drawRectText(t, this.getBoundingRect())) } }, getBoundingRect() { const t = this.style; return this._rect || (this._rect = new Sn(t.x || 0, t.y || 0, t.width || 0, t.height || 0)), this._rect }
  }, h(Mi, Si); const Pg = 1e5; const Lg = 314159; const Og = 0.01; const Bg = 0.001; var Eg = new Sn(0, 0, 0, 0); var zg = new Sn(0, 0, 0, 0); const Rg = function (t, e, n) { this.type = 'canvas'; const i = !t.nodeName || t.nodeName.toUpperCase() === 'CANVAS'; this._opts = n = o({}, n || {}), this.dpr = n.devicePixelRatio || Up, this._singleCanvas = i, this.root = t; const r = t.style; r && (r['-webkit-tap-highlight-color'] = 'transparent', r['-webkit-user-select'] = r['user-select'] = r['-webkit-touch-callout'] = 'none', t.innerHTML = ''), this.storage = e; const a = this._zlevelList = []; const s = this._layers = {}; if (this._layerConfig = {}, this._needsManuallyCompositing = !1, i) { let l = t.width; let u = t.height; n.width != null && (l = n.width), n.height != null && (u = n.height), this.dpr = n.devicePixelRatio || 1, t.width = l * this.dpr, t.height = u * this.dpr, this._width = l, this._height = u; const h = new pg(t, this, this.dpr); h.__builtin__ = !0, h.initContext(), s[Lg] = h, h.zlevel = Lg, a.push(Lg), this._domRoot = t } else { this._width = this._getSize(0), this._height = this._getSize(1); const c = this._domRoot = ki(this._width, this._height); t.appendChild(c) } this._hoverlayer = null, this._hoverElements = [] }; Rg.prototype = {
    constructor: Rg,
    getType() { return 'canvas' },
    isSingleCanvas() { return this._singleCanvas },
    getViewportRoot() { return this._domRoot },
    getViewportRootOffset() { const t = this.getViewportRoot(); return t ? {offsetLeft: t.offsetLeft || 0, offsetTop: t.offsetTop || 0} : void 0 },
    refresh(t) { const e = this.storage.getDisplayList(!0); const n = this._zlevelList; this._redrawId = Math.random(), this._paintList(e, t, this._redrawId); for (let i = 0; i < n.length; i++) { const r = n[i]; const a = this._layers[r]; if (!a.__builtin__ && a.refresh) { const o = i === 0 ? this._backgroundColor : null; a.refresh(o) } } return this.refreshHover(), this },
    addHover(t, e) {
      if (!t.__hoverMir) {
        const n = new t.constructor({
          style: t.style, shape: t.shape, z: t.z, z2: t.z2, silent: t.silent
        }); return n.__from = t, t.__hoverMir = n, e && n.setStyle(e), this._hoverElements.push(n), n
      }
    },
    removeHover(t) { const e = t.__hoverMir; const n = this._hoverElements; const i = u(n, e); i >= 0 && n.splice(i, 1), t.__hoverMir = null },
    clearHover() { for (var t = this._hoverElements, e = 0; e < t.length; e++) { const n = t[e].__from; n && (n.__hoverMir = null) }t.length = 0 },
    refreshHover() { const t = this._hoverElements; let e = t.length; let n = this._hoverlayer; if (n && n.clear(), e) { Pn(t, this.storage.displayableSortFunc), n || (n = this._hoverlayer = this.getLayer(Pg)); const i = {}; n.ctx.save(); for (let r = 0; e > r;) { const a = t[r]; const o = a.__from; o && o.__zr ? (r++, o.invisible || (a.transform = o.transform, a.invTransform = o.invTransform, a.__clipPaths = o.__clipPaths, this._doPaintEl(a, n, !0, i))) : (t.splice(r, 1), o.__hoverMir = null, e--) }n.ctx.restore() } },
    getHoverLayer() { return this.getLayer(Pg) },
    _paintList(t, e, n) { if (this._redrawId === n) { e = e || !1, this._updateLayerStatus(t); const i = this._doPaintList(t, e); if (this._needsManuallyCompositing && this._compositeManually(), !i) { const r = this; gg(function () { r._paintList(t, e, n) }) } } },
    _compositeManually() { const t = this.getLayer(Lg).ctx; const e = this._domRoot.width; const n = this._domRoot.height; t.clearRect(0, 0, e, n), this.eachBuiltinLayer(function (i) { i.virtual && t.drawImage(i.dom, 0, 0, e, n) }) },
    _doPaintList(t, e) { for (var n = [], i = 0; i < this._zlevelList.length; i++) { const r = this._zlevelList[i]; var a = this._layers[r]; a.__builtin__ && a !== this._hoverlayer && (a.__dirty || e) && n.push(a) } for (var o = !0, s = 0; s < n.length; s++) { var a = n[s]; const l = a.ctx; const u = {}; l.save(); let h = e ? a.__startIndex : a.__drawIndex; const c = !e && a.incremental && Date.now; const d = c && Date.now(); const p = a.zlevel === this._zlevelList[0] ? this._backgroundColor : null; if (a.__startIndex === a.__endIndex)a.clear(!1, p); else if (h === a.__startIndex) { const g = t[h]; g.incremental && g.notClear && !e || a.clear(!1, p) }h === -1 && (console.error('For some unknown reason. drawIndex is -1'), h = a.__startIndex); for (var v = h; v < a.__endIndex; v++) { const m = t[v]; if (this._doPaintEl(m, a, e, u), m.__dirty = m.__dirtyText = !1, c) { const y = Date.now() - d; if (y > 15) break } }a.__drawIndex = v, a.__drawIndex < a.__endIndex && (o = !1), u.prevElClipPaths && l.restore(), l.restore() } return Hf.wxa && f(this._layers, function (t) { t && t.ctx && t.ctx.draw && t.ctx.draw() }), o },
    _doPaintEl(t, e, n, i) { const r = e.ctx; const a = t.transform; if (!(!e.__dirty && !n || t.invisible || t.style.opacity === 0 || a && !a[0] && !a[3] || t.culling && Ci(t, this._width, this._height))) { const o = t.__clipPaths; const s = i.prevElClipPaths; (!s || Di(o, s)) && (s && (r.restore(), i.prevElClipPaths = null, i.prevEl = null), o && (r.save(), Ai(o, r), i.prevElClipPaths = o)), t.beforeBrush && t.beforeBrush(r), t.brush(r, i.prevEl || null), i.prevEl = t, t.afterBrush && t.afterBrush(r) } },
    getLayer(t, e) { this._singleCanvas && !this._needsManuallyCompositing && (t = Lg); let n = this._layers[t]; return n || (n = new pg(`zr_${t}`, this, this.dpr), n.zlevel = t, n.__builtin__ = !0, this._layerConfig[t] && r(n, this._layerConfig[t], !0), e && (n.virtual = e), this.insertLayer(t, n), n.initContext()), n },
    insertLayer(t, e) { const n = this._layers; const i = this._zlevelList; const r = i.length; let a = null; let o = -1; const s = this._domRoot; if (n[t]) return void jp(`ZLevel ${t} has been used already`); if (!Ti(e)) return void jp(`Layer of zlevel ${t} is not valid`); if (r > 0 && t > i[0]) { for (o = 0; r - 1 > o && !(i[o] < t && i[o + 1] > t); o++);a = n[i[o]] } if (i.splice(o + 1, 0, t), n[t] = e, !e.virtual) if (a) { const l = a.dom; l.nextSibling ? s.insertBefore(e.dom, l.nextSibling) : s.appendChild(e.dom) } else s.firstChild ? s.insertBefore(e.dom, s.firstChild) : s.appendChild(e.dom) },
    eachLayer(t, e) { let n; let i; const r = this._zlevelList; for (i = 0; i < r.length; i++)n = r[i], t.call(e, this._layers[n], n) },
    eachBuiltinLayer(t, e) { let n; let i; let r; const a = this._zlevelList; for (r = 0; r < a.length; r++)i = a[r], n = this._layers[i], n.__builtin__ && t.call(e, n, i) },
    eachOtherLayer(t, e) { let n; let i; let r; const a = this._zlevelList; for (r = 0; r < a.length; r++)i = a[r], n = this._layers[i], n.__builtin__ || t.call(e, n, i) },
    getLayers() { return this._layers },
    _updateLayerStatus(t) { function e(t) { r && (r.__endIndex !== t && (r.__dirty = !0), r.__endIndex = t) } if (this.eachBuiltinLayer(function (t) { t.__dirty = t.__used = !1 }), this._singleCanvas) for (var n = 1; n < t.length; n++) { var i = t[n]; if (i.zlevel !== t[n - 1].zlevel || i.incremental) { this._needsManuallyCompositing = !0; break } } for (var r = null, a = 0, n = 0; n < t.length; n++) { var o; var i = t[n]; const s = i.zlevel; i.incremental ? (o = this.getLayer(s + Bg, this._needsManuallyCompositing), o.incremental = !0, a = 1) : o = this.getLayer(s + (a > 0 ? Og : 0), this._needsManuallyCompositing), o.__builtin__ || jp(`ZLevel ${s} has been used by unkown layer ${o.id}`), o !== r && (o.__used = !0, o.__startIndex !== n && (o.__dirty = !0), o.__startIndex = n, o.__drawIndex = o.incremental ? -1 : n, e(n), r = o), i.__dirty && (o.__dirty = !0, o.incremental && o.__drawIndex < 0 && (o.__drawIndex = n)) }e(n), this.eachBuiltinLayer(function (t) { !t.__used && t.getElementCount() > 0 && (t.__dirty = !0, t.__startIndex = t.__endIndex = t.__drawIndex = 0), t.__dirty && t.__drawIndex < 0 && (t.__drawIndex = t.__startIndex) }) },
    clear() { return this.eachBuiltinLayer(this._clearLayer), this },
    _clearLayer(t) { t.clear() },
    setBackgroundColor(t) { this._backgroundColor = t },
    configLayer(t, e) { if (e) { const n = this._layerConfig; n[t] ? r(n[t], e, !0) : n[t] = e; for (let i = 0; i < this._zlevelList.length; i++) { const a = this._zlevelList[i]; if (a === t || a === t + Og) { const o = this._layers[a]; r(o, n[t], !0) } } } },
    delLayer(t) { const e = this._layers; const n = this._zlevelList; const i = e[t]; i && (i.dom.parentNode.removeChild(i.dom), delete e[t], n.splice(u(n, t), 1)) },
    resize(t, e) { if (this._domRoot.style) { const n = this._domRoot; n.style.display = 'none'; const i = this._opts; if (t != null && (i.width = t), e != null && (i.height = e), t = this._getSize(0), e = this._getSize(1), n.style.display = '', this._width !== t || e !== this._height) { n.style.width = `${t}px`, n.style.height = `${e}px`; for (const r in this._layers) this._layers.hasOwnProperty(r) && this._layers[r].resize(t, e); f(this._progressiveLayers, function (n) { n.resize(t, e) }), this.refresh(!0) } this._width = t, this._height = e } else { if (t == null || e == null) return; this._width = t, this._height = e, this.getLayer(Lg).resize(t, e) } return this },
    clearLayer(t) { const e = this._layers[t]; e && e.clear() },
    dispose() { this.root.innerHTML = '', this.root = this.storage = this._domRoot = this._layers = null },
    getRenderedCanvas(t) { if (t = t || {}, this._singleCanvas && !this._compositeManually) return this._layers[Lg].dom; const e = new pg('image', this, t.pixelRatio || this.dpr); if (e.initContext(), e.clear(!1, t.backgroundColor || this._backgroundColor), t.pixelRatio <= this.dpr) { this.refresh(); const n = e.dom.width; const i = e.dom.height; const r = e.ctx; this.eachLayer(function (t) { t.__builtin__ ? r.drawImage(t.dom, 0, 0, n, i) : t.renderToCanvas && (e.ctx.save(), t.renderToCanvas(e.ctx), e.ctx.restore()) }) } else for (let a = {}, o = this.storage.getDisplayList(!0), s = 0; s < o.length; s++) { const l = o[s]; this._doPaintEl(l, e, !0, a) } return e.dom },
    getWidth() { return this._width },
    getHeight() { return this._height },
    _getSize(t) { const e = this._opts; const n = ['width', 'height'][t]; const i = ['clientWidth', 'clientHeight'][t]; const r = ['paddingLeft', 'paddingTop'][t]; const a = ['paddingRight', 'paddingBottom'][t]; if (e[n] != null && e[n] !== 'auto') return parseFloat(e[n]); const o = this.root; const s = document.defaultView.getComputedStyle(o); return (o[i] || Ii(s[n]) || Ii(o.style[n])) - (Ii(s[r]) || 0) - (Ii(s[a]) || 0) | 0 },
    pathToImage(t, e) { e = e || this.dpr; const n = document.createElement('canvas'); const i = n.getContext('2d'); const r = t.getBoundingRect(); const a = t.style; const o = a.shadowBlur * e; const s = a.shadowOffsetX * e; const l = a.shadowOffsetY * e; const u = a.hasStroke() ? a.lineWidth : 0; const h = Math.max(u / 2, -s + o); const c = Math.max(u / 2, s + o); const d = Math.max(u / 2, -l + o); const f = Math.max(u / 2, l + o); const p = r.width + h + c; const g = r.height + d + f; n.width = p * e, n.height = g * e, i.scale(e, e), i.clearRect(0, 0, p, g), i.dpr = e; const v = {position: t.position, rotation: t.rotation, scale: t.scale}; t.position = [h - r.x, d - r.y], t.rotation = 0, t.scale = [1, 1], t.updateTransform(), t && t.brush(i); const m = Mi; const y = new m({style: {x: 0, y: 0, image: n}}); return v.position != null && (y.position = t.position = v.position), v.rotation != null && (y.rotation = t.rotation = v.rotation), v.scale != null && (y.scale = t.scale = v.scale), y }
  }; const Ng = function (t) { t = t || {}, this.stage = t.stage || {}, this.onframe = t.onframe || function () {}, this._clips = [], this._running = !1, this._time, this._pausedTime, this._pauseStart, this._paused = !1, up.call(this) }; Ng.prototype = {
    constructor: Ng,
    addClip(t) { this._clips.push(t) },
    addAnimator(t) { t.animation = this; for (let e = t.getClips(), n = 0; n < e.length; n++) this.addClip(e[n]) },
    removeClip(t) {
      const e = u(this._clips, t)
      e >= 0 && this._clips.splice(e, 1)
    },
    removeAnimator(t) { for (let e = t.getClips(), n = 0; n < e.length; n++) this.removeClip(e[n]); t.animation = null },
    _update() { for (var t = (new Date()).getTime() - this._pausedTime, e = t - this._time, n = this._clips, i = n.length, r = [], a = [], o = 0; i > o; o++) { const s = n[o]; const l = s.step(t, e); l && (r.push(l), a.push(s)) } for (var o = 0; i > o;)n[o]._needsRemove ? (n[o] = n[i - 1], n.pop(), i--) : o++; i = r.length; for (var o = 0; i > o; o++)a[o].fire(r[o]); this._time = t, this.onframe(e), this.trigger('frame', e), this.stage.update && this.stage.update() },
    _startLoop() { function t() { e._running && (gg(t), !e._paused && e._update()) } var e = this; this._running = !0, gg(t) },
    start() { this._time = (new Date()).getTime(), this._pausedTime = 0, this._startLoop() },
    stop() { this._running = !1 },
    pause() { this._paused || (this._pauseStart = (new Date()).getTime(), this._paused = !0) },
    resume() { this._paused && (this._pausedTime += (new Date()).getTime() - this._pauseStart, this._paused = !1) },
    clear() { this._clips = [] },
    isFinished() { return !this._clips.length },
    animate(t, e) { e = e || {}; const n = new Wp(t, e.loop, e.getter, e.setter); return this.addAnimator(n), n }
  }, c(Ng, up); const Fg = 300; var Vg = Hf.domSupported; var Hg = (function () {
    const t = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu']; const e = ['touchstart', 'touchend', 'touchmove']; const n = {
      pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1
    }; const i = p(t, function (t) { const e = t.replace('mouse', 'pointer'); return n.hasOwnProperty(e) ? e : t }); return {mouse: t, touch: e, pointer: i}
  }()); var Gg = {mouse: ['mousemove', 'mouseup'], pointer: ['pointermove', 'pointerup']}; const Wg = Ri.prototype; Wg.stopPropagation = Wg.stopImmediatePropagation = Wg.preventDefault = V; var Xg = {
    mousedown(t) { t = _e(this.dom, t), this._mayPointerCapture = [t.zrX, t.zrY], this.trigger('mousedown', t) }, mousemove(t) { t = _e(this.dom, t); const e = this._mayPointerCapture; !e || t.zrX === e[0] && t.zrY === e[1] || Gi(this, !0), this.trigger('mousemove', t) }, mouseup(t) { t = _e(this.dom, t), Gi(this, !1), this.trigger('mouseup', t) }, mouseout(t) { t = _e(this.dom, t), this._pointerCapturing && (t.zrEventControl = 'no_globalout'); const e = t.toElement || t.relatedTarget; t.zrIsToLocalDOM = zi(this, e), this.trigger('mouseout', t) }, touchstart(t) { t = _e(this.dom, t), Bi(t), this._lastTouchMoment = new Date(), this.handler.processGesture(t, 'start'), Xg.mousemove.call(this, t), Xg.mousedown.call(this, t) }, touchmove(t) { t = _e(this.dom, t), Bi(t), this.handler.processGesture(t, 'change'), Xg.mousemove.call(this, t) }, touchend(t) { t = _e(this.dom, t), Bi(t), this.handler.processGesture(t, 'end'), Xg.mouseup.call(this, t), +new Date() - this._lastTouchMoment < Fg && Xg.click.call(this, t) }, pointerdown(t) { Xg.mousedown.call(this, t) }, pointermove(t) { Li(t) || Xg.mousemove.call(this, t) }, pointerup(t) { Xg.mouseup.call(this, t) }, pointerout(t) { Li(t) || Xg.mouseout.call(this, t) }
  }; f(['click', 'mousewheel', 'dblclick', 'contextmenu'], function (t) { Xg[t] = function (e) { e = _e(this.dom, e), this.trigger(t, e) } }); var Yg = {
    pointermove(t) { Li(t) || Yg.mousemove.call(this, t) }, pointerup(t) { Yg.mouseup.call(this, t) }, mousemove(t) { this.trigger('mousemove', t) }, mouseup(t) { const e = this._pointerCapturing; Gi(this, !1), this.trigger('mouseup', t), e && (t.zrEventControl = 'only_globalout', this.trigger('mouseout', t)) }
  }; const Ug = Xi.prototype; Ug.dispose = function () { Hi(this._localHandlerScope), Vg && Hi(this._globalHandlerScope) }, Ug.setCursor = function (t) { this.dom.style && (this.dom.style.cursor = t || 'default') }, c(Xi, up); const qg = !Hf.canvasSupported; var jg = {canvas: Rg}; var Zg = {}; const Kg = '4.2.0'; var $g = function (t, e, n) { n = n || {}, this.dom = e, this.id = t; const i = this; const r = new ig(); let a = n.renderer; if (qg) { if (!jg.vml) throw new Error("You need to require 'zrender/vml/vml' to support IE8"); a = 'vml' } else a && jg[a] || (a = 'canvas'); const o = new jg[a](e, r, n, t); this.storage = r, this.painter = o; const s = Hf.node || Hf.worker ? null : new Xi(o.getViewportRoot(), o.root); this.handler = new xp(r, o, s, o.root), this.animation = new Ng({stage: {update: y(this.flush, this)}}), this.animation.start(), this._needsRefresh; const l = r.delFromStorage; const u = r.addToStorage; r.delFromStorage = function (t) { l.call(r, t), t && t.removeSelfFromZr(i) }, r.addToStorage = function (t) { u.call(r, t), t.addSelfToZr(i) } }; $g.prototype = {
    constructor: $g, getId() { return this.id }, add(t) { this.storage.addRoot(t), this._needsRefresh = !0 }, remove(t) { this.storage.delRoot(t), this._needsRefresh = !0 }, configLayer(t, e) { this.painter.configLayer && this.painter.configLayer(t, e), this._needsRefresh = !0 }, setBackgroundColor(t) { this.painter.setBackgroundColor && this.painter.setBackgroundColor(t), this._needsRefresh = !0 }, refreshImmediately() { this._needsRefresh = this._needsRefreshHover = !1, this.painter.refresh(), this._needsRefresh = this._needsRefreshHover = !1 }, refresh() { this._needsRefresh = !0 }, flush() { let t; this._needsRefresh && (t = !0, this.refreshImmediately()), this._needsRefreshHover && (t = !0, this.refreshHoverImmediately()), t && this.trigger('rendered') }, addHover(t, e) { if (this.painter.addHover) { const n = this.painter.addHover(t, e); return this.refreshHover(), n } }, removeHover(t) { this.painter.removeHover && (this.painter.removeHover(t), this.refreshHover()) }, clearHover() { this.painter.clearHover && (this.painter.clearHover(), this.refreshHover()) }, refreshHover() { this._needsRefreshHover = !0 }, refreshHoverImmediately() { this._needsRefreshHover = !1, this.painter.refreshHover && this.painter.refreshHover() }, resize(t) { t = t || {}, this.painter.resize(t.width, t.height), this.handler.resize() }, clearAnimation() { this.animation.clear() }, getWidth() { return this.painter.getWidth() }, getHeight() { return this.painter.getHeight() }, pathToImage(t, e) { return this.painter.pathToImage(t, e) }, setCursorStyle(t) { this.handler.setCursorStyle(t) }, findHover(t, e) { return this.handler.findHover(t, e) }, on(t, e, n) { this.handler.on(t, e, n) }, off(t, e) { this.handler.off(t, e) }, trigger(t, e) { this.handler.trigger(t, e) }, clear() { this.storage.delRoot(), this.painter.clear() }, dispose() { this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, Zi(this.id) }
  }; const Qg = (Object.freeze || Object)({
    version: Kg, init: Yi, dispose: Ui, getInstance: qi, registerPainter: ji
  }); var Jg = f; var tv = S; var ev = x; var nv = 'series\x00'; var iv = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; var rv = 0; var av = '.'; var ov = '___EC__COMPONENT__CONTAINER___'; var sv = 0; const lv = function (t) { for (let e = 0; e < t.length; e++)t[e][1] || (t[e][1] = t[e][0]); return function (e, n, i) { for (var r = {}, a = 0; a < t.length; a++) { const o = t[a][1]; if (!(n && u(n, o) >= 0 || i && u(i, o) < 0)) { const s = e.getShallow(o); s != null && (r[t[a][0]] = s) } } return r } }; const uv = lv([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]); const hv = {getLineStyle(t) { const e = uv(this, t); return e.lineDash = this.getLineDash(e.lineWidth), e }, getLineDash(t) { t == null && (t = 1); const e = this.get('type'); const n = Math.max(t, 2); const i = 4 * t; return e === 'solid' || e == null ? !1 : e === 'dashed' ? [i, i] : [n, n] }}; const cv = lv([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]); const dv = {getAreaStyle(t, e) { return cv(this, t, e) }}; var fv = Math.pow; var pv = Math.sqrt; var gv = 1e-8; var vv = 1e-4; var mv = pv(3); var yv = 1 / 3; var _v = H(); var xv = H(); var wv = H(); var bv = Math.min; var Sv = Math.max; var Mv = Math.sin; var Iv = Math.cos; var Tv = 2 * Math.PI; var Cv = H(); var Dv = H(); var Av = H(); var kv = []; var Pv = []; const Lv = {
    M: 1, L: 2, C: 3, Q: 4, A: 5, Z: 6, R: 7
  }; const Ov = []; const Bv = []; const Ev = []; const zv = []; const Rv = Math.min; const Nv = Math.max; const Fv = Math.cos; const Vv = Math.sin; const Hv = Math.sqrt; const Gv = Math.abs; const Wv = typeof Float32Array !== 'undefined'; var Xv = function (t) { this._saveData = !t, this._saveData && (this.data = []), this._ctx = null }; Xv.prototype = {
    constructor: Xv, _xi: 0, _yi: 0, _x0: 0, _y0: 0, _ux: 0, _uy: 0, _len: 0, _lineDash: null, _dashOffset: 0, _dashIdx: 0, _dashSum: 0, setScale(t, e, n) { n = n || 0, this._ux = Gv(n / Up / t) || 0, this._uy = Gv(n / Up / e) || 0 }, getContext() { return this._ctx }, beginPath(t) { return this._ctx = t, t && t.beginPath(), t && (this.dpr = t.dpr), this._saveData && (this._len = 0), this._lineDash && (this._lineDash = null, this._dashOffset = 0), this }, moveTo(t, e) { return this.addData(Lv.M, t, e), this._ctx && this._ctx.moveTo(t, e), this._x0 = t, this._y0 = e, this._xi = t, this._yi = e, this }, lineTo(t, e) { const n = Gv(t - this._xi) > this._ux || Gv(e - this._yi) > this._uy || this._len < 5; return this.addData(Lv.L, t, e), this._ctx && n && (this._needsDash() ? this._dashedLineTo(t, e) : this._ctx.lineTo(t, e)), n && (this._xi = t, this._yi = e), this }, bezierCurveTo(t, e, n, i, r, a) { return this.addData(Lv.C, t, e, n, i, r, a), this._ctx && (this._needsDash() ? this._dashedBezierTo(t, e, n, i, r, a) : this._ctx.bezierCurveTo(t, e, n, i, r, a)), this._xi = r, this._yi = a, this }, quadraticCurveTo(t, e, n, i) { return this.addData(Lv.Q, t, e, n, i), this._ctx && (this._needsDash() ? this._dashedQuadraticTo(t, e, n, i) : this._ctx.quadraticCurveTo(t, e, n, i)), this._xi = n, this._yi = i, this }, arc(t, e, n, i, r, a) { return this.addData(Lv.A, t, e, n, n, i, r - i, 0, a ? 0 : 1), this._ctx && this._ctx.arc(t, e, n, i, r, a), this._xi = Fv(r) * n + t, this._yi = Vv(r) * n + e, this }, arcTo(t, e, n, i, r) { return this._ctx && this._ctx.arcTo(t, e, n, i, r), this }, rect(t, e, n, i) { return this._ctx && this._ctx.rect(t, e, n, i), this.addData(Lv.R, t, e, n, i), this }, closePath() { this.addData(Lv.Z); const t = this._ctx; const e = this._x0; const n = this._y0; return t && (this._needsDash() && this._dashedLineTo(e, n), t.closePath()), this._xi = e, this._yi = n, this }, fill(t) { t && t.fill(), this.toStatic() }, stroke(t) { t && t.stroke(), this.toStatic() }, setLineDash(t) { if (t instanceof Array) { this._lineDash = t, this._dashIdx = 0; for (var e = 0, n = 0; n < t.length; n++)e += t[n]; this._dashSum = e } return this }, setLineDashOffset(t) { return this._dashOffset = t, this }, len() { return this._len }, setData(t) { const e = t.length; this.data && this.data.length === e || !Wv || (this.data = new Float32Array(e)); for (let n = 0; e > n; n++) this.data[n] = t[n]; this._len = e }, appendPath(t) { t instanceof Array || (t = [t]); for (var e = t.length, n = 0, i = this._len, r = 0; e > r; r++)n += t[r].len(); Wv && this.data instanceof Float32Array && (this.data = new Float32Array(i + n)); for (var r = 0; e > r; r++) for (let a = t[r].data, o = 0; o < a.length; o++) this.data[i++] = a[o]; this._len = i }, addData(t) { if (this._saveData) { let e = this.data; this._len + arguments.length > e.length && (this._expandData(), e = this.data); for (let n = 0; n < arguments.length; n++)e[this._len++] = arguments[n]; this._prevCmd = t } }, _expandData() { if (!(this.data instanceof Array)) { for (var t = [], e = 0; e < this._len; e++)t[e] = this.data[e]; this.data = t } }, _needsDash() { return this._lineDash }, _dashedLineTo(t, e) { let n; let i; const r = this._dashSum; let a = this._dashOffset; const o = this._lineDash; const s = this._ctx; const l = this._xi; const u = this._yi; let h = t - l; let c = e - u; const d = Hv(h * h + c * c); let f = l; let p = u; const g = o.length; for (h /= d, c /= d, a < 0 && (a = r + a), a %= r, f -= a * h, p -= a * c; h > 0 && t >= f || h < 0 && f >= t || h === 0 && (c > 0 && e >= p || c < 0 && p >= e);)i = this._dashIdx, n = o[i], f += h * n, p += c * n, this._dashIdx = (i + 1) % g, h > 0 && l > f || h < 0 && f > l || c > 0 && u > p || c < 0 && p > u || s[i % 2 ? 'moveTo' : 'lineTo'](h >= 0 ? Rv(f, t) : Nv(f, t), c >= 0 ? Rv(p, e) : Nv(p, e)); h = f - t, c = p - e, this._dashOffset = -Hv(h * h + c * c) }, _dashedBezierTo(t, e, n, i, r, a) { let o; let s; let l; let u; let h; const c = this._dashSum; let d = this._dashOffset; const f = this._lineDash; const p = this._ctx; const g = this._xi; const v = this._yi; const m = xr; let y = 0; let _ = this._dashIdx; const x = f.length; let w = 0; for (d < 0 && (d = c + d), d %= c, o = 0; o < 1; o += 0.1)s = m(g, t, n, r, o + 0.1) - m(g, t, n, r, o), l = m(v, e, i, a, o + 0.1) - m(v, e, i, a, o), y += Hv(s * s + l * l); for (;x > _ && (w += f[_], !(w > d)); _++);for (o = (w - d) / y; o <= 1;)u = m(g, t, n, r, o), h = m(v, e, i, a, o), _ % 2 ? p.moveTo(u, h) : p.lineTo(u, h), o += f[_] / y, _ = (_ + 1) % x; _ % 2 !== 0 && p.lineTo(r, a), s = r - u, l = a - h, this._dashOffset = -Hv(s * s + l * l) }, _dashedQuadraticTo(t, e, n, i) { const r = n; const a = i; n = (n + 2 * t) / 3, i = (i + 2 * e) / 3, t = (this._xi + 2 * t) / 3, e = (this._yi + 2 * e) / 3, this._dashedBezierTo(t, e, n, i, r, a) }, toStatic() { const t = this.data; t instanceof Array && (t.length = this._len, Wv && (this.data = new Float32Array(t))) }, getBoundingRect() { Ov[0] = Ov[1] = Ev[0] = Ev[1] = Number.MAX_VALUE, Bv[0] = Bv[1] = zv[0] = zv[1] = -Number.MAX_VALUE; for (var t = this.data, e = 0, n = 0, i = 0, r = 0, a = 0; a < t.length;) { const o = t[a++]; switch (a === 1 && (e = t[a], n = t[a + 1], i = e, r = n), o) { case Lv.M: i = t[a++], r = t[a++], e = i, n = r, Ev[0] = i, Ev[1] = r, zv[0] = i, zv[1] = r; break; case Lv.L: Or(e, n, t[a], t[a + 1], Ev, zv), e = t[a++], n = t[a++]; break; case Lv.C: Br(e, n, t[a++], t[a++], t[a++], t[a++], t[a], t[a + 1], Ev, zv), e = t[a++], n = t[a++]; break; case Lv.Q: Er(e, n, t[a++], t[a++], t[a], t[a + 1], Ev, zv), e = t[a++], n = t[a++]; break; case Lv.A: var s = t[a++]; var l = t[a++]; var u = t[a++]; var h = t[a++]; var c = t[a++]; var d = t[a++] + c; a += 1; var f = 1 - t[a++]; a === 1 && (i = Fv(c) * u + s, r = Vv(c) * h + l), zr(s, l, u, h, c, d, f, Ev, zv), e = Fv(d) * u + s, n = Vv(d) * h + l; break; case Lv.R: i = e = t[a++], r = n = t[a++]; var p = t[a++]; var g = t[a++]; Or(i, r, i + p, r + g, Ev, zv); break; case Lv.Z: e = i, n = r }oe(Ov, Ov, Ev), se(Bv, Bv, zv) } return a === 0 && (Ov[0] = Ov[1] = Bv[0] = Bv[1] = 0), new Sn(Ov[0], Ov[1], Bv[0] - Ov[0], Bv[1] - Ov[1]) }, rebuildPath(t) { for (var e, n, i, r, a, o, s = this.data, l = this._ux, u = this._uy, h = this._len, c = 0; h > c;) { const d = s[c++]; switch (c === 1 && (i = s[c], r = s[c + 1], e = i, n = r), d) { case Lv.M: e = i = s[c++], n = r = s[c++], t.moveTo(i, r); break; case Lv.L: a = s[c++], o = s[c++], (Gv(a - i) > l || Gv(o - r) > u || c === h - 1) && (t.lineTo(a, o), i = a, r = o); break; case Lv.C: t.bezierCurveTo(s[c++], s[c++], s[c++], s[c++], s[c++], s[c++]), i = s[c - 2], r = s[c - 1]; break; case Lv.Q: t.quadraticCurveTo(s[c++], s[c++], s[c++], s[c++]), i = s[c - 2], r = s[c - 1]; break; case Lv.A: var f = s[c++]; var p = s[c++]; var g = s[c++]; var v = s[c++]; var m = s[c++]; var y = s[c++]; var _ = s[c++]; var x = s[c++]; var w = g > v ? g : v; var b = g > v ? 1 : g / v; var S = g > v ? v / g : 1; var M = Math.abs(g - v) > 0.001; var I = m + y; M ? (t.translate(f, p), t.rotate(_), t.scale(b, S), t.arc(0, 0, w, m, I, 1 - x), t.scale(1 / b, 1 / S), t.rotate(-_), t.translate(-f, -p)) : t.arc(f, p, w, m, I, 1 - x), c === 1 && (e = Fv(m) * g + f, n = Vv(m) * v + p), i = Fv(I) * g + f, r = Vv(I) * v + p; break; case Lv.R: e = i = s[c], n = r = s[c + 1], t.rect(s[c++], s[c++], s[c++], s[c++]); break; case Lv.Z: t.closePath(), i = e, r = n } } }
  }, Xv.CMD = Lv; var Yv = 2 * Math.PI; var Uv = 2 * Math.PI; var qv = Xv.CMD; var jv = 2 * Math.PI; var Zv = 1e-4; var Kv = [-1, -1, -1]; var $v = [-1, -1]; const Qv = fg.prototype.getCanvasPattern; const Jv = Math.abs; const tm = new Xv(!0); $r.prototype = {
    constructor: $r, type: 'path', __dirtyPath: !0, strokeContainThreshold: 5, segmentIgnoreThreshold: 0, subPixelOptimize: !1, brush(t, e) { const n = this.style; const i = this.path || tm; const r = n.hasStroke(); const a = n.hasFill(); const o = n.fill; const s = n.stroke; const l = a && !!o.colorStops; const u = r && !!s.colorStops; const h = a && !!o.image; const c = r && !!s.image; if (n.bind(t, this, e), this.setTransform(t), this.__dirty) { let d; l && (d = d || this.getBoundingRect(), this._fillGradient = n.getGradient(t, o, d)), u && (d = d || this.getBoundingRect(), this._strokeGradient = n.getGradient(t, s, d)) }l ? t.fillStyle = this._fillGradient : h && (t.fillStyle = Qv.call(o, t)), u ? t.strokeStyle = this._strokeGradient : c && (t.strokeStyle = Qv.call(s, t)); const f = n.lineDash; const p = n.lineDashOffset; const g = !!t.setLineDash; const v = this.getGlobalScale(); if (i.setScale(v[0], v[1], this.segmentIgnoreThreshold), this.__dirtyPath || f && !g && r ? (i.beginPath(t), f && !g && (i.setLineDash(f), i.setLineDashOffset(p)), this.buildPath(i, this.shape, !1), this.path && (this.__dirtyPath = !1)) : (t.beginPath(), this.path.rebuildPath(t)), a) if (n.fillOpacity != null) { var m = t.globalAlpha; t.globalAlpha = n.fillOpacity * n.opacity, i.fill(t), t.globalAlpha = m } else i.fill(t); if (f && g && (t.setLineDash(f), t.lineDashOffset = p), r) if (n.strokeOpacity != null) { var m = t.globalAlpha; t.globalAlpha = n.strokeOpacity * n.opacity, i.stroke(t), t.globalAlpha = m } else i.stroke(t); f && g && t.setLineDash([]), n.text != null && (this.restoreTransform(t), this.drawRectText(t, this.getBoundingRect())) }, buildPath() {}, createPathProxy() { this.path = new Xv() }, getBoundingRect() { let t = this._rect; const e = this.style; const n = !t; if (n) { let i = this.path; i || (i = this.path = new Xv()), this.__dirtyPath && (i.beginPath(), this.buildPath(i, this.shape, !1)), t = i.getBoundingRect() } if (this._rect = t, e.hasStroke()) { const r = this._rectWithStroke || (this._rectWithStroke = t.clone()); if (this.__dirty || n) { r.copy(t); let a = e.lineWidth; const o = e.strokeNoScale ? this.getLineScale() : 1; e.hasFill() || (a = Math.max(a, this.strokeContainThreshold || 4)), o > 1e-10 && (r.width += a / o, r.height += a / o, r.x -= a / o / 2, r.y -= a / o / 2) } return r } return t }, contain(t, e) { const n = this.transformCoordToLocal(t, e); const i = this.getBoundingRect(); const r = this.style; if (t = n[0], e = n[1], i.contain(t, e)) { const a = this.path.data; if (r.hasStroke()) { let o = r.lineWidth; const s = r.strokeNoScale ? this.getLineScale() : 1; if (s > 1e-10 && (r.hasFill() || (o = Math.max(o, this.strokeContainThreshold)), Kr(a, o / s, t, e))) return !0 } if (r.hasFill()) return Zr(a, t, e) } return !1 }, dirty(t) { t == null && (t = !0), t && (this.__dirtyPath = t, this._rect = null), this.__dirty = this.__dirtyText = !0, this.__zr && this.__zr.refresh(), this.__clipTarget && this.__clipTarget.dirty() }, animateShape(t) { return this.animate('shape', t) }, attrKV(t, e) { t === 'shape' ? (this.setShape(e), this.__dirtyPath = !0, this._rect = null) : Si.prototype.attrKV.call(this, t, e) }, setShape(t, e) { const n = this.shape; if (n) { if (S(t)) for (const i in t)t.hasOwnProperty(i) && (n[i] = t[i]); else n[t] = e; this.dirty(!0) } return this }, getLineScale() { const t = this.transform; return t && Jv(t[0] - 1) > 1e-10 && Jv(t[3] - 1) > 1e-10 ? Math.sqrt(Jv(t[0] * t[3] - t[2] * t[1])) : 1 }
  }, $r.extend = function (t) { const e = function (e) { $r.call(this, e), t.style && this.style.extendFrom(t.style, !1); const n = t.shape; if (n) { this.shape = this.shape || {}; const i = this.shape; for (const r in n)!i.hasOwnProperty(r) && n.hasOwnProperty(r) && (i[r] = n[r]) }t.init && t.init.call(this, e) }; h(e, $r); for (const n in t)n !== 'style' && n !== 'shape' && (e.prototype[n] = t[n]); return e }, h($r, Si); const em = Xv.CMD; const nm = [[], [], []]; const im = Math.sqrt; const rm = Math.atan2; var am = function (t, e) { let n; let i; let r; let a; let o; var s; const l = t.data; const u = em.M; const h = em.C; const c = em.L; const d = em.R; const f = em.A; const p = em.Q; for (r = 0, a = 0; r < l.length;) { switch (n = l[r++], a = r, i = 0, n) { case u: i = 1; break; case c: i = 1; break; case h: i = 3; break; case p: i = 2; break; case f: var g = e[4]; var v = e[5]; var m = im(e[0] * e[0] + e[1] * e[1]); var y = im(e[2] * e[2] + e[3] * e[3]); var _ = rm(-e[1] / y, e[0] / m); l[r] *= m, l[r++] += g, l[r] *= y, l[r++] += v, l[r++] *= m, l[r++] *= y, l[r++] += _, l[r++] += _, r += 2, a = r; break; case d: s[0] = l[r++], s[1] = l[r++], ae(s, s, e), l[a++] = s[0], l[a++] = s[1], s[0] += l[r++], s[1] += l[r++], ae(s, s, e), l[a++] = s[0], l[a++] = s[1] } for (o = 0; i > o; o++) { var s = nm[o]; s[0] = l[r++], s[1] = l[r++], ae(s, s, e), l[a++] = s[0], l[a++] = s[1] } } }; var om = Math.sqrt; var sm = Math.sin; var lm = Math.cos; var um = Math.PI; const hm = function (t) { return Math.sqrt(t[0] * t[0] + t[1] * t[1]) }; var cm = function (t, e) { return (t[0] * e[0] + t[1] * e[1]) / (hm(t) * hm(e)) }; var dm = function (t, e) { return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(cm(t, e)) }; var fm = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi; var pm = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g; var gm = function (t) { Si.call(this, t) }; gm.prototype = {
    constructor: gm, type: 'text', brush(t, e) { const n = this.style; this.__dirty && ai(n, !0), n.fill = n.stroke = n.shadowBlur = n.shadowColor = n.shadowOffsetX = n.shadowOffsetY = null; let i = n.text; return i != null && (i += ''), bi(i, n) ? (this.setTransform(t), si(this, t, i, n, null, e), void this.restoreTransform(t)) : void (t.__attrCachedBy = og.NONE) }, getBoundingRect() { const t = this.style; if (this.__dirty && ai(t, !0), !this._rect) { let e = t.text; e != null ? e += '' : e = ''; const n = Gn(`${t.text}`, t.font, t.textAlign, t.textVerticalAlign, t.textPadding, t.textLineHeight, t.rich); if (n.x += t.x || 0, n.y += t.y || 0, yi(t.textStroke, t.textStrokeWidth)) { const i = t.textStrokeWidth; n.x -= i / 2, n.y -= i / 2, n.width += i, n.height += i } this._rect = n } return this._rect }
  }, h(gm, Si); const vm = $r.extend({type: 'circle', shape: {cx: 0, cy: 0, r: 0}, buildPath(t, e, n) { n && t.moveTo(e.cx + e.r, e.cy), t.arc(e.cx, e.cy, e.r, 0, 2 * Math.PI, !0) }}); const mm = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]]; const ym = function (t) { return Hf.browser.ie && Hf.browser.version >= 11 ? function () { let e; const n = this.__clipPaths; const i = this.style; if (n) for (let r = 0; r < n.length; r++) { const a = n[r]; const o = a && a.shape; const s = a && a.type; if (o && (s === 'sector' && o.startAngle === o.endAngle || s === 'rect' && (!o.width || !o.height))) { for (var l = 0; l < mm.length; l++)mm[l][2] = i[mm[l][0]], i[mm[l][0]] = mm[l][1]; e = !0; break } } if (t.apply(this, arguments), e) for (var l = 0; l < mm.length; l++)i[mm[l][0]] = mm[l][2] } : t }; var _m = $r.extend({
    type: 'sector',
    shape: {
      cx: 0, cy: 0, r0: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0
    },
    brush: ym($r.prototype.brush),
    buildPath(t, e) { const n = e.cx; const i = e.cy; const r = Math.max(e.r0 || 0, 0); const a = Math.max(e.r, 0); const o = e.startAngle; const s = e.endAngle; const l = e.clockwise; const u = Math.cos(o); const h = Math.sin(o); t.moveTo(u * r + n, h * r + i), t.lineTo(u * a + n, h * a + i), t.arc(n, i, a, o, s, !l), t.lineTo(Math.cos(s) * r + n, Math.sin(s) * r + i), r !== 0 && t.arc(n, i, r, s, o, l), t.closePath() }
  }); const xm = $r.extend({
    type: 'ring',
    shape: {
      cx: 0, cy: 0, r: 0, r0: 0
    },
    buildPath(t, e) { const n = e.cx; const i = e.cy; const r = 2 * Math.PI; t.moveTo(n + e.r, i), t.arc(n, i, e.r, 0, r, !1), t.moveTo(n + e.r0, i), t.arc(n, i, e.r0, 0, r, !0) }
  }); var wm = function (t, e) { for (var n = t.length, i = [], r = 0, a = 1; n > a; a++)r += ee(t[a - 1], t[a]); let o = r / 2; o = n > o ? n : o; for (var a = 0; o > a; a++) { var s; var l; var u; const h = a / (o - 1) * (e ? n : n - 1); const c = Math.floor(h); const d = h - c; const f = t[c % n]; e ? (s = t[(c - 1 + n) % n], l = t[(c + 1) % n], u = t[(c + 2) % n]) : (s = t[c === 0 ? c : c - 1], l = t[c > n - 2 ? n - 1 : c + 1], u = t[c > n - 3 ? n - 1 : c + 2]); const p = d * d; const g = d * p; i.push([ra(s[0], f[0], l[0], u[0], d, p, g), ra(s[1], f[1], l[1], u[1], d, p, g)]) } return i }; var bm = function (t, e, n, i) { let r; let a; let o; let s; const l = []; const u = []; const h = []; const c = []; if (i) { o = [1 / 0, 1 / 0], s = [-1 / 0, -1 / 0]; for (var d = 0, f = t.length; f > d; d++)oe(o, o, t[d]), se(s, s, t[d]); oe(o, o, i[0]), se(s, s, i[1]) } for (var d = 0, f = t.length; f > d; d++) { const p = t[d]; if (n)r = t[d ? d - 1 : f - 1], a = t[(d + 1) % f]; else { if (d === 0 || d === f - 1) { l.push(W(t[d])); continue }r = t[d - 1], a = t[d + 1] }q(u, a, r), J(u, u, e); let g = ee(p, r); let v = ee(p, a); const m = g + v; m !== 0 && (g /= m, v /= m), J(h, u, -g), J(c, u, v); const y = Y([], p, h); const _ = Y([], p, c); i && (se(y, y, o), oe(y, y, s), se(_, _, o), oe(_, _, s)), l.push(y), l.push(_) } return n && l.push(l.shift()), l }; const Sm = $r.extend({type: 'polygon', shape: {points: null, smooth: !1, smoothConstraint: null}, buildPath(t, e) { aa(t, e, !0) }}); var Mm = $r.extend({
    type: 'polyline', shape: {points: null, smooth: !1, smoothConstraint: null}, style: {stroke: '#000', fill: null}, buildPath(t, e) { aa(t, e, !1) }
  }); var Im = Math.round; const Tm = {}; var Cm = $r.extend({
    type: 'rect',
    shape: {
      r: 0, x: 0, y: 0, width: 0, height: 0
    },
    buildPath(t, e) { let n; let i; let r; let a; this.subPixelOptimize ? (sa(Tm, e, this.style), n = Tm.x, i = Tm.y, r = Tm.width, a = Tm.height, Tm.r = e.r, e = Tm) : (n = e.x, i = e.y, r = e.width, a = e.height), e.r ? ri(t, e) : t.rect(n, i, r, a), t.closePath() }
  }); const Dm = {}; var Am = $r.extend({
    type: 'line',
    shape: {
      x1: 0, y1: 0, x2: 0, y2: 0, percent: 1
    },
    style: {stroke: '#000', fill: null},
    buildPath(t, e) { let n; let i; let r; let a; this.subPixelOptimize ? (oa(Dm, e, this.style), n = Dm.x1, i = Dm.y1, r = Dm.x2, a = Dm.y2) : (n = e.x1, i = e.y1, r = e.x2, a = e.y2); const o = e.percent; o !== 0 && (t.moveTo(n, i), o < 1 && (r = n * (1 - o) + r * o, a = i * (1 - o) + a * o), t.lineTo(r, a)) },
    pointAt(t) { const e = this.shape; return [e.x1 * (1 - t) + e.x2 * t, e.y1 * (1 - t) + e.y2 * t] }
  }); const km = []; const Pm = $r.extend({
    type: 'bezier-curve',
    shape: {
      x1: 0, y1: 0, x2: 0, y2: 0, cpx1: 0, cpy1: 0, percent: 1
    },
    style: {stroke: '#000', fill: null},
    buildPath(t, e) { const n = e.x1; const i = e.y1; let r = e.x2; let a = e.y2; let o = e.cpx1; let s = e.cpy1; let l = e.cpx2; let u = e.cpy2; const h = e.percent; h !== 0 && (t.moveTo(n, i), l == null || u == null ? (h < 1 && (kr(n, o, r, h, km), o = km[1], r = km[2], kr(i, s, a, h, km), s = km[1], a = km[2]), t.quadraticCurveTo(o, s, r, a)) : (h < 1 && (Mr(n, o, l, r, h, km), o = km[1], l = km[2], r = km[3], Mr(i, s, u, a, h, km), s = km[1], u = km[2], a = km[3]), t.bezierCurveTo(o, s, l, u, r, a))) },
    pointAt(t) { return ua(this.shape, t, !1) },
    tangentAt(t) { const e = ua(this.shape, t, !0); return te(e, e) }
  }); const Lm = $r.extend({
    type: 'arc',
    shape: {
      cx: 0, cy: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0
    },
    style: {stroke: '#000', fill: null},
    buildPath(t, e) { const n = e.cx; const i = e.cy; const r = Math.max(e.r, 0); const a = e.startAngle; const o = e.endAngle; const s = e.clockwise; const l = Math.cos(a); const u = Math.sin(a); t.moveTo(l * r + n, u * r + i), t.arc(n, i, r, a, o, !s) }
  }); const Om = $r.extend({
    type: 'compound', shape: {paths: null}, _updatePathDirty() { for (var t = this.__dirtyPath, e = this.shape.paths, n = 0; n < e.length; n++)t = t || e[n].__dirtyPath; this.__dirtyPath = t, this.__dirty = this.__dirty || t }, beforeBrush() { this._updatePathDirty(); for (let t = this.shape.paths || [], e = this.getGlobalScale(), n = 0; n < t.length; n++)t[n].path || t[n].createPathProxy(), t[n].path.setScale(e[0], e[1], t[n].segmentIgnoreThreshold) }, buildPath(t, e) { for (let n = e.paths || [], i = 0; i < n.length; i++)n[i].buildPath(t, n[i].shape, !0) }, afterBrush() { for (let t = this.shape.paths || [], e = 0; e < t.length; e++)t[e].__dirtyPath = !1 }, getBoundingRect() { return this._updatePathDirty(), $r.prototype.getBoundingRect.call(this) }
  }); const Bm = function (t) { this.colorStops = t || [] }; Bm.prototype = {constructor: Bm, addColorStop(t, e) { this.colorStops.push({offset: t, color: e}) }}; var Em = function (t, e, n, i, r, a) { this.x = t == null ? 0 : t, this.y = e == null ? 0 : e, this.x2 = n == null ? 1 : n, this.y2 = i == null ? 0 : i, this.type = 'linear', this.global = a || !1, Bm.call(this, r) }; Em.prototype = {constructor: Em}, h(Em, Bm); const zm = function (t, e, n, i, r) { this.x = t == null ? 0.5 : t, this.y = e == null ? 0.5 : e, this.r = n == null ? 0.5 : n, this.type = 'radial', this.global = r || !1, Bm.call(this, i) }; zm.prototype = {constructor: zm}, h(zm, Bm), ha.prototype.incremental = !0, ha.prototype.clearDisplaybles = function () { this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.dirty(), this.notClear = !1 }, ha.prototype.addDisplayable = function (t, e) { e ? this._temporaryDisplayables.push(t) : this._displayables.push(t), this.dirty() }, ha.prototype.addDisplayables = function (t, e) { e = e || !1; for (let n = 0; n < t.length; n++) this.addDisplayable(t[n], e) }, ha.prototype.eachPendingDisplayable = function (t) { for (var e = this._cursor; e < this._displayables.length; e++)t && t(this._displayables[e]); for (var e = 0; e < this._temporaryDisplayables.length; e++)t && t(this._temporaryDisplayables[e]) }, ha.prototype.update = function () { this.updateTransform(); for (var t = this._cursor; t < this._displayables.length; t++) { var e = this._displayables[t]; e.parent = this, e.update(), e.parent = null } for (var t = 0; t < this._temporaryDisplayables.length; t++) { var e = this._temporaryDisplayables[t]; e.parent = this, e.update(), e.parent = null } }, ha.prototype.brush = function (t) { for (var e = this._cursor; e < this._displayables.length; e++) { var n = this._displayables[e]; n.beforeBrush && n.beforeBrush(t), n.brush(t, e === this._cursor ? null : this._displayables[e - 1]), n.afterBrush && n.afterBrush(t) } this._cursor = e; for (var e = 0; e < this._temporaryDisplayables.length; e++) { var n = this._temporaryDisplayables[e]; n.beforeBrush && n.beforeBrush(t), n.brush(t, e === 0 ? null : this._temporaryDisplayables[e - 1]), n.afterBrush && n.afterBrush(t) } this._temporaryDisplayables = [], this.notClear = !0 }; const Rm = []; ha.prototype.getBoundingRect = function () { if (!this._rect) { for (var t = new Sn(1 / 0, 1 / 0, -1 / 0, -1 / 0), e = 0; e < this._displayables.length; e++) { const n = this._displayables[e]; const i = n.getBoundingRect().clone(); n.needLocalTransform() && i.applyTransform(n.getLocalTransform(Rm)), t.union(i) } this._rect = t } return this._rect }, ha.prototype.contain = function (t, e) { const n = this.transformCoordToLocal(t, e); const i = this.getBoundingRect(); if (i.contain(n[0], n[1])) for (let r = 0; r < this._displayables.length; r++) { const a = this._displayables[r]; if (a.contain(t, e)) return !0 } return !1 }, h(ha, Si); var Nm = Math.max; var Fm = Math.min; var Vm = {}; var Hm = 1; const Gm = {color: 'textFill', textBorderColor: 'textStroke', textBorderWidth: 'textStrokeWidth'}; var Wm = 'emphasis'; var Xm = 'normal'; var Ym = 1; var Um = {}; var qm = {}; const jm = ia; const Zm = la; var Km = N(); var $m = 0; fa('circle', vm), fa('sector', _m), fa('ring', xm), fa('polygon', Sm), fa('polyline', Mm), fa('rect', Cm), fa('line', Am), fa('bezierCurve', Pm), fa('arc', Lm); const Qm = (Object.freeze || Object)({
    Z2_EMPHASIS_LIFT: Hm, CACHED_LABEL_STYLE_PROPERTIES: Gm, extendShape: ca, extendPath: da, registerShape: fa, getShapeClass: pa, makePath: ga, makeImage: va, mergePath: jm, resizePath: ya, subPixelOptimizeLine: _a, subPixelOptimizeRect: xa, subPixelOptimize: Zm, setElementHoverStyle: Da, setHoverStyle: Ba, setAsHighDownDispatcher: Ea, isHighDownDispatcher: za, getHighlightDigit: Ra, setLabelStyle: Na, modifyLabelStyle: Fa, setTextStyle: Va, setText: Ha, getFont: ja, updateProps: Ka, initProps: $a, getTransform: Qa, applyTransform: Ja, transformDirection: to, groupTransition: eo, clipPointsByRect: no, clipRectByRect: io, createIcon: ro, linePolygonIntersect: ao, lineLineIntersect: oo, Group: tg, Image: Mi, Text: gm, Circle: vm, Sector: _m, Ring: xm, Polygon: Sm, Polyline: Mm, Rect: Cm, Line: Am, BezierCurve: Pm, Arc: Lm, IncrementalDisplayable: ha, CompoundPath: Om, LinearGradient: Em, RadialGradient: zm, BoundingRect: Sn
  }); const Jm = ['textStyle', 'color']; const ty = {
    getTextColor(t) { const e = this.ecModel; return this.getShallow('color') || (!t && e ? e.get(Jm) : null) },
    getFont() {
      return ja({
        fontStyle: this.getShallow('fontStyle'), fontWeight: this.getShallow('fontWeight'), fontSize: this.getShallow('fontSize'), fontFamily: this.getShallow('fontFamily')
      }, this.ecModel)
    },
    getTextRect(t) { return Gn(t, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('lineHeight'), this.getShallow('rich'), this.getShallow('truncateText')) }
  }; const ey = lv([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]); const ny = {getItemStyle(t, e) { const n = ey(this, t, e); const i = this.getBorderLineDash(); return i && (n.lineDash = i), n }, getBorderLineDash() { const t = this.get('borderType'); return t === 'solid' || t == null ? null : t === 'dashed' ? [5, 5] : [1, 1] }}; const iy = c; var ry = ar(); uo.prototype = {
    constructor: uo, init: null, mergeOption(t) { r(this.option, t, !0) }, get(t, e) { return t == null ? this.option : ho(this.option, this.parsePath(t), !e && co(this, t)) }, getShallow(t, e) { const n = this.option; let i = n == null ? n : n[t]; const r = !e && co(this, t); return i == null && r && (i = r.getShallow(t)), i }, getModel(t, e) { let n; const i = t == null ? this.option : ho(this.option, t = this.parsePath(t)); return e = e || (n = co(this, t)) && n.getModel(t), new uo(i, e, this.ecModel) }, isEmpty() { return this.option == null }, restoreData() {}, clone() { const t = this.constructor; return new t(i(this.option)) }, setReadOnly() {}, parsePath(t) { return typeof t === 'string' && (t = t.split('.')), t }, customizeGetParent(t) { ry(this).getParent = t }, isAnimationEnabled() { if (!Hf.node) { if (this.option.animation != null) return !!this.option.animation; if (this.parentModel) return this.parentModel.isAnimationEnabled() } }
  }, fr(uo), pr(uo), iy(uo, hv), iy(uo, dv), iy(uo, ty), iy(uo, ny); var ay = 0; var oy = 1e-4; const sy = 9007199254740991; var ly = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d\d)(?::(\d\d)(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/; const uy = (Object.freeze || Object)({
    linearMap: mo, parsePercent: yo, round: _o, asc: xo, getPrecision: wo, getPrecisionSafe: bo, getPixelPrecision: So, getPercentWithPrecision: Mo, MAX_SAFE_INTEGER: sy, remRadian: Io, isRadianAroundZero: To, parseDate: Co, quantity: Do, quantityExponent: Ao, nice: ko, quantile: Po, reformIntervals: Lo, isNumeric: Oo
  }); var hy = L; var cy = /([&<>"'])/g; var dy = {
    '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#39;'
  }; var fy = ['a', 'b', 'c', 'd', 'e', 'f', 'g']; var py = function (t, e) { return `{${t}${e == null ? '' : e}}` }; const gy = jn; const vy = (Object.freeze || Object)({
    addCommas: Bo, toCamelCase: Eo, normalizeCssArray: hy, encodeHTML: zo, formatTpl: Ro, formatTplSimple: No, getTooltipMarker: Fo, formatTime: Ho, capitalFirst: Go, truncateText: gy, getTextBoundingRect: Wo, getTextRect: Xo
  }); var my = f; var yy = ['left', 'right', 'top', 'bottom', 'width', 'height']; var _y = [['width', 'left', 'right'], ['height', 'top', 'bottom']]; const xy = Yo; const wy = (_(Yo, 'vertical'), _(Yo, 'horizontal'), {
    getBoxLayoutParams() {
      return {
        left: this.get('left'), top: this.get('top'), right: this.get('right'), bottom: this.get('bottom'), width: this.get('width'), height: this.get('height')
      }
    }
  }); const by = ar(); var Sy = uo.extend({
    type: 'component', id: '', name: '', mainType: '', subType: '', componentIndex: 0, defaultOption: null, ecModel: null, dependentModels: [], uid: null, layoutMode: null, $constructor(t, e, n, i) { uo.call(this, t, e, n, i), this.uid = fo('ec_cpt_model') }, init(t, e, n) { this.mergeDefaultAndTheme(t, n) }, mergeDefaultAndTheme(t, e) { const n = this.layoutMode; const i = n ? jo(t) : {}; const a = e.getTheme(); r(t, a.get(this.mainType)), r(t, this.getDefaultOption()), n && qo(t, i, n) }, mergeOption(t) { r(this.option, t, !0); const e = this.layoutMode; e && qo(this.option, t, e) }, optionUpdated() {}, getDefaultOption() { const t = by(this); if (!t.defaultOption) { for (var e = [], n = this.constructor; n;) { const i = n.prototype.defaultOption; i && e.push(i), n = n.superClass } for (var a = {}, o = e.length - 1; o >= 0; o--)a = r(a, e[o], !0); t.defaultOption = a } return t.defaultOption }, getReferringComponents(t) { return this.ecModel.queryComponents({mainType: t, index: this.get(`${t}Index`, !0), id: this.get(`${t}Id`, !0)}) }
  }); mr(Sy, {registerWhenExtend: !0}), po(Sy), go(Sy, Ko), c(Sy, wy); let My = ''; typeof navigator !== 'undefined' && (My = navigator.platform || ''); var Iy = {
    color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],
    gradientColor: ['#f6efa6', '#d88273', '#bf444c'],
    textStyle: {
      fontFamily: My.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif', fontSize: 12, fontStyle: 'normal', fontWeight: 'normal'
    },
    blendMode: null,
    animation: 'auto',
    animationDuration: 1e3,
    animationDurationUpdate: 300,
    animationEasing: 'exponentialOut',
    animationEasingUpdate: 'cubicOut',
    animationThreshold: 2e3,
    progressiveThreshold: 3e3,
    progressive: 400,
    hoverLayerThreshold: 3e3,
    useUTC: !1
  }; const Ty = ar(); const Cy = {
    clearColorPalette() {
      Ty(this).colorIdx = 0, Ty(this).colorNameMap = {}
    },
    getColorFromPalette(t, e, n) { e = e || this; const i = Ty(e); const r = i.colorIdx || 0; const a = i.colorNameMap = i.colorNameMap || {}; if (a.hasOwnProperty(t)) return a[t]; const o = Ki(this.get('color', !0)); const s = this.get('colorLayer', !0); let l = n != null && s ? $o(s, n) : o; if (l = l || o, l && l.length) { const u = l[r]; return t && (a[t] = u), i.colorIdx = (r + 1) % l.length, u } }
  }; var Dy = 'original'; var Ay = 'arrayRows'; var ky = 'objectRows'; var Py = 'keyedColumns'; var Ly = 'unknown'; var Oy = 'typedArray'; var By = 'column'; var Ey = 'row'; Qo.seriesDataToSource = function (t) { return new Qo({data: t, sourceFormat: I(t) ? Oy : Dy, fromDataset: !1}) }, pr(Qo); var zy = {Must: 1, Might: 2, Not: 3}; var Ry = ar(); var Ny = '\x00_ec_inner'; const Fy = uo.extend({
    init(t, e, n, i) { n = n || {}, this.option = null, this._theme = new uo(n), this._optionManager = i },
    setOption(t, e) { O(!(Ny in t), 'please use chart.getOption()'), this._optionManager.setOption(t, e), this.resetOption(null) },
    resetOption(t) { let e = !1; const n = this._optionManager; if (!t || t === 'recreate') { const i = n.mountOption(t === 'recreate'); this.option && t !== 'recreate' ? (this.restoreData(), this.mergeOption(i)) : ps.call(this, i), e = !0 } if ((t === 'timeline' || t === 'media') && this.restoreData(), !t || t === 'recreate' || t === 'timeline') { const r = n.getTimelineOption(this); r && (this.mergeOption(r), e = !0) } if (!t || t === 'recreate' || t === 'media') { const a = n.getMediaOption(this, this._api); a.length && f(a, function (t) { this.mergeOption(t, e = !0) }, this) } return e },
    mergeOption(t) { function e(e, i) { const r = Ki(t[e]); const s = tr(a.get(e), r); er(s), f(s, function (t) { const n = t.option; S(n) && (t.keyInfo.mainType = e, t.keyInfo.subType = vs(e, n, t.exist)) }); const l = gs(a, i); n[e] = [], a.set(e, []), f(s, function (t, i) { let r = t.exist; const s = t.option; if (O(S(s) || r, 'Empty component definition'), s) { const u = Sy.getClass(e, t.keyInfo.subType, !0); if (r && r.constructor === u)r.name = t.keyInfo.name, r.mergeOption(s, this), r.optionUpdated(s, !1); else { const h = o({dependentModels: l, componentIndex: i}, t.keyInfo); r = new u(s, this, this, h), o(r, h), r.init(s, this, this, h), r.optionUpdated(null, !0) } } else r.mergeOption({}, this), r.optionUpdated({}, !1); a.get(e)[i] = r, n[e][i] = r.option }, this), e === 'series' && ms(this, a.get('series')) } var n = this.option; var a = this._componentsMap; const s = []; es(this), f(t, function (t, e) { t != null && (Sy.hasClass(e) ? e && s.push(e) : n[e] = n[e] == null ? i(t) : r(n[e], t, !0)) }), Sy.topologicalTravel(s, Sy.getAllClassMainTypes(), e, this), this._seriesIndicesMap = N(this._seriesIndices = this._seriesIndices || []) },
    getOption() { const t = i(this.option); return f(t, function (e, n) { if (Sy.hasClass(n)) { for (var e = Ki(e), i = e.length - 1; i >= 0; i--)ir(e[i]) && e.splice(i, 1); t[n] = e } }), delete t[Ny], t },
    getTheme() { return this._theme },
    getComponent(t, e) { const n = this._componentsMap.get(t); return n ? n[e || 0] : void 0 },
    queryComponents(t) { const e = t.mainType; if (!e) return []; let n = t.index; const i = t.id; const r = t.name; const a = this._componentsMap.get(e); if (!a || !a.length) return []; let o; if (n != null)x(n) || (n = [n]), o = v(p(n, function (t) { return a[t] }), function (t) { return !!t }); else if (i != null) { const s = x(i); o = v(a, function (t) { return s && u(i, t.id) >= 0 || !s && t.id === i }) } else if (r != null) { const l = x(r); o = v(a, function (t) { return l && u(r, t.name) >= 0 || !l && t.name === r }) } else o = a.slice(); return ys(o, t) },
    findComponents(t) {
      function e(t) {
        const e = `${r}Index`; const n = `${r}Id`; const i = `${r}Name`; return !t || t[e] == null && t[n] == null && t[i] == null ? null : {
          mainType: r, index: t[e], id: t[n], name: t[i]
        }
      } function n(e) { return t.filter ? v(e, t.filter) : e } const i = t.query; var r = t.mainType; const a = e(i); const o = a ? this.queryComponents(a) : this._componentsMap.get(r); return n(ys(o, t))
    },
    eachComponent(t, e, n) { const i = this._componentsMap; if (typeof t === 'function')n = e, e = t, i.each(function (t, i) { f(t, function (t, r) { e.call(n, i, t, r) }) }); else if (b(t))f(i.get(t), e, n); else if (S(t)) { const r = this.findComponents(t); f(r, e, n) } },
    getSeriesByName(t) { const e = this._componentsMap.get('series'); return v(e, function (e) { return e.name === t }) },
    getSeriesByIndex(t) { return this._componentsMap.get('series')[t] },
    getSeriesByType(t) { const e = this._componentsMap.get('series'); return v(e, function (e) { return e.subType === t }) },
    getSeries() { return this._componentsMap.get('series').slice() },
    getSeriesCount() { return this._componentsMap.get('series').length },
    eachSeries(t, e) { f(this._seriesIndices, function (n) { const i = this._componentsMap.get('series')[n]; t.call(e, i, n) }, this) },
    eachRawSeries(t, e) { f(this._componentsMap.get('series'), t, e) },
    eachSeriesByType(t, e, n) { f(this._seriesIndices, function (i) { const r = this._componentsMap.get('series')[i]; r.subType === t && e.call(n, r, i) }, this) },
    eachRawSeriesByType(t, e, n) { return f(this.getSeriesByType(t), e, n) },
    isSeriesFiltered(t) { return this._seriesIndicesMap.get(t.componentIndex) == null },
    getCurrentSeriesIndices() { return (this._seriesIndices || []).slice() },
    filterSeries(t, e) { const n = v(this._componentsMap.get('series'), t, e); ms(this, n) },
    restoreData(t) { const e = this._componentsMap; ms(this, e.get('series')); const n = []; e.each(function (t, e) { n.push(e) }), Sy.topologicalTravel(n, Sy.getAllClassMainTypes(), function (n) { f(e.get(n), function (e) { (n !== 'series' || !ds(e, t)) && e.restoreData() }) }) }
  }); c(Fy, Cy); var Vy = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; const Hy = {}; xs.prototype = {
    constructor: xs, create(t, e) { let n = []; f(Hy, function (i) { const r = i.create(t, e); n = n.concat(r || []) }), this._coordinateSystems = n }, update(t, e) { f(this._coordinateSystems, function (n) { n.update && n.update(t, e) }) }, getCoordinateSystems() { return this._coordinateSystems.slice() }
  }, xs.register = function (t, e) { Hy[t] = e }, xs.get = function (t) { return Hy[t] }; var Gy = f; const Wy = i; var Xy = p; var Yy = r; var Uy = /^(min|max)?(.+)$/; ws.prototype = {
    constructor: ws, setOption(t, e) { t && f(Ki(t.series), function (t) { t && t.data && I(t.data) && E(t.data) }), t = Wy(t); const n = this._optionBackup; const i = bs.call(this, t, e, !n); this._newBaseOption = i.baseOption, n ? (Ts(n.baseOption, i.baseOption), i.timelineOptions.length && (n.timelineOptions = i.timelineOptions), i.mediaList.length && (n.mediaList = i.mediaList), i.mediaDefault && (n.mediaDefault = i.mediaDefault)) : this._optionBackup = i }, mountOption(t) { const e = this._optionBackup; return this._timelineOptions = Xy(e.timelineOptions, Wy), this._mediaList = Xy(e.mediaList, Wy), this._mediaDefault = Wy(e.mediaDefault), this._currentMediaIndices = [], Wy(t ? e.baseOption : this._newBaseOption) }, getTimelineOption(t) { let e; const n = this._timelineOptions; if (n.length) { const i = t.getComponent('timeline'); i && (e = Wy(n[i.getCurrentIndex()], !0)) } return e }, getMediaOption() { const t = this._api.getWidth(); const e = this._api.getHeight(); const n = this._mediaList; const i = this._mediaDefault; let r = []; let a = []; if (!n.length && !i) return a; for (let o = 0, s = n.length; s > o; o++)Ss(n[o].query, t, e) && r.push(o); return !r.length && i && (r = [-1]), r.length && !Is(r, this._currentMediaIndices) && (a = Xy(r, function (t) { return Wy(t === -1 ? i.option : n[t].option) })), this._currentMediaIndices = r, a }
  }; const qy = f; var jy = S; var Zy = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine']; const Ky = function (t, e) { qy(Os(t.series), function (t) { jy(t) && Ls(t) }); const n = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar']; e && n.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis'), qy(n, function (e) { qy(Os(t[e]), function (t) { t && (ks(t, 'axisLabel'), ks(t.axisPointer, 'label')) }) }), qy(Os(t.parallel), function (t) { const e = t && t.parallelAxisDefault; ks(e, 'axisLabel'), ks(e && e.axisPointer, 'label') }), qy(Os(t.calendar), function (t) { Ds(t, 'itemStyle'), ks(t, 'dayLabel'), ks(t, 'monthLabel'), ks(t, 'yearLabel') }), qy(Os(t.radar), function (t) { ks(t, 'name') }), qy(Os(t.geo), function (t) { jy(t) && (Ps(t), qy(Os(t.regions), function (t) { Ps(t) })) }), qy(Os(t.timeline), function (t) { Ps(t), Ds(t, 'label'), Ds(t, 'itemStyle'), Ds(t, 'controlStyle', !0); const e = t.data; x(e) && f(e, function (t) { S(t) && (Ds(t, 'label'), Ds(t, 'itemStyle')) }) }), qy(Os(t.toolbox), function (t) { Ds(t, 'iconStyle'), qy(t.feature, function (t) { Ds(t, 'iconStyle') }) }), ks(Bs(t.axisPointer), 'label'), ks(Bs(t.tooltip).axisPointer, 'label') }; var $y = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']]; const Qy = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline']; var Jy = function (t, e) { Ky(t, e), t.series = Ki(t.series), f(t.series, function (t) { if (S(t)) { const e = t.type; if (e === 'line')t.clipOverflow != null && (t.clip = t.clipOverflow); else if (e === 'pie' || e === 'gauge')t.clockWise != null && (t.clockwise = t.clockWise); else if (e === 'gauge') { const n = Es(t, 'pointer.color'); n != null && zs(t, 'itemStyle.color', n) }Rs(t) } }), t.dataRange && (t.visualMap = t.dataRange), f(Qy, function (e) { let n = t[e]; n && (x(n) || (n = [n]), f(n, function (t) { Rs(t) })) }) }; const t_ = function (t) {
    const e = N(); t.eachSeries(function (t) {
      const n = t.get('stack'); if (n) {
        const i = e.get(n) || e.set(n, []); const r = t.getData(); const a = {
          stackResultDimension: r.getCalculationInfo('stackResultDimension'), stackedOverDimension: r.getCalculationInfo('stackedOverDimension'), stackedDimension: r.getCalculationInfo('stackedDimension'), stackedByDimension: r.getCalculationInfo('stackedByDimension'), isStackedByIndex: r.getCalculationInfo('isStackedByIndex'), data: r, seriesModel: t
        }; if (!a.stackedDimension || !a.isStackedByIndex && !a.stackedByDimension) return; i.length && r.setCalculationInfo('stackedOnSeries', i[i.length - 1].seriesModel), i.push(a)
      }
    }), e.each(Ns)
  }; const e_ = Fs.prototype; e_.pure = !1, e_.persistent = !0, e_.getSource = function () { return this._source }; var n_ = {
    arrayRows_column: {
      pure: !0, count() { return Math.max(0, this._data.length - this._source.startIndex) }, getItem(t) { return this._data[t + this._source.startIndex] }, appendData: Gs
    },
    arrayRows_row: {
      pure: !0, count() { const t = this._data[0]; return t ? Math.max(0, t.length - this._source.startIndex) : 0 }, getItem(t) { t += this._source.startIndex; for (var e = [], n = this._data, i = 0; i < n.length; i++) { const r = n[i]; e.push(r ? r[t] : null) } return e }, appendData() { throw new Error('Do not support appendData when set seriesLayoutBy: "row".') }
    },
    objectRows: {
      pure: !0, count: Vs, getItem: Hs, appendData: Gs
    },
    keyedColumns: {
      pure: !0, count() { const t = this._source.dimensionsDefine[0].name; const e = this._data[t]; return e ? e.length : 0 }, getItem(t) { for (var e = [], n = this._source.dimensionsDefine, i = 0; i < n.length; i++) { const r = this._data[n[i].name]; e.push(r ? r[t] : null) } return e }, appendData(t) { const e = this._data; f(t, function (t, n) { for (let i = e[n] || (e[n] = []), r = 0; r < (t || []).length; r++)i.push(t[r]) }) }
    },
    original: {count: Vs, getItem: Hs, appendData: Gs},
    typedArray: {
      persistent: !1, pure: !0, count() { return this._data ? this._data.length / this._dimSize : 0 }, getItem(t, e) { t -= this._offset, e = e || []; for (let n = this._dimSize * t, i = 0; i < this._dimSize; i++)e[i] = this._data[n + i]; return e }, appendData(t) { this._data = t }, clean() { this._offset += this.count(), this._data = null }
    }
  }; var i_ = {
    arrayRows: Ws, objectRows(t, e, n, i) { return n != null ? t[i] : t }, keyedColumns: Ws, original(t, e, n) { const i = Qi(t); return n != null && i instanceof Array ? i[n] : i }, typedArray: Ws
  }; const r_ = {
    arrayRows: Xs, objectRows(t, e) { return Ys(t[e], this._dimensionInfos[e]) }, keyedColumns: Xs, original(t, e, n, i) { const r = t && (t.value == null ? t : t.value); return !this._rawData.pure && Ji(t) && (this.hasItemOption = !0), Ys(r instanceof Array ? r[i] : r, this._dimensionInfos[e]) }, typedArray(t, e, n, i) { return t[i] }
  }; const a_ = /\{@(.+?)\}/g; const o_ = {
    getDataParams(t, e) {
      const n = this.getData(e); const i = this.getRawValue(t, e); const r = n.getRawIndex(t); const a = n.getName(t); const o = n.getRawDataItem(t); const s = n.getItemVisual(t, 'color'); const l = n.getItemVisual(t, 'borderColor'); const u = this.ecModel.getComponent('tooltip'); const h = u && u.get('renderMode'); const c = hr(h); const d = this.mainType; const f = d === 'series'; const p = n.userOutput; return {
        componentType: d, componentSubType: this.subType, componentIndex: this.componentIndex, seriesType: f ? this.subType : null, seriesIndex: this.seriesIndex, seriesId: f ? this.id : null, seriesName: f ? this.name : null, name: a, dataIndex: r, data: o, dataType: e, value: i, color: s, borderColor: l, dimensionNames: p ? p.dimensionNames : null, encode: p ? p.encode : null, marker: Fo({color: s, renderMode: c}), $vars: ['seriesName', 'name', 'value']
      }
    },
    getFormattedLabel(t, e, n, i, r) { e = e || 'normal'; const a = this.getData(n); const o = a.getItemModel(t); const s = this.getDataParams(t, n); i != null && s.value instanceof Array && (s.value = s.value[i]); const l = o.get(e === 'normal' ? [r || 'label', 'formatter'] : [e, r || 'label', 'formatter']); if (typeof l === 'function') return s.status = e, s.dimensionIndex = i, l(s); if (typeof l === 'string') { const u = Ro(l, s); return u.replace(a_, function (e, n) { const i = n.length; return n.charAt(0) === '[' && n.charAt(i - 1) === ']' && (n = +n.slice(1, i - 1)), Us(a, t, n) }) } },
    getRawValue(t, e) { return Us(this.getData(e), t) },
    formatTooltip() {}
  }; const s_ = Zs.prototype; s_.perform = function (t) { function e(t) { return !(t >= 1) && (t = 1), t } const n = this._upstream; const i = t && t.skip; if (this._dirty && n) { const r = this.context; r.data = r.outputData = n.context.outputData } this.__pipeline && (this.__pipeline.currentTask = this); let a; this._plan && !i && (a = this._plan(this.context)); const o = e(this._modBy); const s = this._modDataCount || 0; const l = e(t && t.modBy); const u = t && t.modDataCount || 0; (o !== l || s !== u) && (a = 'reset'); let h; (this._dirty || a === 'reset') && (this._dirty = !1, h = $s(this, i)), this._modBy = l, this._modDataCount = u; const c = t && t.step; if (this._dueEnd = n ? n._outputDueEnd : this._count ? this._count(this.context) : 1 / 0, this._progress) { const d = this._dueIndex; const f = Math.min(c != null ? this._dueIndex + c : 1 / 0, this._dueEnd); if (!i && (h || f > d)) { const p = this._progress; if (x(p)) for (let g = 0; g < p.length; g++)Ks(this, p[g], d, f, l, u); else Ks(this, p, d, f, l, u) } this._dueIndex = f; const v = this._settedOutputEnd != null ? this._settedOutputEnd : f; this._outputDueEnd = v } else this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd; return this.unfinished() }; var l_ = (function () { function t() { return n > i ? i++ : null } function e() { const t = i % o * r + Math.ceil(i / o); const e = i >= n ? null : a > t ? t : i; return i++, e } let n; let i; let r; let a; let o; var s = {reset(l, u, h, c) { i = l, n = u, r = h, a = c, o = Math.ceil(a / r), s.next = r > 1 && a > 0 ? e : t }}; return s }()); s_.dirty = function () { this._dirty = !0, this._onDirty && this._onDirty(this.context) }, s_.unfinished = function () { return this._progress && this._dueIndex < this._dueEnd }, s_.pipe = function (t) { (this._downstream !== t || this._dirty) && (this._downstream = t, t._upstream = this, t.dirty()) }, s_.dispose = function () { this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0) }, s_.getUpstream = function () { return this._upstream }, s_.getDownstream = function () { return this._downstream }, s_.setOutputEnd = function (t) { this._outputDueEnd = this._settedOutputEnd = t }; const u_ = ar(); var h_ = Sy.extend({
    type: 'series.__base__',
    seriesIndex: 0,
    coordinateSystem: null,
    defaultOption: null,
    legendVisualProvider: null,
    visualColorAccessPath: 'itemStyle.color',
    visualBorderColorAccessPath: 'itemStyle.borderColor',
    layoutMode: null,
    init(t, e, n) { this.seriesIndex = this.componentIndex, this.dataTask = js({count: tl, reset: el}), this.dataTask.context = {model: this}, this.mergeDefaultAndTheme(t, n), ns(this); const i = this.getInitialData(t, n); il(i, this), this.dataTask.context.data = i, u_(this).dataBeforeProcessed = i, Qs(this) },
    mergeDefaultAndTheme(t, e) { const n = this.layoutMode; const i = n ? jo(t) : {}; let a = this.subType; Sy.hasClass(a) && (a += 'Series'), r(t, e.getTheme().get(this.subType)), r(t, this.getDefaultOption()), $i(t, 'label', ['show']), this.fillDataTextStyle(t.data), n && qo(t, i, n) },
    mergeOption(t, e) { t = r(this.option, t, !0), this.fillDataTextStyle(t.data); const n = this.layoutMode; n && qo(this.option, t, n), ns(this); const i = this.getInitialData(t, e); il(i, this), this.dataTask.dirty(), this.dataTask.context.data = i, u_(this).dataBeforeProcessed = i, Qs(this) },
    fillDataTextStyle(t) { if (t && !I(t)) for (let e = ['show'], n = 0; n < t.length; n++)t[n] && t[n].label && $i(t[n], 'label', e) },
    getInitialData() {},
    appendData(t) { const e = this.getRawData(); e.appendData(t.data) },
    getData(t) { const e = al(this); if (e) { const n = e.context.data; return t == null ? n : n.getLinkedData(t) } return u_(this).data },
    setData(t) { const e = al(this); if (e) { const n = e.context; n.data !== t && e.modifyOutputEnd && e.setOutputEnd(t.count()), n.outputData = t, e !== this.dataTask && (n.data = t) }u_(this).data = t },
    getSource() { return ts(this) },
    getRawData() { return u_(this).dataBeforeProcessed },
    getBaseAxis() { const t = this.coordinateSystem; return t && t.getBaseAxis && t.getBaseAxis() },
    formatTooltip(t, e, n, i) {
      function r(n) {
        function r(t, n) {
          const r = c.getDimensionInfo(n); if (r && r.otherDims.tooltip !== !1) {
            const d = r.type; const f = `sub${o.seriesIndex}at${h}`; const p = Fo({
              color: y, type: 'subItem', renderMode: i, markerId: f
            }); const g = typeof p === 'string' ? p : p.content; const v = (a ? `${g + zo(r.displayName || '-')}: ` : '') + zo(d === 'ordinal' ? `${t}` : d === 'time' ? e ? '' : Ho('yyyy/MM/dd hh:mm:ss', t) : Bo(t)); v && s.push(v), l && (u[f] = y, ++h)
          }
        } var a = g(n, function (t, e, n) { const i = c.getDimensionInfo(n); return t |= i && i.tooltip !== !1 && i.displayName != null }, 0); var s = []; d.length ? f(d, function (e) { r(Us(c, t, e), e) }) : f(n, r); const p = a ? l ? '\n' : '<br/>' : ''; const
          v = p + s.join(p || ', '); return {renderMode: i, content: v, style: u}
      } function a(t) { return {renderMode: i, content: zo(Bo(t)), style: u} } var o = this; i = i || 'html'; const s = i === 'html' ? '<br/>' : '\n'; var l = i === 'richText'; var u = {}; var h = 0; var c = this.getData(); var d = c.mapDimension('defaultedTooltip', !0); const p = d.length; const v = this.getRawValue(t); const m = x(v); var
        y = c.getItemVisual(t, 'color'); S(y) && y.colorStops && (y = (y.colorStops[0] || {}).color), y = y || 'transparent'; const _ = p > 1 || m && !p ? r(v) : a(p ? Us(c, t, d[0]) : m ? v[0] : v); const w = _.content; const b = `${o.seriesIndex}at${h}`; const M = Fo({
        color: y, type: 'item', renderMode: i, markerId: b
      }); u[b] = y, ++h; const I = c.getName(t); let T = this.name; nr(this) || (T = ''), T = T ? zo(T) + (e ? ': ' : s) : ''; const C = typeof M === 'string' ? M : M.content; const D = e ? C + T + w : T + C + (I ? `${zo(I)}: ${w}` : w); return {html: D, markers: u}
    },
    isAnimationEnabled() { if (Hf.node) return !1; let t = this.getShallow('animation'); return t && this.getData().count() > this.getShallow('animationThreshold') && (t = !1), t },
    restoreData() { this.dataTask.dirty() },
    getColorFromPalette(t, e, n) { const i = this.ecModel; let r = Cy.getColorFromPalette.call(this, t, e, n); return r || (r = i.getColorFromPalette(t, e, n)), r },
    coordDimToDataDim(t) { return this.getRawData().mapDimension(t, !0) },
    getProgressive() { return this.get('progressive') },
    getProgressiveThreshold() { return this.get('progressiveThreshold') },
    getAxisTooltipData: null,
    getTooltipPosition: null,
    pipeTask: null,
    preventIncremental: null,
    pipelineContext: null
  }); c(h_, o_), c(h_, Cy); var c_ = function () { this.group = new tg(), this.uid = fo('viewComponent') }; c_.prototype = {
    constructor: c_, init() {}, render() {}, dispose() {}, filterForExposedEvent: null
  }; const d_ = c_.prototype; d_.updateView = d_.updateLayout = d_.updateVisual = function () {}, fr(c_), mr(c_, {registerWhenExtend: !0}); const f_ = function () { const t = ar(); return function (e) { const n = t(e); const i = e.pipelineContext; const r = n.large; const a = n.progressiveRender; const o = n.large = i.large; const s = n.progressiveRender = i.progressiveRender; return !!(r ^ o || a ^ s) && 'reset' } }; var p_ = ar(); var g_ = f_(); ol.prototype = {
    type: 'chart', init() {}, render() {}, highlight(t, e, n, i) { ll(t.getData(), i, 'emphasis') }, downplay(t, e, n, i) { ll(t.getData(), i, 'normal') }, remove() { this.group.removeAll() }, dispose() {}, incrementalPrepareRender: null, incrementalRender: null, updateTransform: null, filterForExposedEvent: null
  }; const v_ = ol.prototype; v_.updateView = v_.updateLayout = v_.updateVisual = function (t, e, n, i) { this.render(t, e, n, i) }, fr(ol, ['dispose']), mr(ol, {registerWhenExtend: !0}), ol.markUpdateMethod = function (t, e) { p_(t).updateMethod = e }; var m_ = {incrementalPrepareRender: {progress(t, e) { e.view.incrementalRender(t, e.model, e.ecModel, e.api, e.payload) }}, render: {forceFirstProgress: !0, progress(t, e) { e.view.render(e.model, e.ecModel, e.api, e.payload) }}}; var y_ = '\x00__throttleOriginMethod'; var __ = '\x00__throttleRate'; var x_ = '\x00__throttleType'; const w_ = {createOnAllSeries: !0, performRawSeries: !0, reset(t, e) { const n = t.getData(); const i = (t.visualColorAccessPath || 'itemStyle.color').split('.'); let r = t.get(i); const a = !w(r) || r instanceof Bm ? null : r; (!r || a) && (r = t.getColorFromPalette(t.name, null, e.getSeriesCount())), n.setVisual('color', r); const o = (t.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.'); const s = t.get(o); if (n.setVisual('borderColor', s), !e.isSeriesFiltered(t)) { a && n.each(function (e) { n.setItemVisual(e, 'color', a(t.getDataParams(e))) }); const l = function (t, e) { const n = t.getItemModel(e); const r = n.get(i, !0); const a = n.get(o, !0); r != null && t.setItemVisual(e, 'color', r), a != null && t.setItemVisual(e, 'borderColor', a) }; return {dataEach: n.hasItemOption ? l : null} } }}; const b_ = {
    legend: {selector: {all: '全选', inverse: '反选'}},
    toolbox: {
      brush: {
        title: {
          rect: '矩形选择', polygon: '圈选', lineX: '横向选择', lineY: '纵向选择', keep: '保持选择', clear: '清除选择'
        }
      },
      dataView: {title: '数据视图', lang: ['数据视图', '关闭', '刷新']},
      dataZoom: {title: {zoom: '区域缩放', back: '区域缩放还原'}},
      magicType: {
        title: {
          line: '切换为折线图', bar: '切换为柱状图', stack: '切换为堆叠', tiled: '切换为平铺'
        }
      },
      restore: {title: '还原'},
      saveAsImage: {title: '保存为图片', lang: ['右键另存为图片']}
    },
    series: {
      typeNames: {
        pie: '饼图', bar: '柱状图', line: '折线图', scatter: '散点图', effectScatter: '涟漪散点图', radar: '雷达图', tree: '树图', treemap: '矩形树图', boxplot: '箱型图', candlestick: 'K线图', k: 'K线图', heatmap: '热力图', map: '地图', parallel: '平行坐标图', lines: '线图', graph: '关系图', sankey: '桑基图', funnel: '漏斗图', gauge: '仪表盘图', pictorialBar: '象形柱图', themeRiver: '主题河流图', sunburst: '旭日图'
      }
    },
    aria: {
      general: {withTitle: '这是一个关于“{title}”的图表。', withoutTitle: '这是一个图表，'},
      series: {
        single: {prefix: '', withName: '图表类型是{seriesType}，表示{seriesName}。', withoutName: '图表类型是{seriesType}。'},
        multiple: {
          prefix: '它由{seriesCount}个图表系列组成。', withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，', withoutName: '第{seriesId}个系列是一个{seriesType}，', separator: {middle: '；', end: '。'}
        }
      },
      data: {
        allData: '其数据是——', partialData: '其中，前{displayCnt}项是——', withName: '{name}的数据是{value}', withoutName: '{value}', separator: {middle: '，', end: ''}
      }
    }
  }; var S_ = function (t, e) { function n(t, e) { if (typeof t !== 'string') return t; let n = t; return f(e, function (t, e) { n = n.replace(new RegExp(`\\{\\s*${e}\\s*\\}`, 'g'), t) }), n } function i(t) { const e = o.get(t); if (e == null) { for (var n = t.split('.'), i = b_.aria, r = 0; r < n.length; ++r)i = i[n[r]]; return i } return e } function r() { let t = e.getModel('title').option; return t && t.length && (t = t[0]), t && t.text } function a(t) { return b_.series.typeNames[t] || '自定义图' } var o = e.getModel('aria'); if (o.get('show')) { if (o.get('description')) return void t.setAttribute('aria-label', o.get('description')); let s = 0; e.eachSeries(function () { ++s }, this); let l; const u = o.get('data.maxCount') || 10; const h = o.get('series.maxCount') || 10; const c = Math.min(s, h); if (!(s < 1)) { const d = r(); l = d ? n(i('general.withTitle'), {title: d}) : i('general.withoutTitle'); const p = []; const g = s > 1 ? 'series.multiple.prefix' : 'series.single.prefix'; l += n(i(g), {seriesCount: s}), e.eachSeries(function (t, e) { if (c > e) { let r; const o = t.get('name'); const l = `series.${s > 1 ? 'multiple' : 'single'}.`; r = i(o ? `${l}withName` : `${l}withoutName`), r = n(r, {seriesId: t.seriesIndex, seriesName: t.get('name'), seriesType: a(t.subType)}); const h = t.getData(); window.data = h, r += h.count() > u ? n(i('data.partialData'), {displayCnt: u}) : i('data.allData'); for (var d = [], f = 0; f < h.count(); f++) if (u > f) { const g = h.getName(f); const v = Us(h, f); d.push(n(i(g ? 'data.withName' : 'data.withoutName'), {name: g, value: v})) }r += d.join(i('data.separator.middle')) + i('data.separator.end'), p.push(r) } }), l += p.join(i('series.multiple.separator.middle')) + i('series.multiple.separator.end'), t.setAttribute('aria-label', l) } } }; const M_ = Math.PI; const I_ = function (t, e) {
    e = e || {}, s(e, {
      text: 'loading', color: '#c23531', textColor: '#000', maskColor: 'rgba(255, 255, 255, 0.8)', zlevel: 0
    }); const n = new Cm({style: {fill: e.maskColor}, zlevel: e.zlevel, z: 1e4}); const i = new Lm({
      shape: {startAngle: -M_ / 2, endAngle: -M_ / 2 + 0.1, r: 10}, style: {stroke: e.color, lineCap: 'round', lineWidth: 5}, zlevel: e.zlevel, z: 10001
    }); const r = new Cm({
      style: {
        fill: 'none', text: e.text, textPosition: 'right', textDistance: 10, textFill: e.textColor
      },
      zlevel: e.zlevel,
      z: 10001
    }); i.animateShape(!0).when(1e3, {endAngle: 3 * M_ / 2}).start('circularInOut'), i.animateShape(!0).when(1e3, {startAngle: 3 * M_ / 2}).delay(300).start('circularInOut'); const a = new tg(); return a.add(i), a.add(r), a.add(n), a.resize = function () {
      const e = t.getWidth() / 2; const a = t.getHeight() / 2; i.setShape({cx: e, cy: a}); const o = i.shape.r; r.setShape({
        x: e - o, y: a - o, width: 2 * o, height: 2 * o
      }), n.setShape({
        x: 0, y: 0, width: t.getWidth(), height: t.getHeight()
      })
    }, a.resize(), a
  }; const T_ = fl.prototype; T_.restoreData = function (t, e) { t.restoreData(e), this._stageTaskMap.each(function (t) { const e = t.overallTask; e && e.dirty() }) }, T_.getPerformArgs = function (t, e) { if (t.__pipeline) { const n = this._pipelineMap.get(t.__pipeline.id); const i = n.context; const r = !e && n.progressiveEnabled && (!i || i.progressiveRender) && t.__idxInPipeline > n.blockIndex; const a = r ? n.step : null; const o = i && i.modDataCount; const s = o != null ? Math.ceil(o / a) : null; return {step: a, modBy: s, modDataCount: o} } }, T_.getPipeline = function (t) { return this._pipelineMap.get(t) }, T_.updateStreamModes = function (t, e) { const n = this._pipelineMap.get(t.uid); const i = t.getData(); const r = i.count(); const a = n.progressiveEnabled && e.incrementalPrepareRender && r >= n.threshold; const o = t.get('large') && r >= t.get('largeThreshold'); const s = t.get('progressiveChunkMode') === 'mod' ? r : null; t.pipelineContext = n.context = {progressiveRender: a, modDataCount: s, large: o} }, T_.restorePipelines = function (t) {
    const e = this; const n = e._pipelineMap = N(); t.eachSeries(function (t) {
      const i = t.getProgressive(); const r = t.uid; n.set(r, {
        id: r, head: null, tail: null, threshold: t.getProgressiveThreshold(), progressiveEnabled: i && !(t.preventIncremental && t.preventIncremental()), blockIndex: -1, step: Math.round(i || 700), count: 0
      }), Il(e, t, t.dataTask)
    })
  }, T_.prepareStageTasks = function () { const t = this._stageTaskMap; const e = this.ecInstance.getModel(); const n = this.api; f(this._allHandlers, function (i) { const r = t.get(i.uid) || t.set(i.uid, []); i.reset && gl(this, i, r, e, n), i.overallReset && vl(this, i, r, e, n) }, this) }, T_.prepareView = function (t, e, n, i) { const r = t.renderTask; const a = r.context; a.model = e, a.ecModel = n, a.api = i, r.__block = !t.incrementalPrepareRender, Il(this, e, r) }, T_.performDataProcessorTasks = function (t, e) { pl(this, this._dataProcessorHandlers, t, e, {block: !0}) }, T_.performVisualTasks = function (t, e, n) { pl(this, this._visualHandlers, t, e, n) }, T_.performSeriesTasks = function (t) { let e; t.eachSeries(function (t) { e |= t.dataTask.perform() }), this.unfinished |= e }, T_.plan = function () { this._pipelineMap.each(function (t) { let e = t.tail; do { if (e.__block) { t.blockIndex = e.__idxInPipeline; break }e = e.getUpstream() } while (e) }) }; var C_ = T_.updatePayload = function (t, e) { e !== 'remain' && (t.context.payload = e) }; var D_ = Sl(0); fl.wrapStageHandler = function (t, e) { return w(t) && (t = {overallReset: t, seriesType: Tl(t)}), t.uid = fo('stageHandler'), e && (t.visualType = e), t }; let A_; var k_ = {}; var P_ = {}; Cl(k_, Fy), Cl(P_, _s), k_.eachSeriesByType = k_.eachRawSeriesByType = function (t) { A_ = t }, k_.eachComponent = function (t) { t.mainType === 'series' && t.subType && (A_ = t.subType) }; const L_ = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF']; const O_ = {color: L_, colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], L_]}; const B_ = '#eee'; const E_ = function () {
    return {
      axisLine: {lineStyle: {color: B_}}, axisTick: {lineStyle: {color: B_}}, axisLabel: {textStyle: {color: B_}}, splitLine: {lineStyle: {type: 'dashed', color: '#aaa'}}, splitArea: {areaStyle: {color: B_}}
    }
  }; const z_ = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42']; const R_ = {
    color: z_,
    backgroundColor: '#333',
    tooltip: {axisPointer: {lineStyle: {color: B_}, crossStyle: {color: B_}, label: {color: '#000'}}},
    legend: {textStyle: {color: B_}},
    textStyle: {color: B_},
    title: {textStyle: {color: B_}},
    toolbox: {iconStyle: {normal: {borderColor: B_}}},
    dataZoom: {textStyle: {color: B_}},
    visualMap: {textStyle: {color: B_}},
    timeline: {
      lineStyle: {color: B_}, itemStyle: {normal: {color: z_[1]}}, label: {normal: {textStyle: {color: B_}}}, controlStyle: {normal: {color: B_, borderColor: B_}}
    },
    timeAxis: E_(),
    logAxis: E_(),
    valueAxis: E_(),
    categoryAxis: E_(),
    line: {symbol: 'circle'},
    graph: {color: z_},
    gauge: {title: {textStyle: {color: B_}}},
    candlestick: {
      itemStyle: {
        normal: {
          color: '#FD1050', color0: '#0CF49B', borderColor: '#FD1050', borderColor0: '#0CF49B'
        }
      }
    }
  }; R_.categoryAxis.splitLine.show = !1, Sy.extend({
    type: 'dataset',
    defaultOption: {
      seriesLayoutBy: By, sourceHeader: null, dimensions: null, source: null
    },
    optionUpdated() { Jo(this) }
  }), c_.extend({type: 'dataset'}); const N_ = $r.extend({
    type: 'ellipse',
    shape: {
      cx: 0, cy: 0, rx: 0, ry: 0
    },
    buildPath(t, e) { const n = 0.5522848; const i = e.cx; const r = e.cy; const a = e.rx; const o = e.ry; const s = a * n; const l = o * n; t.moveTo(i - a, r), t.bezierCurveTo(i - a, r - l, i - s, r - o, i, r - o), t.bezierCurveTo(i + s, r - o, i + a, r - l, i + a, r), t.bezierCurveTo(i + a, r + l, i + s, r + o, i, r + o), t.bezierCurveTo(i - s, r + o, i - a, r + l, i - a, r), t.closePath() }
  }); var F_ = /[\s,]+/; Al.prototype.parse = function (t, e) {
    e = e || {}; const n = Dl(t); if (!n) throw new Error('Illegal svg'); let i = new tg(); this._root = i; const r = n.getAttribute('viewBox') || ''; let a = parseFloat(n.getAttribute('width') || e.width); let o = parseFloat(n.getAttribute('height') || e.height); isNaN(a) && (a = null), isNaN(o) && (o = null), Ol(n, i, null, !0); for (let s = n.firstChild; s;) this._parseNode(s, i), s = s.nextSibling; let l; let u; if (r) {
      const h = B(r).split(F_); h.length >= 4 && (l = {
        x: parseFloat(h[0] || 0), y: parseFloat(h[1] || 0), width: parseFloat(h[2]), height: parseFloat(h[3])
      })
    } if (l && a != null && o != null && (u = Rl(l, a, o), !e.ignoreViewBox)) { const c = i; i = new tg(), i.add(c), c.scale = u.scale.slice(), c.position = u.position.slice() } return e.ignoreRootClip || a == null || o == null || i.setClipPath(new Cm({
      shape: {
        x: 0, y: 0, width: a, height: o
      }
    })), {
      root: i, width: a, height: o, viewBoxRect: l, viewBoxTransform: u
    }
  }, Al.prototype._parseNode = function (t, e) { const n = t.nodeName.toLowerCase(); n === 'defs' ? this._isDefine = !0 : n === 'text' && (this._isText = !0); let i; if (this._isDefine) { var r = H_[n]; if (r) { const a = r.call(this, t); const o = t.getAttribute('id'); o && (this._defs[o] = a) } } else { var r = V_[n]; r && (i = r.call(this, t, e), e.add(i)) } for (let s = t.firstChild; s;)s.nodeType === 1 && this._parseNode(s, i), s.nodeType === 3 && this._isText && this._parseText(s, i), s = s.nextSibling; n === 'defs' ? this._isDefine = !1 : n === 'text' && (this._isText = !1) }, Al.prototype._parseText = function (t, e) { if (t.nodeType === 1) { const n = t.getAttribute('dx') || 0; const i = t.getAttribute('dy') || 0; this._textX += parseFloat(n), this._textY += parseFloat(i) } const r = new gm({style: {text: t.textContent, transformText: !0}, position: [this._textX || 0, this._textY || 0]}); Pl(e, r), Ol(t, r, this._defs); const a = r.style.fontSize; a && a < 9 && (r.style.fontSize = 9, r.scale = r.scale || [1, 1], r.scale[0] *= a / 9, r.scale[1] *= a / 9); const o = r.getBoundingRect(); return this._textX += o.width, e.add(r), r }; var V_ = {
    g(t, e) { const n = new tg(); return Pl(e, n), Ol(t, n, this._defs), n },
    rect(t, e) {
      const n = new Cm(); return Pl(e, n), Ol(t, n, this._defs), n.setShape({
        x: parseFloat(t.getAttribute('x') || 0), y: parseFloat(t.getAttribute('y') || 0), width: parseFloat(t.getAttribute('width') || 0), height: parseFloat(t.getAttribute('height') || 0)
      }), n
    },
    circle(t, e) { const n = new vm(); return Pl(e, n), Ol(t, n, this._defs), n.setShape({cx: parseFloat(t.getAttribute('cx') || 0), cy: parseFloat(t.getAttribute('cy') || 0), r: parseFloat(t.getAttribute('r') || 0)}), n },
    line(t, e) {
      const n = new Am(); return Pl(e, n), Ol(t, n, this._defs), n.setShape({
        x1: parseFloat(t.getAttribute('x1') || 0), y1: parseFloat(t.getAttribute('y1') || 0), x2: parseFloat(t.getAttribute('x2') || 0), y2: parseFloat(t.getAttribute('y2') || 0)
      }), n
    },
    ellipse(t, e) {
      const n = new N_(); return Pl(e, n), Ol(t, n, this._defs), n.setShape({
        cx: parseFloat(t.getAttribute('cx') || 0), cy: parseFloat(t.getAttribute('cy') || 0), rx: parseFloat(t.getAttribute('rx') || 0), ry: parseFloat(t.getAttribute('ry') || 0)
      }), n
    },
    polygon(t, e) { let n = t.getAttribute('points'); n && (n = Ll(n)); const i = new Sm({shape: {points: n || []}}); return Pl(e, i), Ol(t, i, this._defs), i },
    polyline(t, e) { const n = new $r(); Pl(e, n), Ol(t, n, this._defs); let i = t.getAttribute('points'); i && (i = Ll(i)); const r = new Mm({shape: {points: i || []}}); return r },
    image(t, e) {
      const n = new Mi(); return Pl(e, n), Ol(t, n, this._defs), n.setStyle({
        image: t.getAttribute('xlink:href'), x: t.getAttribute('x'), y: t.getAttribute('y'), width: t.getAttribute('width'), height: t.getAttribute('height')
      }), n
    },
    text(t, e) { const n = t.getAttribute('x') || 0; const i = t.getAttribute('y') || 0; const r = t.getAttribute('dx') || 0; const a = t.getAttribute('dy') || 0; this._textX = parseFloat(n) + parseFloat(r), this._textY = parseFloat(i) + parseFloat(a); const o = new tg(); return Pl(e, o), Ol(t, o, this._defs), o },
    tspan(t, e) { const n = t.getAttribute('x'); const i = t.getAttribute('y'); n != null && (this._textX = parseFloat(n)), i != null && (this._textY = parseFloat(i)); const r = t.getAttribute('dx') || 0; const a = t.getAttribute('dy') || 0; const o = new tg(); return Pl(e, o), Ol(t, o, this._defs), this._textX += r, this._textY += a, o },
    path(t, e) { const n = t.getAttribute('d') || ''; const i = ea(n); return Pl(e, i), Ol(t, i, this._defs), i }
  }; var H_ = {lineargradient(t) { const e = parseInt(t.getAttribute('x1') || 0, 10); const n = parseInt(t.getAttribute('y1') || 0, 10); const i = parseInt(t.getAttribute('x2') || 10, 10); const r = parseInt(t.getAttribute('y2') || 0, 10); const a = new Em(e, n, i, r); return kl(t, a), a }, radialgradient() {}}; var G_ = {
    fill: 'fill', stroke: 'stroke', 'stroke-width': 'lineWidth', opacity: 'opacity', 'fill-opacity': 'fillOpacity', 'stroke-opacity': 'strokeOpacity', 'stroke-dasharray': 'lineDash', 'stroke-dashoffset': 'lineDashOffset', 'stroke-linecap': 'lineCap', 'stroke-linejoin': 'lineJoin', 'stroke-miterlimit': 'miterLimit', 'font-family': 'fontFamily', 'font-size': 'fontSize', 'font-style': 'fontStyle', 'font-weight': 'fontWeight', 'text-align': 'textAlign', 'alignment-baseline': 'textBaseline'
  }; var W_ = /url\(\s*#(.*?)\)/; var X_ = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.e,]*)\)/g; var Y_ = /([^\s:;]+)\s*:\s*([^:;]+)/g; const U_ = N(); var q_ = {
    registerMap(t, e, n) {
      let i
      return x(e) ? i = e : e.svg ? i = [{type: 'svg', source: e.svg, specialAreas: e.specialAreas}] : (e.geoJson && !e.features && (n = e.specialAreas, e = e.geoJson), i = [{type: 'geoJSON', source: e, specialAreas: n}]), f(i, function (t) { let e = t.type; e === 'geoJson' && (e = t.type = 'geoJSON'); const n = j_[e]; n(t) }), U_.set(t, i)
    },
    retrieveMap(t) { return U_.get(t) }
  }; var j_ = {geoJSON(t) { const e = t.source; t.geoJSON = b(e) ? typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(e) : new Function(`return (${e});`)() : e }, svg(t) { t.svgXML = Dl(t.source) }}; var Z_ = O; var K_ = f; var $_ = w; var Q_ = S; var J_ = Sy.parseClassType; const tx = '4.6.0'; const ex = {zrender: '4.2.0'}; const nx = 1; var ix = 1e3; const rx = 800; const ax = 900; const ox = 5e3; var sx = 1e3; const lx = 1100; const ux = 2e3; var hx = 3e3; const cx = 3500; const dx = 4e3; const fx = 5e3; const px = {
    PROCESSOR: {FILTER: ix, SERIES_FILTER: rx, STATISTIC: ox},
    VISUAL: {
      LAYOUT: sx, PROGRESSIVE_LAYOUT: lx, GLOBAL: ux, CHART: hx, POST_CHART_LAYOUT: cx, COMPONENT: dx, BRUSH: fx
    }
  }; var gx = '__flagInMainProcess'; var vx = '__optionUpdated'; var mx = /^[a-zA-Z0-9_]+$/; Fl.prototype.on = Nl('on', !0), Fl.prototype.off = Nl('off', !0), Fl.prototype.one = Nl('one', !0), c(Fl, up); const yx = Vl.prototype; yx._onframe = function () { if (!this._disposed) { const t = this._scheduler; if (this[vx]) { const e = this[vx].silent; this[gx] = !0, Gl(this), _x.update.call(this), this[gx] = !1, this[vx] = !1, Ul.call(this, e), ql.call(this, e) } else if (t.unfinished) { let n = nx; const i = this._model; const r = this._api; t.unfinished = !1; do { const a = +new Date(); t.performSeriesTasks(i), t.performDataProcessorTasks(i), Xl(this, i), t.performVisualTasks(i), Jl(this, this._model, r, 'remain'), n -= +new Date() - a } while (n > 0 && t.unfinished); t.unfinished || this._zr.flush() } } }, yx.getDom = function () { return this._dom }, yx.getZr = function () { return this._zr }, yx.setOption = function (t, e, n) { if (!this._disposed) { let i; if (Q_(e) && (n = e.lazyUpdate, i = e.silent, e = e.notMerge), this[gx] = !0, !this._model || e) { const r = new ws(this._api); const a = this._theme; const o = this._model = new Fy(); o.scheduler = this._scheduler, o.init(null, null, a, r) } this._model.setOption(t, Ix), n ? (this[vx] = {silent: i}, this[gx] = !1) : (Gl(this), _x.update.call(this), this._zr.flush(), this[vx] = !1, this[gx] = !1, Ul.call(this, i), ql.call(this, i)) } }, yx.setTheme = function () { console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0') }, yx.getModel = function () { return this._model }, yx.getOption = function () { return this._model && this._model.getOption() }, yx.getWidth = function () { return this._zr.getWidth() }, yx.getHeight = function () { return this._zr.getHeight() }, yx.getDevicePixelRatio = function () { return this._zr.painter.dpr || window.devicePixelRatio || 1 }, yx.getRenderedCanvas = function (t) { if (Hf.canvasSupported) { t = t || {}, t.pixelRatio = t.pixelRatio || 1, t.backgroundColor = t.backgroundColor || this._model.get('backgroundColor'); const e = this._zr; return e.painter.getRenderedCanvas(t) } }, yx.getSvgDataUrl = function () { if (Hf.svgSupported) { const t = this._zr; const e = t.storage.getDisplayList(); return f(e, function (t) { t.stopAnimation(!0) }), t.painter.pathToDataUrl() } }, yx.getDataURL = function (t) { if (!this._disposed) { t = t || {}; const e = t.excludeComponents; const n = this._model; const i = []; const r = this; K_(e, function (t) { n.eachComponent({mainType: t}, function (t) { const e = r._componentsMap[t.__viewId]; e.group.ignore || (i.push(e), e.group.ignore = !0) }) }); const a = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(t).toDataURL(`image/${t && t.type || 'png'}`); return K_(i, function (t) { t.group.ignore = !1 }), a } }, yx.getConnectedDataURL = function (t) {
    if (!this._disposed && Hf.canvasSupported) {
      const e = this.group; const n = Math.min; const r = Math.max; const a = 1 / 0; if (Px[e]) {
        let o = a; let s = a; let l = -a; let u = -a; const h = []; const c = t && t.pixelRatio || 1; f(kx, function (a) { if (a.group === e) { const c = a.getRenderedCanvas(i(t)); const d = a.getDom().getBoundingClientRect(); o = n(d.left, o), s = n(d.top, s), l = r(d.right, l), u = r(d.bottom, u), h.push({dom: c, left: d.left, top: d.top}) } }), o *= c, s *= c, l *= c, u *= c; const d = l - o; const p = u - s; const g = Qf(); g.width = d, g.height = p; const v = Yi(g); return t.connectedBackgroundColor && v.add(new Cm({
          shape: {
            x: 0, y: 0, width: d, height: p
          },
          style: {fill: t.connectedBackgroundColor}
        })), K_(h, function (t) { const e = new Mi({style: {x: t.left * c - o, y: t.top * c - s, image: t.dom}}); v.add(e) }), v.refreshImmediately(), g.toDataURL(`image/${t && t.type || 'png'}`)
      } return this.getDataURL(t)
    }
  }, yx.convertToPixel = _(Hl, 'convertToPixel'), yx.convertFromPixel = _(Hl, 'convertFromPixel'), yx.containPixel = function (t, e) { if (!this._disposed) { let n; const i = this._model; return t = or(i, t), f(t, function (t, i) { i.indexOf('Models') >= 0 && f(t, function (t) { const r = t.coordinateSystem; if (r && r.containPoint)n |= !!r.containPoint(e); else if (i === 'seriesModels') { const a = this._chartsMap[t.__viewId]; a && a.containPoint && (n |= a.containPoint(e, t)) } }, this) }, this), !!n } }, yx.getVisual = function (t, e) { const n = this._model; t = or(n, t, {defaultMainType: 'series'}); const i = t.seriesModel; const r = i.getData(); const a = t.hasOwnProperty('dataIndexInside') ? t.dataIndexInside : t.hasOwnProperty('dataIndex') ? r.indexOfRawIndex(t.dataIndex) : null; return a != null ? r.getItemVisual(a, e) : r.getVisual(e) }, yx.getViewOfComponentModel = function (t) { return this._componentsMap[t.__viewId] }, yx.getViewOfSeriesModel = function (t) { return this._chartsMap[t.__viewId] }; var _x = {
    prepareAndUpdate(t) { Gl(this), _x.update.call(this, t) }, update(t) { const e = this._model; const n = this._api; const i = this._zr; const r = this._coordSysMgr; const a = this._scheduler; if (e) { a.restoreData(e, t), a.performSeriesTasks(e), r.create(e, n), a.performDataProcessorTasks(e, t), Xl(this, e), r.update(e, n), Kl(e), a.performVisualTasks(e, t), $l(this, e, n, t); let o = e.get('backgroundColor') || 'transparent'; if (Hf.canvasSupported)i.setBackgroundColor(o); else { const s = Ke(o); o = on(s, 'rgb'), s[3] === 0 && (o = 'transparent') }tu(e, n) } }, updateTransform(t) { const e = this._model; const n = this; const i = this._api; if (e) { const r = []; e.eachComponent(function (a, o) { const s = n.getViewOfComponentModel(o); if (s && s.__alive) if (s.updateTransform) { const l = s.updateTransform(o, e, i, t); l && l.update && r.push(s) } else r.push(s) }); const a = N(); e.eachSeries(function (r) { const o = n._chartsMap[r.__viewId]; if (o.updateTransform) { const s = o.updateTransform(r, e, i, t); s && s.update && a.set(r.uid, 1) } else a.set(r.uid, 1) }), Kl(e), this._scheduler.performVisualTasks(e, t, {setDirty: !0, dirtyMap: a}), Jl(n, e, i, t, a), tu(e, this._api) } }, updateView(t) { const e = this._model; e && (ol.markUpdateMethod(t, 'updateView'), Kl(e), this._scheduler.performVisualTasks(e, t, {setDirty: !0}), $l(this, this._model, this._api, t), tu(e, this._api)) }, updateVisual(t) { _x.update.call(this, t) }, updateLayout(t) { _x.update.call(this, t) }
  }; yx.resize = function (t) { if (!this._disposed) { this._zr.resize(t); const e = this._model; if (this._loadingFX && this._loadingFX.resize(), e) { const n = e.resetOption('media'); const i = t && t.silent; this[gx] = !0, n && Gl(this), _x.update.call(this), this[gx] = !1, Ul.call(this, i), ql.call(this, i) } } }, yx.showLoading = function (t, e) { if (!this._disposed && (Q_(t) && (e = t, t = ''), t = t || 'default', this.hideLoading(), Ax[t])) { const n = Ax[t](this._api, e); const i = this._zr; this._loadingFX = n, i.add(n) } }, yx.hideLoading = function () { this._disposed || (this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null) }, yx.makeActionFromEvent = function (t) { const e = o({}, t); return e.type = Sx[t.type], e }, yx.dispatchAction = function (t, e) { if (!this._disposed && (Q_(e) || (e = {silent: !!e}), bx[t.type] && this._model)) { if (this[gx]) return void this._pendingActions.push(t); Yl.call(this, t, e.silent), e.flush ? this._zr.flush(!0) : e.flush !== !1 && Hf.browser.weChat && this._throttledZrFlush(), Ul.call(this, e.silent), ql.call(this, e.silent) } }, yx.appendData = function (t) { if (!this._disposed) { const e = t.seriesIndex; const n = this.getModel(); const i = n.getSeriesByIndex(e); i.appendData(t), this._scheduler.unfinished = !0 } }, yx.on = Nl('on', !1), yx.off = Nl('off', !1), yx.one = Nl('one', !1); const xx = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu']; yx._initEvents = function () {
    K_(xx, function (t) {
      const e = function (e) {
        let n; const i = this.getModel(); const r = e.target; const a = t === 'globalout'; if (a)n = {}; else if (r && r.dataIndex != null) { const s = r.dataModel || i.getSeriesByIndex(r.seriesIndex); n = s && s.getDataParams(r.dataIndex, r.dataType, r) || {} } else r && r.eventData && (n = o({}, r.eventData)); if (n) {
          let l = n.componentType; let u = n.componentIndex; (l === 'markLine' || l === 'markPoint' || l === 'markArea') && (l = 'series', u = n.seriesIndex); const h = l && u != null && i.getComponent(l, u); const c = h && this[h.mainType === 'series' ? '_chartsMap' : '_componentsMap'][h.__viewId]; n.event = e, n.type = t, this._ecEventProcessor.eventInfo = {
            targetEl: r, packedEvent: n, model: h, view: c
          }, this.trigger(t, n)
        }
      }; e.zrEventfulCallAtLast = !0, this._zr.on(t, e, this)
    }, this), K_(Sx, function (t, e) { this._messageCenter.on(e, function (t) { this.trigger(e, t) }, this) }, this)
  }, yx.isDisposed = function () { return this._disposed }, yx.clear = function () { this._disposed || this.setOption({series: []}, !0) }, yx.dispose = function () { if (!this._disposed) { this._disposed = !0, lr(this.getDom(), Bx, ''); const t = this._api; const e = this._model; K_(this._componentsViews, function (n) { n.dispose(e, t) }), K_(this._chartsViews, function (n) { n.dispose(e, t) }), this._zr.dispose(), delete kx[this.id] } }, c(Vl, up), au.prototype = {
    constructor: au, normalizeQuery(t) { const e = {}; const n = {}; const i = {}; if (b(t)) { const r = J_(t); e.mainType = r.main || null, e.subType = r.sub || null } else { const a = ['Index', 'Name', 'Id']; const o = {name: 1, dataIndex: 1, dataType: 1}; f(t, function (t, r) { for (var s = !1, l = 0; l < a.length; l++) { const u = a[l]; const h = r.lastIndexOf(u); if (h > 0 && h === r.length - u.length) { const c = r.slice(0, h); c !== 'data' && (e.mainType = c, e[u.toLowerCase()] = t, s = !0) } }o.hasOwnProperty(r) && (n[r] = t, s = !0), s || (i[r] = t) }) } return {cptQuery: e, dataQuery: n, otherQuery: i} }, filter(t, e) { function n(t, e, n, i) { return t[n] == null || e[i || n] === t[n] } const i = this.eventInfo; if (!i) return !0; const r = i.targetEl; const a = i.packedEvent; const o = i.model; const s = i.view; if (!o || !s) return !0; const l = e.cptQuery; const u = e.dataQuery; return n(l, o, 'mainType') && n(l, o, 'subType') && n(l, o, 'index', 'componentIndex') && n(l, o, 'name') && n(l, o, 'id') && n(u, a, 'name') && n(u, a, 'dataIndex') && n(u, a, 'dataType') && (!s.filterForExposedEvent || s.filterForExposedEvent(t, e.otherQuery, r, a)) }, afterTrigger() { this.eventInfo = null }
  }; var bx = {}; var Sx = {}; var Mx = []; var Ix = []; var Tx = []; var Cx = []; var Dx = {}; var Ax = {}; var kx = {}; var Px = {}; var Lx = new Date() - 0; var Ox = new Date() - 0; var Bx = '_echarts_instance_'; const Ex = uu; wu(ux, w_), pu(Jy), gu(ax, t_), Su('default', I_), mu({type: 'highlight', event: 'highlight', update: 'highlight'}, V), mu({type: 'downplay', event: 'downplay', update: 'downplay'}, V), fu('light', O_), fu('dark', R_); const zx = {}; Lu.prototype = {
    constructor: Lu, add(t) { return this._add = t, this }, update(t) { return this._update = t, this }, remove(t) { return this._remove = t, this }, execute() { var t; const e = this._old; const n = this._new; const i = {}; const r = {}; const a = []; const o = []; for (Ou(e, i, a, '_oldKeyGetter', this), Ou(n, r, o, '_newKeyGetter', this), t = 0; t < e.length; t++) { var s = a[t]; var l = r[s]; if (l != null) { var u = l.length; u ? (u === 1 && (r[s] = null), l = l.shift()) : r[s] = null, this._update && this._update(l, t) } else this._remove && this._remove(t) } for (var t = 0; t < o.length; t++) { var s = o[t]; if (r.hasOwnProperty(s)) { var l = r[s]; if (l == null) continue; if (l.length) for (var h = 0, u = l.length; u > h; h++) this._add && this._add(l[h]); else this._add && this._add(l) } } }
  }; var Rx = N(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']); const Nx = S; const Fx = 'undefined'; var Vx = -1; var Hx = 'e\x00\x00'; var Gx = {
    float: typeof Float64Array === Fx ? Array : Float64Array, int: typeof Int32Array === Fx ? Array : Int32Array, ordinal: Array, number: Array, time: Array
  }; var Wx = typeof Uint32Array === Fx ? Array : Uint32Array; var Xx = typeof Int32Array === Fx ? Array : Int32Array; var Yx = typeof Uint16Array === Fx ? Array : Uint16Array; var Ux = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx']; var qx = ['_extent', '_approximateExtent', '_rawExtent']; var jx = function (t, e) { t = t || ['x', 'y']; for (var n = {}, i = [], r = {}, a = 0; a < t.length; a++) { let o = t[a]; b(o) ? o = new Nu({name: o}) : o instanceof Nu || (o = new Nu(o)); const s = o.name; o.type = o.type || 'float', o.coordDim || (o.coordDim = s, o.coordDimIndex = 0), o.otherDims = o.otherDims || {}, i.push(s), n[s] = o, o.index = a, o.createInvertedIndices && (r[s] = []) } this.dimensions = i, this._dimensionInfos = n, this.hostModel = e, this.dataType, this._indices = null, this._count = 0, this._rawCount = 0, this._storage = {}, this._nameList = [], this._idList = [], this._optionModels = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this.hasItemVisual = {}, this._itemLayouts = [], this._graphicEls = [], this._chunkSize = 1e5, this._chunkCount = 0, this._rawData, this._rawExtent = {}, this._extent = {}, this._approximateExtent = {}, this._dimensionsSummary = Bu(this), this._invertedIndicesMap = r, this._calculationInfo = {}, this.userOutput = this._dimensionsSummary.userOutput }; const Zx = jx.prototype; Zx.type = 'list', Zx.hasItemOption = !0, Zx.getDimension = function (t) { return (typeof t === 'number' || !isNaN(t) && !this._dimensionInfos.hasOwnProperty(t)) && (t = this.dimensions[t]), t }, Zx.getDimensionInfo = function (t) { return this._dimensionInfos[this.getDimension(t)] }, Zx.getDimensionsOnCoord = function () { return this._dimensionsSummary.dataDimsOnCoord.slice() }, Zx.mapDimension = function (t, e) { const n = this._dimensionsSummary; if (e == null) return n.encodeFirstDimNotExtra[t]; const i = n.encode[t]; return e === !0 ? (i || []).slice() : i && i[e] }, Zx.initData = function (t, e, n) { const i = Qo.isInstance(t) || d(t); i && (t = new Fs(t, this.dimensions.length)), this._rawData = t, this._storage = {}, this._indices = null, this._nameList = e || [], this._idList = [], this._nameRepeatCount = {}, n || (this.hasItemOption = !1), this.defaultDimValueGetter = r_[this._rawData.getSource().sourceFormat], this._dimValueGetter = n = n || this.defaultDimValueGetter, this._dimValueGetterArrayRows = r_.arrayRows, this._rawExtent = {}, this._initDataFromProvider(0, t.count()), t.pure && (this.hasItemOption = !1) }, Zx.getProvider = function () { return this._rawData }, Zx.appendData = function (t) { const e = this._rawData; const n = this.count(); e.appendData(t); let i = e.count(); e.persistent || (i += n), this._initDataFromProvider(n, i) }, Zx.appendValues = function (t, e) { for (var n = this._chunkSize, i = this._storage, r = this.dimensions, a = r.length, o = this._rawExtent, s = this.count(), l = s + Math.max(t.length, e ? e.length : 0), u = this._chunkCount, h = 0; a > h; h++) { var c = r[h]; o[c] || (o[c] = $u()), i[c] || (i[c] = []), Gu(i, this._dimensionInfos[c], n, u, l), this._chunkCount = i[c].length } for (let d = new Array(a), f = s; l > f; f++) { for (var p = f - s, g = Math.floor(f / n), v = f % n, m = 0; a > m; m++) { var c = r[m]; const y = this._dimValueGetterArrayRows(t[p] || d, c, p, m); i[c][g][v] = y; const _ = o[c]; y < _[0] && (_[0] = y), y > _[1] && (_[1] = y) }e && (this._nameList[f] = e[p]) } this._rawCount = this._count = l, this._extent = {}, Wu(this) }, Zx._initDataFromProvider = function (t, e) { if (!(t >= e)) { for (var n, i = this._chunkSize, r = this._rawData, a = this._storage, o = this.dimensions, s = o.length, l = this._dimensionInfos, u = this._nameList, h = this._idList, c = this._rawExtent, d = this._nameRepeatCount = {}, f = this._chunkCount, p = 0; s > p; p++) { var g = o[p]; c[g] || (c[g] = $u()); const v = l[g]; v.otherDims.itemName === 0 && (n = this._nameDimIdx = p), v.otherDims.itemId === 0 && (this._idDimIdx = p), a[g] || (a[g] = []), Gu(a, v, i, f, e), this._chunkCount = a[g].length } for (let m = new Array(s), y = t; e > y; y++) { m = r.getItem(y, m); for (var _ = Math.floor(y / i), x = y % i, w = 0; s > w; w++) { var g = o[w]; const b = a[g][_]; const S = this._dimValueGetter(m, g, y, w); b[x] = S; const M = c[g]; S < M[0] && (M[0] = S), S > M[1] && (M[1] = S) } if (!r.pure) { let I = u[y]; if (m && I == null) if (m.name != null)u[y] = I = m.name; else if (n != null) { const T = o[n]; const C = a[T][_]; if (C) { I = C[x]; const D = l[T].ordinalMeta; D && D.categories.length && (I = D.categories[I]) } } let A = m == null ? null : m.id; A == null && I != null && (d[I] = d[I] || 0, A = I, d[I] > 0 && (A += `__ec__${d[I]}`), d[I]++), A != null && (h[y] = A) } }!r.persistent && r.clean && r.clean(), this._rawCount = this._count = e, this._extent = {}, Wu(this) } }, Zx.count = function () { return this._count }, Zx.getIndices = function () { var t; const e = this._indices; if (e) { var n = e.constructor; const i = this._count; if (n === Array) { t = new n(i); for (var r = 0; i > r; r++)t[r] = e[r] } else t = new n(e.buffer, 0, i) } else for (var n = Fu(this), t = new n(this.count()), r = 0; r < t.length; r++)t[r] = r; return t }, Zx.get = function (t, e) { if (!(e >= 0 && e < this._count)) return 0 / 0; const n = this._storage; if (!n[t]) return 0 / 0; e = this.getRawIndex(e); const i = Math.floor(e / this._chunkSize); const r = e % this._chunkSize; const a = n[t][i]; const o = a[r]; return o }, Zx.getByRawIndex = function (t, e) { if (!(e >= 0 && e < this._rawCount)) return 0 / 0; const n = this._storage[t]; if (!n) return 0 / 0; const i = Math.floor(e / this._chunkSize); const r = e % this._chunkSize; const a = n[i]; return a[r] }, Zx._getFast = function (t, e) { const n = Math.floor(e / this._chunkSize); const i = e % this._chunkSize; const r = this._storage[t][n]; return r[i] }, Zx.getValues = function (t, e) { const n = []; x(t) || (e = t, t = this.dimensions); for (let i = 0, r = t.length; r > i; i++)n.push(this.get(t[i], e)); return n }, Zx.hasValue = function (t) { for (let e = this._dimensionsSummary.dataDimsOnCoord, n = 0, i = e.length; i > n; n++) if (isNaN(this.get(e[n], t))) return !1; return !0 }, Zx.getDataExtent = function (t) { t = this.getDimension(t); const e = this._storage[t]; const n = $u(); if (!e) return n; let i; const r = this.count(); const a = !this._indices; if (a) return this._rawExtent[t].slice(); if (i = this._extent[t]) return i.slice(); i = n; for (var o = i[0], s = i[1], l = 0; r > l; l++) { const u = this._getFast(t, this.getRawIndex(l)); o > u && (o = u), u > s && (s = u) } return i = [o, s], this._extent[t] = i, i }, Zx.getApproximateExtent = function (t) { return t = this.getDimension(t), this._approximateExtent[t] || this.getDataExtent(t) }, Zx.setApproximateExtent = function (t, e) { e = this.getDimension(e), this._approximateExtent[e] = t.slice() }, Zx.getCalculationInfo = function (t) { return this._calculationInfo[t] }, Zx.setCalculationInfo = function (t, e) { Nx(t) ? o(this._calculationInfo, t) : this._calculationInfo[t] = e }, Zx.getSum = function (t) { const e = this._storage[t]; let n = 0; if (e) for (let i = 0, r = this.count(); r > i; i++) { const a = this.get(t, i); isNaN(a) || (n += a) } return n }, Zx.getMedian = function (t) { const e = []; this.each(t, function (t) { isNaN(t) || e.push(t) }); const n = [].concat(e).sort(function (t, e) { return t - e }); const i = this.count(); return i === 0 ? 0 : i % 2 === 1 ? n[(i - 1) / 2] : (n[i / 2] + n[i / 2 - 1]) / 2 }, Zx.rawIndexOf = function (t, e) { const n = t && this._invertedIndicesMap[t]; const i = n[e]; return i == null || isNaN(i) ? Vx : i }, Zx.indexOfName = function (t) { for (let e = 0, n = this.count(); n > e; e++) if (this.getName(e) === t) return e; return -1 }, Zx.indexOfRawIndex = function (t) { if (t >= this._rawCount || t < 0) return -1; if (!this._indices) return t; const e = this._indices; const n = e[t]; if (n != null && n < this._count && n === t) return t; for (let i = 0, r = this._count - 1; r >= i;) { const a = (i + r) / 2 | 0; if (e[a] < t)i = a + 1; else { if (!(e[a] > t)) return a; r = a - 1 } } return -1 }, Zx.indicesOfNearest = function (t, e, n) { const i = this._storage; const r = i[t]; const a = []; if (!r) return a; n == null && (n = 1 / 0); for (var o = 1 / 0, s = -1, l = 0, u = 0, h = this.count(); h > u; u++) { const c = e - this.get(t, u); const d = Math.abs(c); n >= d && ((o > d || d === o && c >= 0 && s < 0) && (o = d, s = c, l = 0), c === s && (a[l++] = u)) } return a.length = l, a }, Zx.getRawIndex = Yu, Zx.getRawDataItem = function (t) { if (this._rawData.persistent) return this._rawData.getItem(this.getRawIndex(t)); for (var e = [], n = 0; n < this.dimensions.length; n++) { const i = this.dimensions[n]; e.push(this.get(i, t)) } return e }, Zx.getName = function (t) { const e = this.getRawIndex(t); return this._nameList[e] || Xu(this, this._nameDimIdx, e) || '' }, Zx.getId = function (t) { return qu(this, this.getRawIndex(t)) }, Zx.each = function (t, e, n, i) { if (this._count) { typeof t === 'function' && (i = n, n = e, e = t, t = []), n = n || i || this, t = p(ju(t), this.getDimension, this); for (let r = t.length, a = 0; a < this.count(); a++) switch (r) { case 0: e.call(n, a); break; case 1: e.call(n, this.get(t[0], a), a); break; case 2: e.call(n, this.get(t[0], a), this.get(t[1], a), a); break; default: for (var o = 0, s = []; r > o; o++)s[o] = this.get(t[o], a); s[o] = a, e.apply(n, s) } } }, Zx.filterSelf = function (t, e, n, i) { if (this._count) { typeof t === 'function' && (i = n, n = e, e = t, t = []), n = n || i || this, t = p(ju(t), this.getDimension, this); for (var r = this.count(), a = Fu(this), o = new a(r), s = [], l = t.length, u = 0, h = t[0], c = 0; r > c; c++) { var d; const f = this.getRawIndex(c); if (l === 0)d = e.call(n, c); else if (l === 1) { const g = this._getFast(h, f); d = e.call(n, g, c) } else { for (var v = 0; l > v; v++)s[v] = this._getFast(h, f); s[v] = c, d = e.apply(n, s) }d && (o[u++] = f) } return r > u && (this._indices = o), this._count = u, this._extent = {}, this.getRawIndex = this._indices ? Uu : Yu, this } }, Zx.selectRange = function (t) { if (this._count) { const e = []; for (var n in t)t.hasOwnProperty(n) && e.push(n); const i = e.length; if (i) { const r = this.count(); const a = Fu(this); const o = new a(r); let s = 0; const l = e[0]; const u = t[l][0]; const h = t[l][1]; let c = !1; if (!this._indices) { let d = 0; if (i === 1) { for (var f = this._storage[e[0]], p = 0; p < this._chunkCount; p++) for (var g = f[p], v = Math.min(this._count - p * this._chunkSize, this._chunkSize), m = 0; v > m; m++) { var y = g[m]; (y >= u && h >= y || isNaN(y)) && (o[s++] = d), d++ }c = !0 } else if (i === 2) { for (var f = this._storage[l], _ = this._storage[e[1]], x = t[e[1]][0], w = t[e[1]][1], p = 0; p < this._chunkCount; p++) for (var g = f[p], b = _[p], v = Math.min(this._count - p * this._chunkSize, this._chunkSize), m = 0; v > m; m++) { var y = g[m]; const S = b[m]; (y >= u && h >= y || isNaN(y)) && (S >= x && w >= S || isNaN(S)) && (o[s++] = d), d++ }c = !0 } } if (!c) if (i === 1) for (var m = 0; r > m; m++) { var M = this.getRawIndex(m); var y = this._getFast(l, M); (y >= u && h >= y || isNaN(y)) && (o[s++] = M) } else for (var m = 0; r > m; m++) { for (var I = !0, M = this.getRawIndex(m), p = 0; i > p; p++) { const T = e[p]; var y = this._getFast(n, M); (y < t[T][0] || y > t[T][1]) && (I = !1) }I && (o[s++] = this.getRawIndex(m)) } return r > s && (this._indices = o), this._count = s, this._extent = {}, this.getRawIndex = this._indices ? Uu : Yu, this } } }, Zx.mapArray = function (t, e, n, i) { typeof t === 'function' && (i = n, n = e, e = t, t = []), n = n || i || this; const r = []; return this.each(t, function () { r.push(e && e.apply(this, arguments)) }, n), r }, Zx.map = function (t, e, n, i) { n = n || i || this, t = p(ju(t), this.getDimension, this); const r = Zu(this, t); r._indices = this._indices, r.getRawIndex = r._indices ? Uu : Yu; for (let a = r._storage, o = [], s = this._chunkSize, l = t.length, u = this.count(), h = [], c = r._rawExtent, d = 0; u > d; d++) { for (let f = 0; l > f; f++)h[f] = this.get(t[f], d); h[l] = d; let g = e && e.apply(n, h); if (g != null) { typeof g !== 'object' && (o[0] = g, g = o); for (let v = this.getRawIndex(d), m = Math.floor(v / s), y = v % s, _ = 0; _ < g.length; _++) { const x = t[_]; const w = g[_]; const b = c[x]; const S = a[x]; S && (S[m][y] = w), w < b[0] && (b[0] = w), w > b[1] && (b[1] = w) } } } return r }, Zx.downSample = function (t, e, n, i) { for (var r = Zu(this, [t]), a = r._storage, o = [], s = Math.floor(1 / e), l = a[t], u = this.count(), h = this._chunkSize, c = r._rawExtent[t], d = new (Fu(this))(u), f = 0, p = 0; u > p; p += s) { s > u - p && (s = u - p, o.length = s); for (let g = 0; s > g; g++) { const v = this.getRawIndex(p + g); const m = Math.floor(v / h); const y = v % h; o[g] = l[m][y] } const _ = n(o); const x = this.getRawIndex(Math.min(p + i(o, _) || 0, u - 1)); const w = Math.floor(x / h); const b = x % h; l[w][b] = _, _ < c[0] && (c[0] = _), _ > c[1] && (c[1] = _), d[f++] = x } return r._count = f, r._indices = d, r.getRawIndex = Uu, r }, Zx.getItemModel = function (t) { const e = this.hostModel; return new uo(this.getRawDataItem(t), e, e && e.ecModel) }, Zx.diff = function (t) { const e = this; return new Lu(t ? t.getIndices() : [], this.getIndices(), function (e) { return qu(t, e) }, function (t) { return qu(e, t) }) }, Zx.getVisual = function (t) { const e = this._visual; return e && e[t] }, Zx.setVisual = function (t, e) { if (Nx(t)) for (const n in t)t.hasOwnProperty(n) && this.setVisual(n, t[n]); else this._visual = this._visual || {}, this._visual[t] = e }, Zx.setLayout = function (t, e) { if (Nx(t)) for (const n in t)t.hasOwnProperty(n) && this.setLayout(n, t[n]); else this._layout[t] = e }, Zx.getLayout = function (t) { return this._layout[t] }, Zx.getItemLayout = function (t) { return this._itemLayouts[t] }, Zx.setItemLayout = function (t, e, n) { this._itemLayouts[t] = n ? o(this._itemLayouts[t] || {}, e) : e }, Zx.clearItemLayouts = function () { this._itemLayouts.length = 0 }, Zx.getItemVisual = function (t, e, n) { const i = this._itemVisuals[t]; const r = i && i[e]; return r != null || n ? r : this.getVisual(e) }, Zx.setItemVisual = function (t, e, n) { const i = this._itemVisuals[t] || {}; const r = this.hasItemVisual; if (this._itemVisuals[t] = i, Nx(e)) for (const a in e)e.hasOwnProperty(a) && (i[a] = e[a], r[a] = !0); else i[e] = n, r[e] = !0 }, Zx.clearAllVisual = function () { this._visual = {}, this._itemVisuals = [], this.hasItemVisual = {} }; const Kx = function (t) { t.seriesIndex = this.seriesIndex, t.dataIndex = this.dataIndex, t.dataType = this.dataType }; Zx.setItemGraphicEl = function (t, e) { const n = this.hostModel; e && (e.dataIndex = t, e.dataType = this.dataType, e.seriesIndex = n && n.seriesIndex, e.type === 'group' && e.traverse(Kx, e)), this._graphicEls[t] = e }, Zx.getItemGraphicEl = function (t) { return this._graphicEls[t] }, Zx.eachItemGraphicEl = function (t, e) { f(this._graphicEls, function (n, i) { n && t && t.call(e, n, i) }) }, Zx.cloneShallow = function (t) { if (!t) { const e = p(this.dimensions, this.getDimensionInfo, this); t = new jx(e, this.hostModel) } if (t._storage = this._storage, Hu(t, this), this._indices) { const n = this._indices.constructor; t._indices = new n(this._indices) } else t._indices = null; return t.getRawIndex = t._indices ? Uu : Yu, t }, Zx.wrapMethod = function (t, e) { const n = this[t]; typeof n === 'function' && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(t), this[t] = function () { const t = n.apply(this, arguments); return e.apply(this, [t].concat(P(arguments))) }) }, Zx.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'], Zx.CHANGABLE_METHODS = ['filterSelf', 'selectRange']; var $x = function (t, e) {
    return e = e || {}, Qu(e.coordDimensions || [], t, {
      dimsDef: e.dimensionsDefine || t.dimensionsDefine, encodeDef: e.encodeDefine || t.encodeDefine, dimCount: e.dimensionsCount, encodeDefaulter: e.encodeDefaulter, generateCoord: e.generateCoord, generateCoordCount: e.generateCoordCount
    })
  }; var Qx = {
    cartesian2d(t, e, n, i) { const r = t.getReferringComponents('xAxis')[0]; const a = t.getReferringComponents('yAxis')[0]; e.coordSysDims = ['x', 'y'], n.set('x', r), n.set('y', a), ih(r) && (i.set('x', r), e.firstCategoryDimIndex = 0), ih(a) && (i.set('y', a), e.firstCategoryDimIndex == null & (e.firstCategoryDimIndex = 1)) }, singleAxis(t, e, n, i) { const r = t.getReferringComponents('singleAxis')[0]; e.coordSysDims = ['single'], n.set('single', r), ih(r) && (i.set('single', r), e.firstCategoryDimIndex = 0) }, polar(t, e, n, i) { const r = t.getReferringComponents('polar')[0]; const a = r.findAxisModel('radiusAxis'); const o = r.findAxisModel('angleAxis'); e.coordSysDims = ['radius', 'angle'], n.set('radius', a), n.set('angle', o), ih(a) && (i.set('radius', a), e.firstCategoryDimIndex = 0), ih(o) && (i.set('angle', o), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1)) }, geo(t, e) { e.coordSysDims = ['lng', 'lat'] }, parallel(t, e, n, i) { const r = t.ecModel; const a = r.getComponent('parallel', t.get('parallelIndex')); const o = e.coordSysDims = a.dimensions.slice(); f(a.parallelAxisIndex, function (t, a) { const s = r.getComponent('parallelAxis', t); const l = o[a]; n.set(l, s), ih(s) && e.firstCategoryDimIndex == null && (i.set(l, s), e.firstCategoryDimIndex = a) }) }
  }; hh.prototype.parse = function (t) { return t }, hh.prototype.getSetting = function (t) { return this._setting[t] }, hh.prototype.contain = function (t) { const e = this._extent; return t >= e[0] && t <= e[1] }, hh.prototype.normalize = function (t) { const e = this._extent; return e[1] === e[0] ? 0.5 : (t - e[0]) / (e[1] - e[0]) }, hh.prototype.scale = function (t) { const e = this._extent; return t * (e[1] - e[0]) + e[0] }, hh.prototype.unionExtent = function (t) { const e = this._extent; t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]) }, hh.prototype.unionExtentFromData = function (t, e) { this.unionExtent(t.getApproximateExtent(e)) }, hh.prototype.getExtent = function () { return this._extent.slice() }, hh.prototype.setExtent = function (t, e) { const n = this._extent; isNaN(t) || (n[0] = t), isNaN(e) || (n[1] = e) }, hh.prototype.isBlank = function () { return this._isBlank }, hh.prototype.setBlank = function (t) { this._isBlank = t }, hh.prototype.getLabel = null, fr(hh), mr(hh, {registerWhenExtend: !0}), ch.createByAxisModel = function (t) { const e = t.option; const n = e.data; const i = n && p(n, fh); return new ch({categories: i, needCollect: !i, deduplication: e.dedplication !== !1}) }; const Jx = ch.prototype; Jx.getOrdinal = function (t) { return dh(this).get(t) }, Jx.parseAndCollect = function (t) { let e; const n = this._needCollect; if (typeof t !== 'string' && !n) return t; if (n && !this._deduplication) return e = this.categories.length, this.categories[e] = t, e; const i = dh(this); return e = i.get(t), e == null && (n ? (e = this.categories.length, this.categories[e] = t, i.set(t, e)) : e = 0 / 0), e }; const tw = hh.prototype; var ew = hh.extend({
    type: 'ordinal', init(t, e) { (!t || x(t)) && (t = new ch({categories: t})), this._ordinalMeta = t, this._extent = e || [0, t.categories.length - 1] }, parse(t) { return typeof t === 'string' ? this._ordinalMeta.getOrdinal(t) : Math.round(t) }, contain(t) { return t = this.parse(t), tw.contain.call(this, t) && this._ordinalMeta.categories[t] != null }, normalize(t) { return tw.normalize.call(this, this.parse(t)) }, scale(t) { return Math.round(tw.scale.call(this, t)) }, getTicks() { for (var t = [], e = this._extent, n = e[0]; n <= e[1];)t.push(n), n++; return t }, getLabel(t) { return this.isBlank() ? void 0 : this._ordinalMeta.categories[t] }, count() { return this._extent[1] - this._extent[0] + 1 }, unionExtentFromData(t, e) { this.unionExtent(t.getApproximateExtent(e)) }, getOrdinalMeta() { return this._ordinalMeta }, niceTicks: V, niceExtent: V
  }); ew.create = function () { return new ew() }; var nw = _o; const iw = _o; var rw = hh.extend({
    type: 'interval', _interval: 0, _intervalPrecision: 2, setExtent(t, e) { const n = this._extent; isNaN(t) || (n[0] = parseFloat(t)), isNaN(e) || (n[1] = parseFloat(e)) }, unionExtent(t) { const e = this._extent; t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]), rw.prototype.setExtent.call(this, e[0], e[1]) }, getInterval() { return this._interval }, setInterval(t) { this._interval = t, this._niceExtent = this._extent.slice(), this._intervalPrecision = gh(t) }, getTicks(t) { const e = this._interval; const n = this._extent; const i = this._niceExtent; const r = this._intervalPrecision; const a = []; if (!e) return a; const o = 1e4; n[0] < i[0] && a.push(t ? iw(i[0] - e) : n[0]); for (let s = i[0]; s <= i[1] && (a.push(s), s = iw(s + e, r), s !== a[a.length - 1]);) if (a.length > o) return []; const l = a.length ? a[a.length - 1] : i[1]; return n[1] > l && a.push(t ? l + e : n[1]), a }, getMinorTicks(t) { for (var e = this.getTicks(!0), n = [], i = this.getExtent(), r = 1; r < e.length; r++) { for (var a = e[r], o = e[r - 1], s = 0, l = [], u = a - o, h = u / t; t - 1 > s;) { const c = _o(o + (s + 1) * h); c > i[0] && c < i[1] && l.push(c), s++ }n.push(l) } return n }, getLabel(t, e) { if (t == null) return ''; let n = e && e.precision; return n == null ? n = bo(t) || 0 : n === 'auto' && (n = this._intervalPrecision), t = iw(t, n, !0), Bo(t) }, niceTicks(t, e, n) { t = t || 5; const i = this._extent; let r = i[1] - i[0]; if (isFinite(r)) { r < 0 && (r = -r, i.reverse()); const a = ph(i, t, e, n); this._intervalPrecision = a.intervalPrecision, this._interval = a.interval, this._niceExtent = a.niceTickExtent } }, niceExtent(t) { const e = this._extent; if (e[0] === e[1]) if (e[0] !== 0) { const n = e[0]; t.fixMax ? e[0] -= n / 2 : (e[1] += n / 2, e[0] -= n / 2) } else e[1] = 1; const i = e[1] - e[0]; isFinite(i) || (e[0] = 0, e[1] = 1), this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval); const r = this._interval; t.fixMin || (e[0] = iw(Math.floor(e[0] / r) * r)), t.fixMax || (e[1] = iw(Math.ceil(e[1] / r) * r)) }
  }); rw.create = function () { return new rw() }; var aw = '__ec_stack_'; const ow = 0.5; const sw = typeof Float32Array !== 'undefined' ? Float32Array : Array; const lw = {
    seriesType: 'bar',
    plan: f_(),
    reset(t) {
      function e(t, e) {
        for (var n, c = t.count, d = new sw(2 * c), f = new sw(c), p = [], g = [], v = 0, m = 0; (n = t.next()) != null;)g[u] = e.get(o, n), g[1 - u] = e.get(s, n), p = i.dataToPoint(g, null, p), d[v++] = p[0], d[v++] = p[1], f[m++] = n; e.setLayout({
          largePoints: d, largeDataIndices: f, barWidth: h, valueAxisStart: Dh(r, a, !1), valueAxisHorizontal: l
        })
      } if (Th(t) && Ch(t)) { const n = t.getData(); var i = t.coordinateSystem; var r = i.getBaseAxis(); var a = i.getOtherAxis(r); var o = n.mapDimension(a.dim); var s = n.mapDimension(r.dim); var l = a.isHorizontal(); var u = l ? 0 : 1; var h = Mh(bh([t]), r, t).width; return h > ow || (h = ow), {progress: e} }
    }
  }; const uw = rw.prototype; const hw = Math.ceil; const cw = Math.floor; const dw = 1e3; const fw = 60 * dw; const pw = 60 * fw; const gw = 24 * pw; const vw = function (t, e, n, i) { for (;i > n;) { const r = n + i >>> 1; t[r][1] < e ? n = r + 1 : i = r } return n }; const mw = rw.extend({
    type: 'time', getLabel(t) { const e = this._stepLvl; const n = new Date(t); return Ho(e[0], n, this.getSetting('useUTC')) }, niceExtent(t) { const e = this._extent; if (e[0] === e[1] && (e[0] -= gw, e[1] += gw), e[1] === -1 / 0 && 1 / 0 === e[0]) { const n = new Date(); e[1] = +new Date(n.getFullYear(), n.getMonth(), n.getDate()), e[0] = e[1] - gw } this.niceTicks(t.splitNumber, t.minInterval, t.maxInterval); const i = this._interval; t.fixMin || (e[0] = _o(cw(e[0] / i) * i)), t.fixMax || (e[1] = _o(hw(e[1] / i) * i)) }, niceTicks(t, e, n) { t = t || 10; const i = this._extent; const r = i[1] - i[0]; let a = r / t; e != null && e > a && (a = e), n != null && a > n && (a = n); const o = yw.length; const s = vw(yw, a, 0, o); const l = yw[Math.min(s, o - 1)]; let u = l[1]; if (l[0] === 'year') { const h = r / u; const c = ko(h / t, !0); u *= c } const d = this.getSetting('useUTC') ? 0 : 60 * new Date(+i[0] || +i[1]).getTimezoneOffset() * 1e3; const f = [Math.round(hw((i[0] - d) / u) * u + d), Math.round(cw((i[1] - d) / u) * u + d)]; mh(f, i), this._stepLvl = l, this._interval = u, this._niceExtent = f }, parse(t) { return +Co(t) }
  }); f(['contain', 'normalize'], function (t) { mw.prototype[t] = function (e) { return uw[t].call(this, this.parse(e)) } }); var yw = [['hh:mm:ss', dw], ['hh:mm:ss', 5 * dw], ['hh:mm:ss', 10 * dw], ['hh:mm:ss', 15 * dw], ['hh:mm:ss', 30 * dw], ['hh:mm\nMM-dd', fw], ['hh:mm\nMM-dd', 5 * fw], ['hh:mm\nMM-dd', 10 * fw], ['hh:mm\nMM-dd', 15 * fw], ['hh:mm\nMM-dd', 30 * fw], ['hh:mm\nMM-dd', pw], ['hh:mm\nMM-dd', 2 * pw], ['hh:mm\nMM-dd', 6 * pw], ['hh:mm\nMM-dd', 12 * pw], ['MM-dd\nyyyy', gw], ['MM-dd\nyyyy', 2 * gw], ['MM-dd\nyyyy', 3 * gw], ['MM-dd\nyyyy', 4 * gw], ['MM-dd\nyyyy', 5 * gw], ['MM-dd\nyyyy', 6 * gw], ['week', 7 * gw], ['MM-dd\nyyyy', 10 * gw], ['week', 14 * gw], ['week', 21 * gw], ['month', 31 * gw], ['week', 42 * gw], ['month', 62 * gw], ['week', 70 * gw], ['quarter', 95 * gw], ['month', 31 * gw * 4], ['month', 31 * gw * 5], ['half-year', 380 * gw / 2], ['month', 31 * gw * 8], ['month', 31 * gw * 10], ['year', 380 * gw]]; mw.create = function (t) { return new mw({useUTC: t.ecModel.get('useUTC')}) }; const _w = hh.prototype; const xw = rw.prototype; var ww = bo; var bw = _o; const Sw = Math.floor; const Mw = Math.ceil; const Iw = Math.pow; const Tw = Math.log; const Cw = hh.extend({
    type: 'log',
    base: 10,
    $constructor() {
      hh.apply(this, arguments), this._originalScale = new rw()
    },
    getTicks(t) { const e = this._originalScale; const n = this._extent; const i = e.getExtent(); return p(xw.getTicks.call(this, t), function (t) { let r = _o(Iw(this.base, t)); return r = t === n[0] && e.__fixMin ? Ah(r, i[0]) : r, r = t === n[1] && e.__fixMax ? Ah(r, i[1]) : r }, this) },
    getMinorTicks: xw.getMinorTicks,
    getLabel: xw.getLabel,
    scale(t) { return t = _w.scale.call(this, t), Iw(this.base, t) },
    setExtent(t, e) { const n = this.base; t = Tw(t) / Tw(n), e = Tw(e) / Tw(n), xw.setExtent.call(this, t, e) },
    getExtent() { const t = this.base; const e = _w.getExtent.call(this); e[0] = Iw(t, e[0]), e[1] = Iw(t, e[1]); const n = this._originalScale; const i = n.getExtent(); return n.__fixMin && (e[0] = Ah(e[0], i[0])), n.__fixMax && (e[1] = Ah(e[1], i[1])), e },
    unionExtent(t) { this._originalScale.unionExtent(t); const e = this.base; t[0] = Tw(t[0]) / Tw(e), t[1] = Tw(t[1]) / Tw(e), _w.unionExtent.call(this, t) },
    unionExtentFromData(t, e) { this.unionExtent(t.getApproximateExtent(e)) },
    niceTicks(t) { t = t || 10; const e = this._extent; const n = e[1] - e[0]; if (!(1 / 0 === n || n <= 0)) { let i = Do(n); const r = t / n * i; for (r <= 0.5 && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0;)i *= 10; const a = [_o(Mw(e[0] / i) * i), _o(Sw(e[1] / i) * i)]; this._interval = i, this._niceExtent = a } },
    niceExtent(t) { xw.niceExtent.call(this, t); const e = this._originalScale; e.__fixMin = t.fixMin, e.__fixMax = t.fixMax }
  }); f(['contain', 'normalize'], function (t) { Cw.prototype[t] = function (e) { return e = Tw(e) / Tw(this.base), _w[t].call(this, e) } }), Cw.create = function () { return new Cw() }; var Dw = {
    getMin(t) { const e = this.option; let n = t || e.rangeStart == null ? e.min : e.rangeStart; return this.axis && n != null && n !== 'dataMin' && typeof n !== 'function' && !C(n) && (n = this.axis.scale.parse(n)), n }, getMax(t) { const e = this.option; let n = t || e.rangeEnd == null ? e.max : e.rangeEnd; return this.axis && n != null && n !== 'dataMax' && typeof n !== 'function' && !C(n) && (n = this.axis.scale.parse(n)), n }, getNeedCrossZero() { const t = this.option; return t.rangeStart != null || t.rangeEnd != null ? !1 : !t.scale }, getCoordSysModel: V, setRange(t, e) { this.option.rangeStart = t, this.option.rangeEnd = e }, resetRange() { this.option.rangeStart = this.option.rangeEnd = null }
  }; const Aw = ca({
    type: 'triangle',
    shape: {
      cx: 0, cy: 0, width: 0, height: 0
    },
    buildPath(t, e) { const n = e.cx; const i = e.cy; const r = e.width / 2; const a = e.height / 2; t.moveTo(n, i - a), t.lineTo(n + r, i + a), t.lineTo(n - r, i + a), t.closePath() }
  }); const kw = ca({
    type: 'diamond',
    shape: {
      cx: 0, cy: 0, width: 0, height: 0
    },
    buildPath(t, e) { const n = e.cx; const i = e.cy; const r = e.width / 2; const a = e.height / 2; t.moveTo(n, i - a), t.lineTo(n + r, i), t.lineTo(n, i + a), t.lineTo(n - r, i), t.closePath() }
  }); const Pw = ca({
    type: 'pin',
    shape: {
      x: 0, y: 0, width: 0, height: 0
    },
    buildPath(t, e) { const n = e.x; const i = e.y; const r = e.width / 5 * 3; const a = Math.max(r, e.height); const o = r / 2; const s = o * o / (a - o); const l = i - a + o + s; const u = Math.asin(s / o); const h = Math.cos(u) * o; const c = Math.sin(u); const d = Math.cos(u); const f = 0.6 * o; const p = 0.7 * o; t.moveTo(n - h, l + s), t.arc(n, l, o, Math.PI - u, 2 * Math.PI + u), t.bezierCurveTo(n + h - c * f, l + s + d * f, n, i - p, n, i), t.bezierCurveTo(n, i - p, n - h + c * f, l + s + d * f, n - h, l + s), t.closePath() }
  }); const Lw = ca({
    type: 'arrow',
    shape: {
      x: 0, y: 0, width: 0, height: 0
    },
    buildPath(t, e) { const n = e.height; const i = e.width; const r = e.x; const a = e.y; const o = i / 3 * 2; t.moveTo(r, a), t.lineTo(r + o, a + n), t.lineTo(r, a + n / 4 * 3), t.lineTo(r - o, a + n), t.lineTo(r, a), t.closePath() }
  }); const Ow = {
    line: Am, rect: Cm, roundRect: Cm, square: Cm, circle: vm, diamond: kw, pin: Pw, arrow: Lw, triangle: Aw
  }; const Bw = {
    line(t, e, n, i, r) { r.x1 = t, r.y1 = e + i / 2, r.x2 = t + n, r.y2 = e + i / 2 }, rect(t, e, n, i, r) { r.x = t, r.y = e, r.width = n, r.height = i }, roundRect(t, e, n, i, r) { r.x = t, r.y = e, r.width = n, r.height = i, r.r = Math.min(n, i) / 4 }, square(t, e, n, i, r) { const a = Math.min(n, i); r.x = t, r.y = e, r.width = a, r.height = a }, circle(t, e, n, i, r) { r.cx = t + n / 2, r.cy = e + i / 2, r.r = Math.min(n, i) / 2 }, diamond(t, e, n, i, r) { r.cx = t + n / 2, r.cy = e + i / 2, r.width = n, r.height = i }, pin(t, e, n, i, r) { r.x = t + n / 2, r.y = e + i / 2, r.width = n, r.height = i }, arrow(t, e, n, i, r) { r.x = t + n / 2, r.y = e + i / 2, r.width = n, r.height = i }, triangle(t, e, n, i, r) { r.cx = t + n / 2, r.cy = e + i / 2, r.width = n, r.height = i }
  }; const Ew = {}; f(Ow, function (t, e) { Ew[e] = new t() }); var zw = ca({
    type: 'symbol',
    shape: {
      symbolType: '', x: 0, y: 0, width: 0, height: 0
    },
    calculateTextPosition(t, e, n) { const i = qn(t, e, n); const r = this.shape; return r && r.symbolType === 'pin' && e.textPosition === 'inside' && (i.y = n.y + 0.4 * n.height), i },
    buildPath(t, e, n) { let i = e.symbolType; if (i !== 'none') { let r = Ew[i]; r || (i = 'rect', r = Ew[i]), Bw[i](e.x, e.y, e.width, e.height, r.shape), r.buildPath(t, r.shape, n) } }
  }); const Rw = {isDimensionStacked: ah, enableDataStack: rh, getStackedDimension: oh}; const Nw = (Object.freeze || Object)({
    createList: Wh, getLayoutRect: Uo, dataStack: Rw, createScale: Xh, mixinAxisModelCommonMethods: Yh, completeDimensions: Qu, createDimensions: $x, createSymbol: Gh
  }); var Fw = 1e-8; jh.prototype = {
    constructor: jh, properties: null, getBoundingRect() { const t = this._rect; if (t) return t; for (var e = Number.MAX_VALUE, n = [e, e], i = [-e, -e], r = [], a = [], o = this.geometries, s = 0; s < o.length; s++) if (o[s].type === 'polygon') { const l = o[s].exterior; Lr(l, r, a), oe(n, n, r), se(i, i, a) } return s === 0 && (n[0] = n[1] = i[0] = i[1] = 0), this._rect = new Sn(n[0], n[1], i[0] - n[0], i[1] - n[1]) }, contain(t) { const e = this.getBoundingRect(); const n = this.geometries; if (!e.contain(t[0], t[1])) return !1; t:for (let i = 0, r = n.length; r > i; i++) if (n[i].type === 'polygon') { const a = n[i].exterior; const o = n[i].interiors; if (qh(a, t[0], t[1])) { for (let s = 0; s < (o ? o.length : 0); s++) if (qh(o[s])) continue t; return !0 } } return !1 }, transformTo(t, e, n, i) { let r = this.getBoundingRect(); const a = r.width / r.height; n ? i || (i = n / a) : n = a * i; for (var o = new Sn(t, e, n, i), s = r.calculateTransform(o), l = this.geometries, u = 0; u < l.length; u++) if (l[u].type === 'polygon') { for (var h = l[u].exterior, c = l[u].interiors, d = 0; d < h.length; d++)ae(h[d], h[d], s); for (let f = 0; f < (c ? c.length : 0); f++) for (var d = 0; d < c[f].length; d++)ae(c[f][d], c[f][d], s) }r = this._rect, r.copy(o), this.center = [r.x + r.width / 2, r.y + r.height / 2] }, cloneShallow(t) { t == null && (t = this.name); const e = new jh(t, this.geometries, this.center); return e._rect = this._rect, e.transformTo = null, e }
  }; const Vw = function (t) { return Zh(t), p(v(t.features, function (t) { return t.geometry && t.properties && t.geometry.coordinates.length > 0 }), function (t) { const e = t.properties; const n = t.geometry; const i = n.coordinates; const r = []; n.type === 'Polygon' && r.push({type: 'polygon', exterior: i[0], interiors: i.slice(1)}), n.type === 'MultiPolygon' && f(i, function (t) { t[0] && r.push({type: 'polygon', exterior: t[0], interiors: t.slice(1)}) }); const a = new jh(e.name, r, e.cp); return a.properties = e, a }) }; var Hw = ar(); const Gw = [0, 1]; const Ww = function (t, e, n) { this.dim = t, this.scale = e, this._extent = n || [0, 0], this.inverse = !1, this.onBand = !1 }; Ww.prototype = {
    constructor: Ww, contain(t) { const e = this._extent; const n = Math.min(e[0], e[1]); const i = Math.max(e[0], e[1]); return t >= n && i >= t }, containData(t) { return this.scale.contain(t) }, getExtent() { return this._extent.slice() }, getPixelPrecision(t) { return So(t || this.scale.getExtent(), this._extent) }, setExtent(t, e) { const n = this._extent; n[0] = t, n[1] = e }, dataToCoord(t, e) { let n = this._extent; const i = this.scale; return t = i.normalize(t), this.onBand && i.type === 'ordinal' && (n = n.slice(), cc(n, i.count())), mo(t, Gw, n, e) }, coordToData(t, e) { let n = this._extent; const i = this.scale; this.onBand && i.type === 'ordinal' && (n = n.slice(), cc(n, i.count())); const r = mo(t, n, Gw, e); return this.scale.scale(r) }, pointToData() {}, getTicksCoords(t) { t = t || {}; const e = t.tickModel || this.getTickModel(); const n = Qh(this, e); const i = n.ticks; const r = p(i, function (t) { return {coord: this.dataToCoord(t), tickValue: t} }, this); const a = e.get('alignWithLabel'); return dc(this, r, a, t.clamp), r }, getMinorTicksCoords() { if (this.scale.type === 'ordinal') return []; const t = this.model.getModel('minorTick'); let e = t.get('splitNumber'); e > 0 && e < 100 || (e = 5); const n = this.scale.getMinorTicks(e); const i = p(n, function (t) { return p(t, function (t) { return {coord: this.dataToCoord(t), tickValue: t} }, this) }, this); return i }, getViewLabels() { return $h(this).labels }, getLabelModel() { return this.model.getModel('axisLabel') }, getTickModel() { return this.model.getModel('axisTick') }, getBandWidth() { const t = this._extent; const e = this.scale.getExtent(); let n = e[1] - e[0] + (this.onBand ? 1 : 0); n === 0 && (n = 1); const i = Math.abs(t[1] - t[0]); return Math.abs(i) / n }, isHorizontal: null, getRotate: null, calculateCategoryInterval() { return sc(this) }
  }; const Xw = Vw; const Yw = {}; f(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (t) { Yw[t] = ep[t] }); const Uw = {}; f(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'registerShape', 'getShapeClass', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (t) { Uw[t] = Qm[t] }); var qw = function (t) { this._axes = {}, this._dimList = [], this.name = t || '' }; qw.prototype = {
    constructor: qw, type: 'cartesian', getAxis(t) { return this._axes[t] }, getAxes() { return p(this._dimList, fc, this) }, getAxesByScale(t) { return t = t.toLowerCase(), v(this.getAxes(), function (e) { return e.scale.type === t }) }, addAxis(t) { const e = t.dim; this._axes[e] = t, this._dimList.push(e) }, dataToCoord(t) { return this._dataCoordConvert(t, 'dataToCoord') }, coordToData(t) { return this._dataCoordConvert(t, 'coordToData') }, _dataCoordConvert(t, e) { for (var n = this._dimList, i = t instanceof Array ? [] : {}, r = 0; r < n.length; r++) { const a = n[r]; const o = this._axes[a]; i[a] = o[e](t[a]) } return i }
  }, pc.prototype = {
    constructor: pc, type: 'cartesian2d', dimensions: ['x', 'y'], getBaseAxis() { return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x') }, containPoint(t) { const e = this.getAxis('x'); const n = this.getAxis('y'); return e.contain(e.toLocalCoord(t[0])) && n.contain(n.toLocalCoord(t[1])) }, containData(t) { return this.getAxis('x').containData(t[0]) && this.getAxis('y').containData(t[1]) }, dataToPoint(t, e, n) { const i = this.getAxis('x'); const r = this.getAxis('y'); return n = n || [], n[0] = i.toGlobalCoord(i.dataToCoord(t[0])), n[1] = r.toGlobalCoord(r.dataToCoord(t[1])), n }, clampData(t, e) { const n = this.getAxis('x').scale; const i = this.getAxis('y').scale; const r = n.getExtent(); const a = i.getExtent(); const o = n.parse(t[0]); const s = i.parse(t[1]); return e = e || [], e[0] = Math.min(Math.max(Math.min(r[0], r[1]), o), Math.max(r[0], r[1])), e[1] = Math.min(Math.max(Math.min(a[0], a[1]), s), Math.max(a[0], a[1])), e }, pointToData(t, e) { const n = this.getAxis('x'); const i = this.getAxis('y'); return e = e || [], e[0] = n.coordToData(n.toLocalCoord(t[0])), e[1] = i.coordToData(i.toLocalCoord(t[1])), e }, getOtherAxis(t) { return this.getAxis(t.dim === 'x' ? 'y' : 'x') }, getArea() { const t = this.getAxis('x').getGlobalExtent(); const e = this.getAxis('y').getGlobalExtent(); const n = Math.min(t[0], t[1]); const i = Math.min(e[0], e[1]); const r = Math.max(t[0], t[1]) - n; const a = Math.max(e[0], e[1]) - i; const o = new Sn(n, i, r, a); return o }
  }, h(pc, qw); const jw = function (t, e, n, i, r) { Ww.call(this, t, e, n), this.type = i || 'value', this.position = r || 'bottom' }; jw.prototype = {
    constructor: jw, index: 0, getAxesOnZeroOf: null, model: null, isHorizontal() { const t = this.position; return t === 'top' || t === 'bottom' }, getGlobalExtent(t) { const e = this.getExtent(); return e[0] = this.toGlobalCoord(e[0]), e[1] = this.toGlobalCoord(e[1]), t && e[0] > e[1] && e.reverse(), e }, getOtherAxis() { this.grid.getOtherAxis() }, pointToData(t, e) { return this.coordToData(this.toLocalCoord(t[this.dim === 'x' ? 0 : 1]), e) }, toLocalCoord: null, toGlobalCoord: null
  }, h(jw, Ww); const Zw = {
    show: !0,
    zlevel: 0,
    z: 0,
    inverse: !1,
    name: '',
    nameLocation: 'end',
    nameRotate: null,
    nameTruncate: {maxWidth: null, ellipsis: '...', placeholder: '.'},
    nameTextStyle: {},
    nameGap: 15,
    silent: !1,
    triggerEvent: !1,
    tooltip: {show: !1},
    axisPointer: {},
    axisLine: {
      show: !0, onZero: !0, onZeroAxisIndex: null, lineStyle: {color: '#333', width: 1, type: 'solid'}, symbol: ['none', 'none'], symbolSize: [10, 15]
    },
    axisTick: {
      show: !0, inside: !1, length: 5, lineStyle: {width: 1}
    },
    axisLabel: {
      show: !0, inside: !1, rotate: 0, showMinLabel: null, showMaxLabel: null, margin: 8, fontSize: 12
    },
    splitLine: {show: !0, lineStyle: {color: ['#ccc'], width: 1, type: 'solid'}},
    splitArea: {show: !1, areaStyle: {color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']}}
  }; const Kw = {}; Kw.categoryAxis = r({
    boundaryGap: !0, deduplication: null, splitLine: {show: !1}, axisTick: {alignWithLabel: !1, interval: 'auto'}, axisLabel: {interval: 'auto'}
  }, Zw), Kw.valueAxis = r({
    boundaryGap: [0, 0],
    splitNumber: 5,
    minorTick: {
      show: !1, splitNumber: 5, length: 3, lineStyle: {}
    },
    minorSplitLine: {show: !1, lineStyle: {color: '#eee', width: 1}}
  }, Zw), Kw.timeAxis = s({scale: !0, min: 'dataMin', max: 'dataMax'}, Kw.valueAxis), Kw.logAxis = s({scale: !0, logBase: 10}, Kw.valueAxis); const $w = ['value', 'category', 'time', 'log']; const Qw = function (t, e, n, i) {
    f($w, function (o) {
      e.extend({
        type: `${t}Axis.${o}`, mergeDefaultAndTheme(e, i) { const a = this.layoutMode; const s = a ? jo(e) : {}; const l = i.getTheme(); r(e, l.get(`${o}Axis`)), r(e, this.getDefaultOption()), e.type = n(t, e), a && qo(e, s, a) }, optionUpdated() { const t = this.option; t.type === 'category' && (this.__ordinalMeta = ch.createByAxisModel(this)) }, getCategories(t) { const e = this.option; return e.type === 'category' ? t ? e.data : this.__ordinalMeta.categories : void 0 }, getOrdinalMeta() { return this.__ordinalMeta }, defaultOption: a([{}, Kw[`${o}Axis`], i], !0)
      })
    }), Sy.registerSubTypeDefaulter(`${t}Axis`, _(n, t))
  }; var Jw = Sy.extend({
    type: 'cartesian2dAxis', axis: null, init() { Jw.superApply(this, 'init', arguments), this.resetRange() }, mergeOption() { Jw.superApply(this, 'mergeOption', arguments), this.resetRange() }, restoreData() { Jw.superApply(this, 'restoreData', arguments), this.resetRange() }, getCoordSysModel() { return this.ecModel.queryComponents({mainType: 'grid', index: this.option.gridIndex, id: this.option.gridId})[0] }
  }); r(Jw.prototype, Dw); const tb = {offset: 0}; Qw('x', Jw, gc, tb), Qw('y', Jw, gc, tb), Sy.extend({
    type: 'grid',
    dependencies: ['xAxis', 'yAxis'],
    layoutMode: 'box',
    coordinateSystem: null,
    defaultOption: {
      show: !1, zlevel: 0, z: 0, left: '10%', top: 60, right: '10%', bottom: 60, containLabel: !1, backgroundColor: 'rgba(0,0,0,0)', borderWidth: 1, borderColor: '#ccc'
    }
  }); const eb = mc.prototype; eb.type = 'grid', eb.axisPointerEnabled = !0, eb.getRect = function () { return this._rect }, eb.update = function (t, e) { const n = this._axesMap; this._updateScale(t, this.model), f(n.x, function (t) { Lh(t.scale, t.model) }), f(n.y, function (t) { Lh(t.scale, t.model) }); const i = {}; f(n.x, function (t) { yc(n, 'y', t, i) }), f(n.y, function (t) { yc(n, 'x', t, i) }), this.resize(this.model, e) }, eb.resize = function (t, e, n) {
    function i() { f(a, function (t) { const e = t.isHorizontal(); const n = e ? [0, r.width] : [0, r.height]; const i = t.inverse ? 1 : 0; t.setExtent(n[i], n[1 - i]), xc(t, e ? r.x : r.y) }) } var r = Uo(t.getBoxLayoutParams(), {width: e.getWidth(), height: e.getHeight()}); this._rect = r; var a = this._axesList; i(), !n && t.get('containLabel') && (f(a, function (t) {
      if (!t.model.get('axisLabel.inside')) {
        const e = Rh(t); if (e) {
          const n = t.isHorizontal() ? 'height' : 'width'; const
            i = t.model.get('axisLabel.margin'); r[n] -= e[n] + i, t.position === 'top' ? r.y += e.height + i : t.position === 'left' && (r.x += e.width + i)
        }
      }
    }), i())
  }, eb.getAxis = function (t, e) { const n = this._axesMap[t]; if (n != null) { if (e == null) for (const i in n) if (n.hasOwnProperty(i)) return n[i]; return n[e] } }, eb.getAxes = function () { return this._axesList.slice() }, eb.getCartesian = function (t, e) { if (t != null && e != null) { const n = `x${t}y${e}`; return this._coordsMap[n] }S(t) && (e = t.yAxisIndex, t = t.xAxisIndex); for (let i = 0, r = this._coordsList; i < r.length; i++) if (r[i].getAxis('x').index === t || r[i].getAxis('y').index === e) return r[i] }, eb.getCartesians = function () { return this._coordsList.slice() }, eb.convertToPixel = function (t, e, n) { const i = this._findConvertTarget(t, e); return i.cartesian ? i.cartesian.dataToPoint(n) : i.axis ? i.axis.toGlobalCoord(i.axis.dataToCoord(n)) : null }, eb.convertFromPixel = function (t, e, n) { const i = this._findConvertTarget(t, e); return i.cartesian ? i.cartesian.pointToData(n) : i.axis ? i.axis.coordToData(i.axis.toLocalCoord(n)) : null }, eb._findConvertTarget = function (t, e) { let n; let i; const r = e.seriesModel; const a = e.xAxisModel || r && r.getReferringComponents('xAxis')[0]; const o = e.yAxisModel || r && r.getReferringComponents('yAxis')[0]; const s = e.gridModel; const l = this._coordsList; if (r)n = r.coordinateSystem, u(l, n) < 0 && (n = null); else if (a && o)n = this.getCartesian(a.componentIndex, o.componentIndex); else if (a)i = this.getAxis('x', a.componentIndex); else if (o)i = this.getAxis('y', o.componentIndex); else if (s) { const h = s.coordinateSystem; h === this && (n = this._coordsList[0]) } return {cartesian: n, axis: i} }, eb.containPoint = function (t) { const e = this._coordsList[0]; return e ? e.containPoint(t) : void 0 }, eb._initCartesian = function (t, e) {
    function n(n) { return function (o, s) { if (vc(o, t, e)) { let l = o.get('position'); n === 'x' ? l !== 'top' && l !== 'bottom' && (l = i.bottom ? 'top' : 'bottom') : l !== 'left' && l !== 'right' && (l = i.left ? 'right' : 'left'), i[l] = !0; const u = new jw(n, Oh(o), [0, 0], o.get('type'), l); const h = u.type === 'category'; u.onBand = h && o.get('boundaryGap'), u.inverse = o.get('inverse'), o.axis = u, u.model = o, u.grid = this, u.index = s, this._axesList.push(u), r[n][s] = u, a[n]++ } } } var i = {
      left: !1, right: !1, top: !1, bottom: !1
    }; var r = {x: {}, y: {}}; var a = {x: 0, y: 0}; return e.eachComponent('xAxis', n('x'), this), e.eachComponent('yAxis', n('y'), this), a.x && a.y ? (this._axesMap = r, void f(r.x, function (e, n) { f(r.y, function (i, r) { const a = `x${n}y${r}`; const o = new pc(a); o.grid = this, o.model = t, this._coordsMap[a] = o, this._coordsList.push(o), o.addAxis(e), o.addAxis(i) }, this) }, this)) : (this._axesMap = {}, void (this._axesList = []))
  }, eb._updateScale = function (t, e) { function n(t, e) { f(t.mapDimension(e.dim, !0), function (n) { e.scale.unionExtentFromData(t, oh(t, n)) }) }f(this._axesList, function (t) { t.scale.setExtent(1 / 0, -1 / 0) }), t.eachSeries(function (i) { if (bc(i)) { const r = wc(i, t); const a = r[0]; const o = r[1]; if (!vc(a, e, t) || !vc(o, e, t)) return; const s = this.getCartesian(a.componentIndex, o.componentIndex); const l = i.getData(); const u = s.getAxis('x'); const h = s.getAxis('y'); l.type === 'list' && (n(l, u, i), n(l, h, i)) } }, this) }, eb.getTooltipAxes = function (t) { const e = []; const n = []; return f(this.getCartesians(), function (i) { const r = t != null && t !== 'auto' ? i.getAxis(t) : i.getBaseAxis(); const a = i.getOtherAxis(r); u(e, r) < 0 && e.push(r), u(n, a) < 0 && n.push(a) }), {baseAxes: e, otherAxes: n} }; var nb = ['xAxis', 'yAxis']; mc.create = function (t, e) { const n = []; return t.eachComponent('grid', function (i, r) { const a = new mc(i, t, e); a.name = `grid_${r}`, a.resize(i, e, !0), i.coordinateSystem = a, n.push(a) }), t.eachSeries(function (e) { if (bc(e)) { const n = wc(e, t); const i = n[0]; const r = n[1]; const a = i.getCoordSysModel(); const o = a.coordinateSystem; e.coordinateSystem = o.getCartesian(i.componentIndex, r.componentIndex) } }), n }, mc.dimensions = mc.prototype.dimensions = pc.prototype.dimensions, xs.register('cartesian2d', mc); const ib = h_.extend({
    type: 'series.__base_bar__',
    getInitialData() { return sh(this.getSource(), this, {useEncodeDefaulter: !0}) },
    getMarkerPosition(t) { const e = this.coordinateSystem; if (e) { const n = e.dataToPoint(e.clampData(t)); const i = this.getData(); const r = i.getLayout('offset'); const a = i.getLayout('size'); const o = e.getBaseAxis().isHorizontal() ? 0 : 1; return n[o] += r + a / 2, n } return [0 / 0, 0 / 0] },
    defaultOption: {
      zlevel: 0, z: 2, coordinateSystem: 'cartesian2d', legendHoverLink: !0, barMinHeight: 0, barMinAngle: 0, large: !1, largeThreshold: 400, progressive: 3e3, progressiveChunkMode: 'mod', itemStyle: {}, emphasis: {}
    }
  }); ib.extend({
    type: 'series.bar', dependencies: ['grid', 'polar'], brushSelector: 'rect', getProgressive() { return this.get('large') ? this.get('progressive') : !1 }, getProgressiveThreshold() { let t = this.get('progressiveThreshold'); const e = this.get('largeThreshold'); return e > t && (t = e), t }, defaultOption: {clip: !0, roundCap: !1}
  }); const rb = lv([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]); const ab = {getBarItemStyle(t) { const e = rb(this, t); if (this.getBorderLineDash) { const n = this.getBorderLineDash(); n && (e.lineDash = n) } return e }}; const ob = ca({
    type: 'sausage',
    shape: {
      cx: 0, cy: 0, r0: 0, r: 0, startAngle: 0, endAngle: 2 * Math.PI, clockwise: !0
    },
    buildPath(t, e) { const n = e.cx; const i = e.cy; const r = Math.max(e.r0 || 0, 0); const a = Math.max(e.r, 0); const o = 0.5 * (a - r); const s = r + o; const l = e.startAngle; const u = e.endAngle; const h = e.clockwise; const c = Math.cos(l); const d = Math.sin(l); const f = Math.cos(u); const p = Math.sin(u); const g = h ? u - l < 2 * Math.PI : l - u < 2 * Math.PI; g && (t.moveTo(c * r + n, d * r + i), t.arc(c * s + n, d * s + i, o, -Math.PI + l, l, !h)), t.arc(n, i, a, l, u, !h), t.moveTo(f * a + n, p * a + i), t.arc(f * s + n, p * s + i, o, u - 2 * Math.PI, u - Math.PI, !h), r !== 0 && (t.arc(n, i, r, u, l, h), t.moveTo(c * r + n, p * r + i)), t.closePath() }
  }); var sb = ['itemStyle', 'barBorderWidth']; var lb = [0, 0]; o(uo.prototype, ab), Cu({
    type: 'bar',
    render(t, e, n) { this._updateDrawMode(t); const i = t.get('coordinateSystem'); return (i === 'cartesian2d' || i === 'polar') && (this._isLargeDraw ? this._renderLarge(t, e, n) : this._renderNormal(t, e, n)), this.group },
    incrementalPrepareRender(t) { this._clear(), this._updateDrawMode(t) },
    incrementalRender(t, e) { this._incrementalRenderLarge(t, e) },
    _updateDrawMode(t) { const e = t.pipelineContext.large; (this._isLargeDraw == null || e ^ this._isLargeDraw) && (this._isLargeDraw = e, this._clear()) },
    _renderNormal(t) {
      let e; const n = this.group; const i = t.getData(); const r = this._data; const a = t.coordinateSystem; const o = a.getBaseAxis(); a.type === 'cartesian2d' ? e = o.isHorizontal() : a.type === 'polar' && (e = o.dim === 'angle'); const s = t.isAnimationEnabled() ? t : null; const l = t.get('clip', !0); const u = Ac(a, i); n.removeClipPath(); const h = t.get('roundCap', !0); i.diff(r).add(function (r) { if (i.hasValue(r)) { const o = i.getItemModel(r); const c = fb[a.type](i, r, o); if (l) { const d = cb[a.type](u, c); if (d) return void n.remove(f) } var f = db[a.type](r, c, e, s, !1, h); i.setItemGraphicEl(r, f), n.add(f), Oc(f, i, r, o, c, t, e, a.type === 'polar') } }).update(function (o, c) { let d = r.getItemGraphicEl(c); if (!i.hasValue(o)) return void n.remove(d); const f = i.getItemModel(o); const p = fb[a.type](i, o, f); if (l) { const g = cb[a.type](u, p); if (g) return void n.remove(d) }d ? Ka(d, {shape: p}, s, o) : d = db[a.type](o, p, e, s, !0, h), i.setItemGraphicEl(o, d), n.add(d), Oc(d, i, o, f, p, t, e, a.type === 'polar') }).remove(function (t) { const e = r.getItemGraphicEl(t); a.type === 'cartesian2d' ? e && kc(t, s, e) : e && Pc(t, s, e) })
        .execute(), this._data = i
    },
    _renderLarge(t) { this._clear(), Ec(t, this.group); const e = t.get('clip', !0) ? Dc(t.coordinateSystem, !1, t) : null; e ? this.group.setClipPath(e) : this.group.removeClipPath() },
    _incrementalRenderLarge(t, e) { Ec(e, this.group, !0) },
    dispose: V,
    remove(t) { this._clear(t) },
    _clear(t) { const e = this.group; const n = this._data; t && t.get('animation') && n && !this._isLargeDraw ? n.eachItemGraphicEl(function (e) { e.type === 'sector' ? Pc(e.dataIndex, t, e) : kc(e.dataIndex, t, e) }) : e.removeAll(), this._data = null }
  }); const ub = Math.max; const hb = Math.min; var cb = {cartesian2d(t, e) { const n = e.width < 0 ? -1 : 1; const i = e.height < 0 ? -1 : 1; n < 0 && (e.x += e.width, e.width = -e.width), i < 0 && (e.y += e.height, e.height = -e.height); const r = ub(e.x, t.x); const a = hb(e.x + e.width, t.x + t.width); const o = ub(e.y, t.y); const s = hb(e.y + e.height, t.y + t.height); e.x = r, e.y = o, e.width = a - r, e.height = s - o; const l = e.width < 0 || e.height < 0; return n < 0 && (e.x += e.width, e.width = -e.width), i < 0 && (e.y += e.height, e.height = -e.height), l }, polar() { return !1 }}; var db = {cartesian2d(t, e, n, i, r) { const a = new Cm({shape: o({}, e)}); if (i) { const s = a.shape; const l = n ? 'height' : 'width'; const u = {}; s[l] = 0, u[l] = e[l], Qm[r ? 'updateProps' : 'initProps'](a, {shape: u}, i, t) } return a }, polar(t, e, n, i, r, a) { const o = e.startAngle < e.endAngle; const l = !n && a ? ob : _m; const u = new l({shape: s({clockwise: o}, e)}); if (i) { const h = u.shape; const c = n ? 'r' : 'endAngle'; const d = {}; h[c] = n ? 0 : e.startAngle, d[c] = e[c], Qm[r ? 'updateProps' : 'initProps'](u, {shape: d}, i, t) } return u }}; var fb = {
    cartesian2d(t, e, n) {
      const i = t.getItemLayout(e); const r = Bc(n, i); const a = i.width > 0 ? 1 : -1; const o = i.height > 0 ? 1 : -1; return {
        x: i.x + a * r / 2, y: i.y + o * r / 2, width: i.width - a * r, height: i.height - o * r
      }
    },
    polar(t, e) {
      const n = t.getItemLayout(e); return {
        cx: n.cx, cy: n.cy, r0: n.r0, r: n.r, startAngle: n.startAngle, endAngle: n.endAngle
      }
    }
  }; var pb = $r.extend({type: 'largeBar', shape: {points: []}, buildPath(t, e) { for (let n = e.points, i = this.__startPoint, r = this.__baseDimIdx, a = 0; a < n.length; a += 2)i[r] = n[a + r], t.moveTo(i[0], i[1]), t.lineTo(n[a], n[a + 1]) }}); var gb = cl(function (t) { const e = this; const n = zc(e, t.offsetX, t.offsetY); e.dataIndex = n >= 0 ? n : null }, 30, !1); var vb = Math.PI; var mb = function (t, e) {
    this.opt = e, this.axisModel = t, s(e, {
      labelOffset: 0, nameDirection: 1, tickDirection: 1, labelDirection: 1, silent: !0
    }), this.group = new tg(); const n = new tg({position: e.position.slice(), rotation: e.rotation}); n.updateTransform(), this._transform = n.transform, this._dumbGroup = n
  }; mb.prototype = {
    constructor: mb, hasBuilder(t) { return !!yb[t] }, add(t) { yb[t].call(this) }, getGroup() { return this.group }
  }; var yb = {
    axisLine() {
      const t = this.opt; const e = this.axisModel; if (e.get('axisLine.show')) {
        const n = this.axisModel.axis.getExtent(); const i = this._transform; const r = [n[0], 0]; const a = [n[1], 0]; i && (ae(r, r, i), ae(a, a, i)); const s = o({lineCap: 'round'}, e.getModel('axisLine.lineStyle').getLineStyle()); this.group.add(new Am({
          anid: 'line',
          subPixelOptimize: !0,
          shape: {
            x1: r[0], y1: r[1], x2: a[0], y2: a[1]
          },
          style: s,
          strokeContainThreshold: t.strokeContainThreshold || 5,
          silent: !0,
          z2: 1
        })); let l = e.get('axisLine.symbol'); let u = e.get('axisLine.symbolSize'); let h = e.get('axisLine.symbolOffset') || 0; if (typeof h === 'number' && (h = [h, h]), l != null) {
          typeof l === 'string' && (l = [l, l]), (typeof u === 'string' || typeof u === 'number') && (u = [u, u]); const c = u[0]; const d = u[1]; f([{rotate: t.rotation + Math.PI / 2, offset: h[0], r: 0}, {rotate: t.rotation - Math.PI / 2, offset: h[1], r: Math.sqrt((r[0] - a[0]) * (r[0] - a[0]) + (r[1] - a[1]) * (r[1] - a[1]))}], function (e, n) {
            if (l[n] !== 'none' && l[n] != null) {
              const i = Gh(l[n], -c / 2, -d / 2, c, d, s.stroke, !0); const a = e.r + e.offset; const o = [r[0] + a * Math.cos(t.rotation), r[1] - a * Math.sin(t.rotation)]; i.attr({
                rotation: e.rotate, position: o, silent: !0, z2: 11
              }), this.group.add(i)
            }
          }, this)
        }
      }
    },
    axisTickLabel() { const t = this.axisModel; const e = this.opt; const n = Xc(this, t, e); const i = Uc(this, t, e); Fc(t, i, n), Yc(this, t, e) },
    axisName() {
      const t = this.opt; const e = this.axisModel; const n = D(t.axisName, e.get('name')); if (n) {
        let i; const r = e.get('nameLocation'); const a = t.nameDirection; const s = e.getModel('nameTextStyle'); const l = e.get('nameGap') || 0; const u = this.axisModel.axis.getExtent(); const h = u[0] > u[1] ? -1 : 1; const c = [r === 'start' ? u[0] - h * l : r === 'end' ? u[1] + h * l : (u[0] + u[1]) / 2, Gc(r) ? t.labelOffset + a * l : 0]; let d = e.get('nameRotate'); d != null && (d = d * vb / 180); let f; Gc(r) ? i = xb(t.rotation, d != null ? d : t.rotation, a) : (i = Nc(t, r, d || 0, u), f = t.axisNameAvailableWidth, f != null && (f = Math.abs(f / Math.sin(i.rotation)), !isFinite(f) && (f = null))); const p = s.getFont(); const g = e.get('nameTruncate', !0) || {}; const v = g.ellipsis; const m = D(t.nameTruncateMaxWidth, g.maxWidth, f); const y = v != null && m != null ? gy(n, m, p, v, {minChar: 2, placeholder: g.placeholder}) : n; const _ = e.get('tooltip', !0); const x = e.mainType; const w = {componentType: x, name: n, $vars: ['name']}; w[`${x}Index`] = e.componentIndex; const b = new gm({
          anid: 'name', __fullText: n, __truncatedText: y, position: c, rotation: i.rotation, silent: wb(e), z2: 1, tooltip: _ && _.show ? o({content: n, formatter() { return n }, formatterParams: w}, _) : null
        }); Va(b.style, s, {
          text: y, textFont: p, textFill: s.getTextColor() || e.get('axisLine.lineStyle.color'), textAlign: s.get('align') || i.textAlign, textVerticalAlign: s.get('verticalAlign') || i.textVerticalAlign
        }), e.get('triggerEvent') && (b.eventData = _b(e), b.eventData.targetType = 'axisName', b.eventData.name = n), this._dumbGroup.add(b), b.updateTransform(), this.group.add(b), b.decomposeTransform()
      }
    }
  }; var _b = mb.makeAxisEventDataBase = function (t) { const e = {componentType: t.mainType, componentIndex: t.componentIndex}; return e[`${t.mainType}Index`] = t.componentIndex, e }; var xb = mb.innerTextLayout = function (t, e, n) { let i; let r; const a = Io(e - t); return To(a) ? (r = n > 0 ? 'top' : 'bottom', i = 'center') : To(a - vb) ? (r = n > 0 ? 'bottom' : 'top', i = 'center') : (r = 'middle', i = a > 0 && vb > a ? n > 0 ? 'right' : 'left' : n > 0 ? 'left' : 'right'), {rotation: a, textAlign: i, textVerticalAlign: r} }; var wb = mb.isLabelSilent = function (t) { const e = t.get('tooltip'); return t.get('silent') || !(t.get('triggerEvent') || e && e.show) }; var bb = f; var Sb = _; var Mb = Iu({
    type: 'axis', _axisPointer: null, axisPointerClass: null, render(t, e, n, i) { this.axisPointerClass && Jc(t), Mb.superApply(this, 'render', arguments), rd(this, t, e, n, i, !0) }, updateAxisPointer(t, e, n, i) { rd(this, t, e, n, i, !1) }, remove(t, e) { const n = this._axisPointer; n && n.remove(e), Mb.superApply(this, 'remove', arguments) }, dispose(t, e) { ad(this, e), Mb.superApply(this, 'dispose', arguments) }
  }); const Ib = []; Mb.registerAxisPointerClass = function (t, e) { Ib[t] = e }, Mb.getAxisPointerClass = function (t) { return t && Ib[t] }; const Tb = ['axisLine', 'axisTickLabel', 'axisName']; const Cb = ['splitArea', 'splitLine', 'minorSplitLine']; var Db = Mb.extend({
    type: 'cartesianAxis',
    axisPointerClass: 'CartesianAxisPointer',
    render(t, e, n, i) { this.group.removeAll(); const r = this._axisGroup; if (this._axisGroup = new tg(), this.group.add(this._axisGroup), t.get('show')) { const a = t.getCoordSysModel(); const o = od(a, t); const s = new mb(t, o); f(Tb, s.add, s), this._axisGroup.add(s.getGroup()), f(Cb, function (e) { t.get(`${e}.show`) && this[`_${e}`](t, a) }, this), eo(r, this._axisGroup, t), Db.superCall(this, 'render', t, e, n, i) } },
    remove() { this._splitAreaColors = null },
    _splitLine(t, e) {
      const n = t.axis; if (!n.scale.isBlank()) {
        const i = t.getModel('splitLine'); const r = i.getModel('lineStyle'); let a = r.get('color'); a = x(a) ? a : [a]; for (let o = e.coordinateSystem.getRect(), l = n.isHorizontal(), u = 0, h = n.getTicksCoords({tickModel: i}), c = [], d = [], f = r.getLineStyle(), p = 0; p < h.length; p++) {
          const g = n.toGlobalCoord(h[p].coord); l ? (c[0] = g, c[1] = o.y, d[0] = g, d[1] = o.y + o.height) : (c[0] = o.x, c[1] = g, d[0] = o.x + o.width, d[1] = g); const v = u++ % a.length; const m = h[p].tickValue; this._axisGroup.add(new Am({
            anid: m != null ? `line_${h[p].tickValue}` : null,
            subPixelOptimize: !0,
            shape: {
              x1: c[0], y1: c[1], x2: d[0], y2: d[1]
            },
            style: s({stroke: a[v]}, f),
            silent: !0
          }))
        }
      }
    },
    _minorSplitLine(t, e) {
      const n = t.axis; const i = t.getModel('minorSplitLine'); const r = i.getModel('lineStyle'); const a = e.coordinateSystem.getRect(); const o = n.isHorizontal(); const s = n.getMinorTicksCoords(); if (s.length) {
        for (let l = [], u = [], h = r.getLineStyle(), c = 0; c < s.length; c++) {
          for (let d = 0; d < s[c].length; d++) {
            const f = n.toGlobalCoord(s[c][d].coord); o ? (l[0] = f, l[1] = a.y, u[0] = f, u[1] = a.y + a.height) : (l[0] = a.x, l[1] = f, u[0] = a.x + a.width, u[1] = f), this._axisGroup.add(new Am({
              anid: `minor_line_${s[c][d].tickValue}`,
              subPixelOptimize: !0,
              shape: {
                x1: l[0], y1: l[1], x2: u[0], y2: u[1]
              },
              style: h,
              silent: !0
            }))
          }
        }
      }
    },
    _splitArea(t, e) {
      const n = t.axis; if (!n.scale.isBlank()) {
        const i = t.getModel('splitArea'); const r = i.getModel('areaStyle'); let a = r.get('color'); const o = e.coordinateSystem.getRect(); const l = n.getTicksCoords({tickModel: i, clamp: !0}); if (l.length) {
          const u = a.length; const h = this._splitAreaColors; const c = N(); let d = 0; if (h) for (var f = 0; f < l.length; f++) { const p = h.get(l[f].tickValue); if (p != null) { d = (p + (u - 1) * f) % u; break } } let g = n.toGlobalCoord(l[0].coord); const v = r.getAreaStyle(); a = x(a) ? a : [a]; for (var f = 1; f < l.length; f++) {
            var m; var y; var _; var w; const b = n.toGlobalCoord(l[f].coord); n.isHorizontal() ? (m = g, y = o.y, _ = b - m, w = o.height, g = m + _) : (m = o.x, y = g, _ = o.width, w = b - y, g = y + w); const S = l[f - 1].tickValue; S != null && c.set(S, d), this._axisGroup.add(new Cm({
              anid: S != null ? `area_${S}` : null,
              shape: {
                x: m, y, width: _, height: w
              },
              style: s({fill: a[d]}, v),
              silent: !0
            })), d = (d + 1) % u
          } this._splitAreaColors = c
        }
      }
    }
  }); Db.extend({type: 'xAxis'}), Db.extend({type: 'yAxis'}), Iu({
    type: 'grid',
    render(t) {
      this.group.removeAll(), t.get('show') && this.group.add(new Cm({
        shape: t.coordinateSystem.getRect(), style: s({fill: t.get('backgroundColor')}, t.getItemStyle()), silent: !0, z2: -1
      }))
    }
  }), pu(function (t) { t.xAxis && t.yAxis && !t.grid && (t.grid = {}) }), xu(px.VISUAL.LAYOUT, _(Ih, 'bar')), xu(px.VISUAL.PROGRESSIVE_LAYOUT, lw), wu({seriesType: 'bar', reset(t) { t.getData().setVisual('legendSymbol', 'roundRect') }}), h_.extend({
    type: 'series.line',
    dependencies: ['grid', 'polar'],
    getInitialData() { return sh(this.getSource(), this, {useEncodeDefaulter: !0}) },
    defaultOption: {
      zlevel: 0, z: 2, coordinateSystem: 'cartesian2d', legendHoverLink: !0, hoverAnimation: !0, clip: !0, label: {position: 'top'}, lineStyle: {width: 2, type: 'solid'}, step: !1, smooth: !1, smoothMonotone: null, symbol: 'emptyCircle', symbolSize: 4, symbolRotate: null, showSymbol: !0, showAllSymbol: 'auto', connectNulls: !1, sampling: 'none', animationEasing: 'linear', progressive: 0, hoverLayerThreshold: 1 / 0
    }
  }); const Ab = sd.prototype; const kb = sd.getSymbolSize = function (t, e) { const n = t.getItemVisual(e, 'symbolSize'); return n instanceof Array ? n.slice() : [+n, +n] }; Ab._createSymbol = function (t, e, n, i, r) { this.removeAll(); const a = e.getItemVisual(n, 'color'); const o = Gh(t, -1, -1, 2, 2, a, r); o.attr({z2: 100, culling: !0, scale: ld(i)}), o.drift = ud, this._symbolType = t, this.add(o) }, Ab.stopSymbolAnimation = function (t) { this.childAt(0).stopAnimation(t) }, Ab.getSymbolPath = function () { return this.childAt(0) }, Ab.getScale = function () { return this.childAt(0).scale }, Ab.highlight = function () { this.childAt(0).trigger('emphasis') }, Ab.downplay = function () { this.childAt(0).trigger('normal') }, Ab.setZ = function (t, e) { const n = this.childAt(0); n.zlevel = t, n.z = e }, Ab.setDraggable = function (t) { const e = this.childAt(0); e.draggable = t, e.cursor = t ? 'move' : e.cursor }, Ab.updateData = function (t, e, n) {
    this.silent = !1; const i = t.getItemVisual(e, 'symbol') || 'circle'; const r = t.hostModel; const a = kb(t, e); const o = i !== this._symbolType; if (o) { const s = t.getItemVisual(e, 'symbolKeepAspect'); this._createSymbol(i, t, e, a, s) } else {
      var l = this.childAt(0)
      l.silent = !1, Ka(l, {scale: ld(a)}, r, e)
    } if (this._updateCommon(t, e, a, n), o) { var l = this.childAt(0); const u = n && n.fadeIn; const h = {scale: l.scale.slice()}; u && (h.style = {opacity: l.style.opacity}), l.scale = [0, 0], u && (l.style.opacity = 0), $a(l, h, r, e) } this._seriesModel = r
  }; const Pb = ['itemStyle']; const Lb = ['emphasis', 'itemStyle']; const Ob = ['label']; const Bb = ['emphasis', 'label']; Ab._updateCommon = function (t, e, n, i) {
    function r(e) { return b ? t.getName(e) : Sc(t, e) } const a = this.childAt(0); const s = t.hostModel; const l = t.getItemVisual(e, 'color'); a.type !== 'image' ? a.useStyle({strokeNoScale: !0}) : a.setStyle({
      opacity: null, shadowBlur: null, shadowOffsetX: null, shadowOffsetY: null, shadowColor: null
    }); let u = i && i.itemStyle; let h = i && i.hoverItemStyle; let c = i && i.symbolRotate; let d = i && i.symbolOffset; let f = i && i.labelModel; let p = i && i.hoverLabelModel; let g = i && i.hoverAnimation; let v = i && i.cursorStyle; if (!i || t.hasItemOption) { const m = i && i.itemModel ? i.itemModel : t.getItemModel(e); u = m.getModel(Pb).getItemStyle(['color']), h = m.getModel(Lb).getItemStyle(), c = m.getShallow('symbolRotate'), d = m.getShallow('symbolOffset'), f = m.getModel(Ob), p = m.getModel(Bb), g = m.getShallow('hoverAnimation'), v = m.getShallow('cursor') } else h = o({}, h); const y = a.style; a.attr('rotation', (c || 0) * Math.PI / 180 || 0), d && a.attr('position', [yo(d[0], n[0]), yo(d[1], n[1])]), v && a.attr('cursor', v), a.setColor(l, i && i.symbolInnerColor), a.setStyle(u); const _ = t.getItemVisual(e, 'opacity'); _ != null && (y.opacity = _); const x = t.getItemVisual(e, 'liftZ'); const w = a.__z2Origin; x != null ? w == null && (a.__z2Origin = a.z2, a.z2 += x) : w != null && (a.z2 = w, a.__z2Origin = null); var b = i && i.useNameLabel; Na(y, h, f, p, {
      labelFetcher: s, labelDataIndex: e, defaultText: r, isRectText: !0, autoColor: l
    }), a.__symbolOriginalScale = ld(n), a.hoverStyle = h, a.highDownOnUpdate = g && s.isAnimationEnabled() ? hd : null, Ba(a)
  }, Ab.fadeOut = function (t, e) { const n = this.childAt(0); this.silent = n.silent = !0, !(e && e.keepLabel) && (n.style.text = null), Ka(n, {style: {opacity: 0}, scale: [0, 0]}, this._seriesModel, this.dataIndex, t) }, h(sd, tg); const Eb = cd.prototype; Eb.updateData = function (t, e) {
    e = fd(e); const n = this.group; const i = t.hostModel; const r = this._data; const a = this._symbolCtor; const o = pd(t); r || n.removeAll(), t.diff(r).add(function (i) { const r = t.getItemLayout(i); if (dd(t, r, i, e)) { const s = new a(t, i, o); s.attr('position', r), t.setItemGraphicEl(i, s), n.add(s) } }).update(function (s, l) { let u = r.getItemGraphicEl(l); const h = t.getItemLayout(s); return dd(t, h, s, e) ? (u ? (u.updateData(t, s, o), Ka(u, {position: h}, i)) : (u = new a(t, s), u.attr('position', h)), n.add(u), void t.setItemGraphicEl(s, u)) : void n.remove(u) }).remove(function (t) { const e = r.getItemGraphicEl(t); e && e.fadeOut(function () { n.remove(e) }) })
      .execute(), this._data = t
  }, Eb.isPersistent = function () { return !0 }, Eb.updateLayout = function () { const t = this._data; t && t.eachItemGraphicEl(function (e, n) { const i = t.getItemLayout(n); e.attr('position', i) }) }, Eb.incrementalPrepareUpdate = function (t) { this._seriesScope = pd(t), this._data = null, this.group.removeAll() }, Eb.incrementalUpdate = function (t, e, n) { function i(t) { t.isGroup || (t.incremental = t.useHoverLayer = !0) }n = fd(n); for (let r = t.start; r < t.end; r++) { const a = e.getItemLayout(r); if (dd(e, a, r, n)) { const o = new this._symbolCtor(e, r, this._seriesScope); o.traverse(i), o.attr('position', a), this.group.add(o), e.setItemGraphicEl(r, o) } } }, Eb.remove = function (t) { const e = this.group; const n = this._data; n && t ? n.eachItemGraphicEl(function (t) { t.fadeOut(function () { e.remove(t) }) }) : e.removeAll() }; const zb = function (t, e, n, i, r, a, o, s) {
    for (var l = yd(t, e), u = [], h = [], c = [], d = [], f = [], p = [], g = [], v = gd(r, e, o), m = gd(a, t, s), y = 0; y < l.length; y++) { const _ = l[y]; let x = !0; switch (_.cmd) { case '=': var w = t.getItemLayout(_.idx); var b = e.getItemLayout(_.idx1); (isNaN(w[0]) || isNaN(w[1])) && (w = b.slice()), u.push(w), h.push(b), c.push(n[_.idx]), d.push(i[_.idx1]), g.push(e.getRawIndex(_.idx1)); break; case '+': var S = _.idx; u.push(r.dataToPoint([e.get(v.dataDimsForPoint[0], S), e.get(v.dataDimsForPoint[1], S)])), h.push(e.getItemLayout(S).slice()), c.push(md(v, r, e, S)), d.push(i[S]), g.push(e.getRawIndex(S)); break; case '-': var S = _.idx; var M = t.getRawIndex(S); M !== S ? (u.push(t.getItemLayout(S)), h.push(a.dataToPoint([t.get(m.dataDimsForPoint[0], S), t.get(m.dataDimsForPoint[1], S)])), c.push(n[S]), d.push(md(m, a, t, S)), g.push(M)) : x = !1 }x && (f.push(_), p.push(p.length)) }p.sort(function (t, e) { return g[t] - g[e] }); for (var I = [], T = [], C = [], D = [], A = [], y = 0; y < p.length; y++) { var S = p[y]; I[y] = u[S], T[y] = h[S], C[y] = c[S], D[y] = d[S], A[y] = f[S] } return {
      current: I, next: T, stackedOnCurrent: C, stackedOnNext: D, status: A
    }
  }; var Rb = oe; var Nb = se; var Fb = U; var Vb = G; var Hb = []; var Gb = []; var Wb = []; const Xb = $r.extend({
    type: 'ec-polyline',
    shape: {
      points: [], smooth: 0, smoothConstraint: !0, smoothMonotone: null, connectNulls: !1
    },
    style: {fill: null, stroke: '#000'},
    brush: ym($r.prototype.brush),
    buildPath(t, e) { const n = e.points; let i = 0; let r = n.length; const a = Sd(n, e.smoothConstraint); if (e.connectNulls) { for (;r > 0 && _d(n[r - 1]); r--);for (;r > i && _d(n[i]); i++); } for (;r > i;)i += xd(t, n, i, r, r, 1, a.min, a.max, e.smooth, e.smoothMonotone, e.connectNulls) + 1 }
  }); const Yb = $r.extend({
    type: 'ec-polygon',
    shape: {
      points: [], stackedOnPoints: [], smooth: 0, stackedOnSmooth: 0, smoothConstraint: !0, smoothMonotone: null, connectNulls: !1
    },
    brush: ym($r.prototype.brush),
    buildPath(t, e) { const n = e.points; const i = e.stackedOnPoints; let r = 0; let a = n.length; const o = e.smoothMonotone; const s = Sd(n, e.smoothConstraint); const l = Sd(i, e.smoothConstraint); if (e.connectNulls) { for (;a > 0 && _d(n[a - 1]); a--);for (;a > r && _d(n[r]); r++); } for (;a > r;) { const u = xd(t, n, r, a, a, 1, s.min, s.max, e.smooth, o, e.connectNulls); xd(t, i, r + u - 1, u, a, -1, l.min, l.max, e.stackedOnSmooth, o, e.connectNulls), r += u + 1, t.closePath() } }
  }); ol.extend({
    type: 'line',
    init() {
      const t = new tg(); const
        e = new cd(); this.group.add(e.group), this._symbolDraw = e, this._lineGroup = t
    },
    render(t, e, n) {
      const i = t.coordinateSystem; const r = this.group; const a = t.getData(); const o = t.getModel('lineStyle'); const l = t.getModel('areaStyle'); let u = a.mapArray(a.getItemLayout); const h = i.type === 'polar'; const c = this._coordSys; const d = this._symbolDraw; let f = this._polyline; let p = this._polygon; const g = this._lineGroup; const v = t.get('animation'); const m = !l.isEmpty(); const y = l.get('origin'); const _ = gd(i, a, y); let x = Td(i, a, _); const w = t.get('showSymbol'); const b = w && !h && Ad(t, a, i); const S = this._data; S && S.eachItemGraphicEl(function (t, e) { t.__temp && (r.remove(t), S.setItemGraphicEl(e, null)) }), w || d.remove(), r.add(g); let M; const I = !h && t.get('step'); i && i.getArea && t.get('clip', !0) && (M = i.getArea(), M.width != null ? (M.x -= 0.1, M.y -= 0.1, M.width += 0.2, M.height += 0.2) : M.r0 && (M.r0 -= 0.5, M.r1 += 0.5)), this._clipShapeForSymbol = M, f && c.type === i.type && I === this._step ? (m && !p ? p = this._newPolygon(u, x, i, v) : p && !m && (g.remove(p), p = this._polygon = null), g.setClipPath(Pd(i, !1, t)), w && d.updateData(a, {isIgnore: b, clipShape: M}), a.eachItemGraphicEl(function (t) { t.stopAnimation(!0) }), Md(this._stackedOnPoints, x) && Md(this._points, u) || (v ? this._updateAnimation(a, x, i, n, I, y) : (I && (u = Cd(u, i, I), x = Cd(x, i, I)), f.setShape({points: u}), p && p.setShape({points: u, stackedOnPoints: x})))) : (w && d.updateData(a, {isIgnore: b, clipShape: M}), I && (u = Cd(u, i, I), x = Cd(x, i, I)), f = this._newPolyline(u, i, v), m && (p = this._newPolygon(u, x, i, v)), g.setClipPath(Pd(i, !0, t))); const T = Dd(a, i) || a.getVisual('color'); f.useStyle(s(o.getLineStyle(), {fill: 'none', stroke: T, lineJoin: 'bevel'})); let C = t.get('smooth'); if (C = Id(t.get('smooth')), f.setShape({smooth: C, smoothMonotone: t.get('smoothMonotone'), connectNulls: t.get('connectNulls')}), p) {
        const D = a.getCalculationInfo('stackedOnSeries'); let A = 0; p.useStyle(s(l.getAreaStyle(), {fill: T, opacity: 0.7, lineJoin: 'bevel'})), D && (A = Id(D.get('smooth'))), p.setShape({
          smooth: C, stackedOnSmooth: A, smoothMonotone: t.get('smoothMonotone'), connectNulls: t.get('connectNulls')
        })
      } this._data = a, this._coordSys = i, this._stackedOnPoints = x, this._points = u, this._step = I, this._valueOrigin = y
    },
    dispose() {},
    highlight(t, e, n, i) { const r = t.getData(); const a = rr(r, i); if (!(a instanceof Array) && a != null && a >= 0) { let o = r.getItemGraphicEl(a); if (!o) { const s = r.getItemLayout(a); if (!s) return; if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(s[0], s[1])) return; o = new sd(r, a), o.position = s, o.setZ(t.get('zlevel'), t.get('z')), o.ignore = isNaN(s[0]) || isNaN(s[1]), o.__temp = !0, r.setItemGraphicEl(a, o), o.stopSymbolAnimation(!0), this.group.add(o) }o.highlight() } else ol.prototype.highlight.call(this, t, e, n, i) },
    downplay(t, e, n, i) { const r = t.getData(); const a = rr(r, i); if (a != null && a >= 0) { const o = r.getItemGraphicEl(a); o && (o.__temp ? (r.setItemGraphicEl(a, null), this.group.remove(o)) : o.downplay()) } else ol.prototype.downplay.call(this, t, e, n, i) },
    _newPolyline(t) { let e = this._polyline; return e && this._lineGroup.remove(e), e = new Xb({shape: {points: t}, silent: !0, z2: 10}), this._lineGroup.add(e), this._polyline = e, e },
    _newPolygon(t, e) { let n = this._polygon; return n && this._lineGroup.remove(n), n = new Yb({shape: {points: t, stackedOnPoints: e}, silent: !0}), this._lineGroup.add(n), this._polygon = n, n },
    _updateAnimation(t, e, n, i, r, a) { const o = this._polyline; const s = this._polygon; const l = t.hostModel; const u = zb(this._data, t, this._stackedOnPoints, e, this._coordSys, n, this._valueOrigin, a); let h = u.current; let c = u.stackedOnCurrent; let d = u.next; let f = u.stackedOnNext; r && (h = Cd(u.current, n, r), c = Cd(u.stackedOnCurrent, n, r), d = Cd(u.next, n, r), f = Cd(u.stackedOnNext, n, r)), o.shape.__points = u.current, o.shape.points = h, Ka(o, {shape: {points: d}}, l), s && (s.setShape({points: h, stackedOnPoints: c}), Ka(s, {shape: {points: d, stackedOnPoints: f}}, l)); for (var p = [], g = u.status, v = 0; v < g.length; v++) { const m = g[v].cmd; if (m === '=') { const y = t.getItemGraphicEl(g[v].idx1); y && p.push({el: y, ptIdx: v}) } }o.animators && o.animators.length && o.animators[0].during(function () { for (let t = 0; t < p.length; t++) { const e = p[t].el; e.attr('position', o.shape.__points[p[t].ptIdx]) } }) },
    remove() { const t = this.group; const e = this._data; this._lineGroup.removeAll(), this._symbolDraw.remove(!0), e && e.eachItemGraphicEl(function (n, i) { n.__temp && (t.remove(n), e.setItemGraphicEl(i, null)) }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null }
  }); const Ub = function (t, e, n) {
    return {
      seriesType: t,
      performRawSeries: !0,
      reset(t, i) {
        function r(e, n) { if (c) { const i = t.getRawValue(n); const r = t.getDataParams(n); u && e.setItemVisual(n, 'symbol', o(i, r)), h && e.setItemVisual(n, 'symbolSize', s(i, r)) } if (e.hasItemOption) { const a = e.getItemModel(n); const l = a.getShallow('symbol', !0); const d = a.getShallow('symbolSize', !0); const f = a.getShallow('symbolKeepAspect', !0); l != null && e.setItemVisual(n, 'symbol', l), d != null && e.setItemVisual(n, 'symbolSize', d), f != null && e.setItemVisual(n, 'symbolKeepAspect', f) } } const a = t.getData(); var o = t.get('symbol'); var s = t.get('symbolSize'); const l = t.get('symbolKeepAspect'); var u = w(o); var h = w(s); var c = u || h; const d = !u && o ? o : e; const f = h ? null : s; return a.setVisual({
          legendSymbol: n || d, symbol: d, symbolSize: f, symbolKeepAspect: l
        }), i.isSeriesFiltered(t) ? void 0 : {dataEach: a.hasItemOption || c ? r : null}
      }
    }
  }; const qb = function (t) { return {seriesType: t, plan: f_(), reset(t) { function e(t, e) { for (var n = t.end - t.start, r = a && new Float32Array(n * s), l = t.start, u = 0, h = [], c = []; l < t.end; l++) { var d; if (s === 1) { var f = e.get(o[0], l); d = !isNaN(f) && i.dataToPoint(f, null, c) } else { var f = h[0] = e.get(o[0], l); const p = h[1] = e.get(o[1], l); d = !isNaN(f) && !isNaN(p) && i.dataToPoint(h, null, c) }a ? (r[u++] = d ? d[0] : 0 / 0, r[u++] = d ? d[1] : 0 / 0) : e.setItemLayout(l, d && d.slice() || [0 / 0, 0 / 0]) }a && e.setLayout('symbolPoints', r) } const n = t.getData(); var i = t.coordinateSystem; const r = t.pipelineContext; var a = r.large; if (i) { var o = p(i.dimensions, function (t) { return n.mapDimension(t) }).slice(0, 2); var s = o.length; const l = n.getCalculationInfo('stackResultDimension'); return ah(n, o[0]) && (o[0] = l), ah(n, o[1]) && (o[1] = l), s && {progress: e} } }} }; const jb = {
    average(t) { for (var e = 0, n = 0, i = 0; i < t.length; i++)isNaN(t[i]) || (e += t[i], n++); return n === 0 ? 0 / 0 : e / n }, sum(t) { for (var e = 0, n = 0; n < t.length; n++)e += t[n] || 0; return e }, max(t) { for (var e = -1 / 0, n = 0; n < t.length; n++)t[n] > e && (e = t[n]); return isFinite(e) ? e : 0 / 0 }, min(t) { for (var e = 1 / 0, n = 0; n < t.length; n++)t[n] < e && (e = t[n]); return isFinite(e) ? e : 0 / 0 }, nearest(t) { return t[0] }
  }; const Zb = function (t) { return Math.round(t.length / 2) }; const Kb = function (t) { return {seriesType: t, modifyOutputEnd: !0, reset(t) { const e = t.getData(); const n = t.get('sampling'); const i = t.coordinateSystem; if (i.type === 'cartesian2d' && n) { const r = i.getBaseAxis(); const a = i.getOtherAxis(r); const o = r.getExtent(); const s = o[1] - o[0]; const l = Math.round(e.count() / s); if (l > 1) { let u; typeof n === 'string' ? u = jb[n] : typeof n === 'function' && (u = n), u && t.setData(e.downSample(e.mapDimension(a.dim), 1 / l, u, Zb)) } } }} }; wu(Ub('line', 'circle', 'line')), xu(qb('line')), gu(px.PROCESSOR.STATISTIC, Kb('line')); const $b = function (t, e, n) { e = x(e) && {coordDimensions: e} || o({}, e); const i = t.getSource(); const r = $x(i, e); const a = new jx(r, t); return a.initData(i, n), a }; const Qb = {
    updateSelectedMap(t) { this._targetList = x(t) ? t.slice() : [], this._selectTargetMap = g(t || [], function (t, e) { return t.set(e.name, e), t }, N()) }, select(t, e) { const n = e != null ? this._targetList[e] : this._selectTargetMap.get(t); const i = this.get('selectedMode'); i === 'single' && this._selectTargetMap.each(function (t) { t.selected = !1 }), n && (n.selected = !0) }, unSelect(t, e) { const n = e != null ? this._targetList[e] : this._selectTargetMap.get(t); n && (n.selected = !1) }, toggleSelected(t, e) { const n = e != null ? this._targetList[e] : this._selectTargetMap.get(t); return n != null ? (this[n.selected ? 'unSelect' : 'select'](t, e), n.selected) : void 0 }, isSelected(t, e) { const n = e != null ? this._targetList[e] : this._selectTargetMap.get(t); return n && n.selected }
  }; var Jb = Tu({
    type: 'series.pie',
    init(t) { Jb.superApply(this, 'init', arguments), this.legendVisualProvider = new Ld(y(this.getData, this), y(this.getRawData, this)), this.updateSelectedMap(this._createSelectableList()), this._defaultLabelLine(t) },
    mergeOption(t) { Jb.superCall(this, 'mergeOption', t), this.updateSelectedMap(this._createSelectableList()) },
    getInitialData() { return $b(this, {coordDimensions: ['value'], encodeDefaulter: _(ls, this)}) },
    _createSelectableList() { for (var t = this.getRawData(), e = t.mapDimension('value'), n = [], i = 0, r = t.count(); r > i; i++)n.push({name: t.getName(i), value: t.get(e, i), selected: qs(t, i, 'selected')}); return n },
    getDataParams(t) { const e = this.getData(); const n = Jb.superCall(this, 'getDataParams', t); const i = []; return e.each(e.mapDimension('value'), function (t) { i.push(t) }), n.percent = Mo(i, t, e.hostModel.get('percentPrecision')), n.$vars.push('percent'), n },
    _defaultLabelLine(t) { $i(t, 'labelLine', ['show']); const e = t.labelLine; const n = t.emphasis.labelLine; e.show = e.show && t.label.show, n.show = n.show && t.emphasis.label.show },
    defaultOption: {
      zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      hoverAnimation: !0,
      center: ['50%', '50%'],
      radius: [0, '75%'],
      clockwise: !0,
      startAngle: 90,
      minAngle: 0,
      minShowLabelAngle: 0,
      selectedOffset: 10,
      hoverOffset: 10,
      avoidLabelOverlap: !0,
      percentPrecision: 2,
      stillShowZeroSum: !0,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        rotate: !1, show: !0, position: 'outer', alignTo: 'none', margin: '25%', bleedMargin: 10, distanceToLabelLine: 5
      },
      labelLine: {
        show: !0, length: 15, length2: 15, smooth: !1, lineStyle: {width: 1, type: 'solid'}
      },
      itemStyle: {borderWidth: 1},
      animationType: 'expansion',
      animationTypeUpdate: 'transition',
      animationEasing: 'cubicOut'
    }
  }); c(Jb, Qb); const tS = Ed.prototype; tS.updateData = function (t, e, n) { const i = this.childAt(0); const r = this.childAt(1); const a = this.childAt(2); const l = t.hostModel; const u = t.getItemModel(e); const h = t.getItemLayout(e); const c = o({}, h); c.label = null; const d = l.getShallow('animationTypeUpdate'); if (n) { i.setShape(c); const f = l.getShallow('animationType'); f === 'scale' ? (i.shape.r = h.r0, $a(i, {shape: {r: h.r}}, l, e)) : (i.shape.endAngle = h.startAngle, Ka(i, {shape: {endAngle: h.endAngle}}, l, e)) } else d === 'expansion' ? i.setShape(c) : Ka(i, {shape: c}, l, e); const p = t.getItemVisual(e, 'color'); i.useStyle(s({lineJoin: 'bevel', fill: p}, u.getModel('itemStyle').getItemStyle())), i.hoverStyle = u.getModel('emphasis.itemStyle').getItemStyle(); const g = u.getShallow('cursor'); g && i.attr('cursor', g), Bd(this, t.getItemLayout(e), l.isSelected(null, e), l.get('selectedOffset'), l.get('animation')); const v = !n && d === 'transition'; this._updateLabel(t, e, v), this.highDownOnUpdate = u.get('hoverAnimation') && l.isAnimationEnabled() ? function (t, e) { e === 'emphasis' ? (r.ignore = r.hoverIgnore, a.ignore = a.hoverIgnore, i.stopAnimation(!0), i.animateTo({shape: {r: h.r + l.get('hoverOffset')}}, 300, 'elasticOut')) : (r.ignore = r.normalIgnore, a.ignore = a.normalIgnore, i.stopAnimation(!0), i.animateTo({shape: {r: h.r}}, 300, 'elasticOut')) } : null, Ba(this) }, tS._updateLabel = function (t, e, n) {
    const i = this.childAt(1); const r = this.childAt(2); const a = t.hostModel; const o = t.getItemModel(e); const s = t.getItemLayout(e); const l = s.label; var u = t.getItemVisual(e, 'color'); if (!l || isNaN(l.x) || isNaN(l.y)) return void (r.ignore = r.normalIgnore = r.hoverIgnore = i.ignore = i.normalIgnore = i.hoverIgnore = !0); const h = {points: l.linePoints || [[l.x, l.y], [l.x, l.y], [l.x, l.y]]}; const c = {x: l.x, y: l.y}; n ? (Ka(i, {shape: h}, a, e), Ka(r, {style: c}, a, e)) : (i.attr({shape: h}), r.attr({style: c})), r.attr({rotation: l.rotation, origin: [l.x, l.y], z2: 10}); const d = o.getModel('label'); const f = o.getModel('emphasis.label'); const p = o.getModel('labelLine'); const g = o.getModel('emphasis.labelLine'); var u = t.getItemVisual(e, 'color'); Na(r.style, r.hoverStyle = {}, d, f, {
      labelFetcher: t.hostModel, labelDataIndex: e, defaultText: l.text, autoColor: u, useInsideStyle: !!l.inside
    }, {textAlign: l.textAlign, textVerticalAlign: l.verticalAlign, opacity: t.getItemVisual(e, 'opacity')}), r.ignore = r.normalIgnore = !d.get('show'), r.hoverIgnore = !f.get('show'), i.ignore = i.normalIgnore = !p.get('show'), i.hoverIgnore = !g.get('show'), i.setStyle({stroke: u, opacity: t.getItemVisual(e, 'opacity')}), i.setStyle(p.getModel('lineStyle').getLineStyle()), i.hoverStyle = g.getModel('lineStyle').getLineStyle(); let v = p.get('smooth'); v && v === !0 && (v = 0.4), i.setShape({smooth: v})
  }, h(Ed, tg); const eS = (ol.extend({
    type: 'pie',
    init() { const t = new tg(); this._sectorGroup = t },
    render(t, e, n, i) {
      if (!i || i.from !== this.uid) {
        const r = t.getData(); const a = this._data; const o = this.group; const s = e.get('animation'); const l = !a; const u = t.get('animationType'); const h = t.get('animationTypeUpdate'); const c = _(Od, this.uid, t, s, n); const d = t.get('selectedMode'); if (r.diff(a).add(function (t) { const e = new Ed(r, t); l && u !== 'scale' && e.eachChild(function (t) { t.stopAnimation(!0) }), d && e.on('click', c), r.setItemGraphicEl(t, e), o.add(e) }).update(function (t, e) { const n = a.getItemGraphicEl(e); l || h === 'transition' || n.eachChild(function (t) { t.stopAnimation(!0) }), n.updateData(r, t), n.off('click'), d && n.on('click', c), o.add(n), r.setItemGraphicEl(t, n) }).remove(function (t) { const e = a.getItemGraphicEl(t); o.remove(e) })
          .execute(), s && r.count() > 0 && (l ? u !== 'scale' : h !== 'transition')) { for (var f = r.getItemLayout(0), p = 1; isNaN(f.startAngle) && p < r.count(); ++p)f = r.getItemLayout(p); const g = Math.max(n.getWidth(), n.getHeight()) / 2; const v = y(o.removeClipPath, o); o.setClipPath(this._createClipPath(f.cx, f.cy, g, f.startAngle, f.clockwise, v, t, l)) } else o.removeClipPath(); this._data = r
      }
    },
    dispose() {},
    _createClipPath(t, e, n, i, r, a, o, s) {
      const l = new _m({
        shape: {
          cx: t, cy: e, r0: 0, r: n, startAngle: i, endAngle: i, clockwise: r
        }
      }); const u = s ? $a : Ka; return u(l, {shape: {endAngle: i + (r ? 1 : -1) * Math.PI * 2}}, o, a), l
    },
    containPoint(t, e) { const n = e.getData(); const i = n.getItemLayout(0); if (i) { const r = t[0] - i.cx; const a = t[1] - i.cy; const o = Math.sqrt(r * r + a * a); return o <= i.r && o >= i.r0 } }
  }), function (t, e) { f(e, function (e) { e.update = 'updateView', mu(e, function (n, i) { const r = {}; return i.eachComponent({mainType: 'series', subType: t, query: n}, function (t) { t[e.method] && t[e.method](n.name, n.dataIndex); const i = t.getData(); i.each(function (e) { const n = i.getName(e); r[n] = t.isSelected(n) || !1 }) }), {name: n.name, selected: r, seriesId: n.seriesId} }) }) }); const nS = function (t) { return {getTargetSeries(e) { const n = {}; const i = N(); return e.eachSeriesByType(t, function (t) { t.__paletteScope = n, i.set(t.uid, t) }), i }, reset(t) { const e = t.getRawData(); const n = {}; const i = t.getData(); i.each(function (t) { const e = i.getRawIndex(t); n[e] = t }), e.each(function (r) { let a; const o = n[r]; const s = o != null && i.getItemVisual(o, 'color', !0); const l = o != null && i.getItemVisual(o, 'borderColor', !0); if (s && l || (a = e.getItemModel(r)), !s) { const u = a.get('itemStyle.color') || t.getColorFromPalette(e.getName(r) || `${r}`, t.__paletteScope, e.count()); o != null && i.setItemVisual(o, 'color', u) } if (!l) { const h = a.get('itemStyle.borderColor'); o != null && i.setItemVisual(o, 'borderColor', h) } }) }} }; const iS = Math.PI / 180; const rS = function (t, e, n, i, r, a) {
    let o; let s; const l = t.getData(); const u = []; let h = !1; const c = (t.get('minShowLabelAngle') || 0) * iS; l.each(function (i) {
      const a = l.getItemLayout(i); const d = l.getItemModel(i); const f = d.getModel('label'); const p = f.get('position') || d.get('emphasis.label.position'); const g = f.get('distanceToLabelLine'); const v = f.get('alignTo'); const m = yo(f.get('margin'), n); const y = f.get('bleedMargin'); const _ = f.getFont(); const x = d.getModel('labelLine'); let w = x.get('length'); w = yo(w, n); let b = x.get('length2'); if (b = yo(b, n), !(a.angle < c)) {
        let S; let M; let I; let T; const C = (a.startAngle + a.endAngle) / 2; const D = Math.cos(C); const A = Math.sin(C); o = a.cx, s = a.cy; const k = t.getFormattedLabel(i, 'normal') || l.getName(i); const P = Gn(k, _, T, 'top'); const L = p === 'inside' || p === 'inner'; if (p === 'center')S = a.cx, M = a.cy, T = 'center'; else { const O = (L ? (a.r + a.r0) / 2 * D : a.r * D) + o; const B = (L ? (a.r + a.r0) / 2 * A : a.r * A) + s; if (S = O + 3 * D, M = B + 3 * A, !L) { const E = O + D * (w + e - a.r); const z = B + A * (w + e - a.r); const R = E + (D < 0 ? -1 : 1) * b; const N = z; S = v === 'edge' ? D < 0 ? r + m : r + n - m : R + (D < 0 ? -g : g), M = N, I = [[O, B], [E, z], [R, N]] }T = L ? 'center' : v === 'edge' ? D > 0 ? 'right' : 'left' : D > 0 ? 'left' : 'right' } let F; const V = f.get('rotate'); F = typeof V === 'number' ? V * (Math.PI / 180) : V ? D < 0 ? -C + Math.PI : -C : 0, h = !!F, a.label = {
          x: S, y: M, position: p, height: P.height, len: w, len2: b, linePoints: I, textAlign: T, verticalAlign: 'middle', rotation: F, inside: L, labelDistance: g, labelAlignTo: v, labelMargin: m, bleedMargin: y, textRect: P, text: k, font: _
        }, L || u.push(a.label)
      }
    }), !h && t.get('avoidLabelOverlap') && Rd(u, o, s, e, n, i, r, a)
  }; const aS = 2 * Math.PI; const oS = Math.PI / 180; const sS = function (t, e, n) {
    e.eachSeriesByType(t, function (t) {
      const e = t.getData(); const i = e.mapDimension('value'); const r = Fd(t, n); let a = t.get('center'); let o = t.get('radius'); x(o) || (o = [0, o]), x(a) || (a = [a, a]); const s = yo(r.width, n.getWidth()); const l = yo(r.height, n.getHeight()); const u = Math.min(s, l); const h = yo(a[0], s) + r.x; const c = yo(a[1], l) + r.y; const d = yo(o[0], u / 2); const f = yo(o[1], u / 2); const p = -t.get('startAngle') * oS; const g = t.get('minAngle') * oS; let v = 0; e.each(i, function (t) { !isNaN(t) && v++ }); const m = e.getSum(i); let y = Math.PI / (m || v) * 2; const _ = t.get('clockwise'); const w = t.get('roseType'); const b = t.get('stillShowZeroSum'); const S = e.getDataExtent(i); S[0] = 0; let M = aS; let I = 0; let T = p; const C = _ ? 1 : -1; if (e.each(i, function (t, n) {
        let i; if (isNaN(t)) {
          return void e.setItemLayout(n, {
            angle: 0 / 0, startAngle: 0 / 0, endAngle: 0 / 0, clockwise: _, cx: h, cy: c, r0: d, r: w ? 0 / 0 : f, viewRect: r
          })
        } i = w !== 'area' ? m === 0 && b ? y : t * y : aS / v, g > i ? (i = g, M -= g) : I += t; const a = T + C * i; e.setItemLayout(n, {
          angle: i, startAngle: T, endAngle: a, clockwise: _, cx: h, cy: c, r0: d, r: w ? mo(t, S, [d, f]) : f, viewRect: r
        }), T = a
      }), aS > M && v) if (M <= 0.001) { const D = aS / v; e.each(i, function (t, n) { if (!isNaN(t)) { const i = e.getItemLayout(n); i.angle = D, i.startAngle = p + C * n * D, i.endAngle = p + C * (n + 1) * D } }) } else y = M / I, T = p, e.each(i, function (t, n) { if (!isNaN(t)) { const i = e.getItemLayout(n); const r = i.angle === g ? g : t * y; i.startAngle = T, i.endAngle = T + C * r, T += C * r } }); rS(t, f, r.width, r.height, r.x, r.y)
    })
  }; const lS = function (t) { return {seriesType: t, reset(t, e) { const n = e.findComponents({mainType: 'legend'}); if (n && n.length) { const i = t.getData(); i.filterSelf(function (t) { for (let e = i.getName(t), r = 0; r < n.length; r++) if (!n[r].isSelected(e)) return !1; return !0 }) } }} }; eS('pie', [{type: 'pieToggleSelect', event: 'pieselectchanged', method: 'toggleSelected'}, {type: 'pieSelect', event: 'pieselected', method: 'select'}, {type: 'pieUnSelect', event: 'pieunselected', method: 'unSelect'}]), wu(nS('pie')), xu(_(sS, 'pie')), gu(lS('pie')), Mu({
    type: 'title',
    layoutMode: {type: 'box', ignoreSize: !0},
    defaultOption: {
      zlevel: 0, z: 6, show: !0, text: '', target: 'blank', subtext: '', subtarget: 'blank', left: 0, top: 0, backgroundColor: 'rgba(0,0,0,0)', borderColor: '#ccc', borderWidth: 0, padding: 5, itemGap: 10, textStyle: {fontSize: 18, fontWeight: 'bolder', color: '#333'}, subtextStyle: {color: '#aaa'}
    }
  }), Iu({
    type: 'title',
    render(t, e, n) {
      if (this.group.removeAll(), t.get('show')) {
        const i = this.group; const r = t.getModel('textStyle'); const a = t.getModel('subtextStyle'); let o = t.get('textAlign'); let s = A(t.get('textBaseline'), t.get('textVerticalAlign')); const l = new gm({style: Va({}, r, {text: t.get('text'), textFill: r.getTextColor()}, {disableBox: !0}), z2: 10}); const u = l.getBoundingRect(); const h = t.get('subtext'); const c = new gm({
          style: Va({}, a, {
            text: h, textFill: a.getTextColor(), y: u.height + t.get('itemGap'), textVerticalAlign: 'top'
          }, {disableBox: !0}),
          z2: 10
        }); const d = t.get('link'); const f = t.get('sublink'); const p = t.get('triggerEvent', !0); l.silent = !d && !p, c.silent = !f && !p, d && l.on('click', function () { window.open(d, `_${t.get('target')}`) }), f && c.on('click', function () { window.open(f, `_${t.get('subtarget')}`) }), l.eventData = c.eventData = p ? {componentType: 'title', componentIndex: t.componentIndex} : null, i.add(l), h && i.add(c); let g = i.getBoundingRect(); const v = t.getBoxLayoutParams(); v.width = g.width, v.height = g.height; const m = Uo(v, {width: n.getWidth(), height: n.getHeight()}, t.get('padding')); o || (o = t.get('left') || t.get('right'), o === 'middle' && (o = 'center'), o === 'right' ? m.x += m.width : o === 'center' && (m.x += m.width / 2)), s || (s = t.get('top') || t.get('bottom'), s === 'center' && (s = 'middle'), s === 'bottom' ? m.y += m.height : s === 'middle' && (m.y += m.height / 2), s = s || 'top'), i.attr('position', [m.x, m.y]); const y = {textAlign: o, textVerticalAlign: s}; l.setStyle(y), c.setStyle(y), g = i.getBoundingRect(); const _ = m.margin; const x = t.getItemStyle(['color', 'opacity']); x.fill = t.get('backgroundColor'); const w = new Cm({
          shape: {
            x: g.x - _[3], y: g.y - _[0], width: g.width + _[1] + _[3], height: g.height + _[0] + _[2], r: t.get('borderRadius')
          },
          style: x,
          subPixelOptimize: !0,
          silent: !0
        }); i.add(w)
      }
    }
  }); const uS = b_.legend.selector; const hS = {all: {type: 'all', title: i(uS.all)}, inverse: {type: 'inverse', title: i(uS.inverse)}}; var cS = Mu({
    type: 'legend.plain',
    dependencies: ['series'],
    layoutMode: {type: 'box', ignoreSize: !0},
    init(t, e, n) { this.mergeDefaultAndTheme(t, n), t.selected = t.selected || {}, this._updateSelector(t) },
    mergeOption(t) { cS.superCall(this, 'mergeOption', t), this._updateSelector(t) },
    _updateSelector(t) { let e = t.selector; e === !0 && (e = t.selector = ['all', 'inverse']), x(e) && f(e, function (t, n) { b(t) && (t = {type: t}), e[n] = r(t, hS[t.type]) }) },
    optionUpdated() { this._updateData(this.ecModel); const t = this._data; if (t[0] && this.get('selectedMode') === 'single') { for (var e = !1, n = 0; n < t.length; n++) { const i = t[n].get('name'); if (this.isSelected(i)) { this.select(i), e = !0; break } }!e && this.select(t[0].get('name')) } },
    _updateData(t) { let e = []; let n = []; t.eachRawSeries(function (i) { const r = i.name; n.push(r); let a; if (i.legendVisualProvider) { const o = i.legendVisualProvider; const s = o.getAllNames(); t.isSeriesFiltered(i) || (n = n.concat(s)), s.length ? e = e.concat(s) : a = !0 } else a = !0; a && nr(i) && e.push(i.name) }), this._availableNames = n; const i = this.get('data') || e; const r = p(i, function (t) { return (typeof t === 'string' || typeof t === 'number') && (t = {name: t}), new uo(t, this, this.ecModel) }, this); this._data = r },
    getData() { return this._data },
    select(t) { const e = this.option.selected; const n = this.get('selectedMode'); if (n === 'single') { const i = this._data; f(i, function (t) { e[t.get('name')] = !1 }) }e[t] = !0 },
    unSelect(t) { this.get('selectedMode') !== 'single' && (this.option.selected[t] = !1) },
    toggleSelected(t) { const e = this.option.selected; e.hasOwnProperty(t) || (e[t] = !0), this[e[t] ? 'unSelect' : 'select'](t) },
    allSelect() { const t = this._data; const e = this.option.selected; f(t, function (t) { e[t.get('name', !0)] = !0 }) },
    inverseSelect() { const t = this._data; const e = this.option.selected; f(t, function (t) { const n = t.get('name', !0); e.hasOwnProperty(n) || (e[n] = !0), e[n] = !e[n] }) },
    isSelected(t) { const e = this.option.selected; return !(e.hasOwnProperty(t) && !e[t]) && u(this._availableNames, t) >= 0 },
    getOrient() { return this.get('orient') === 'vertical' ? {index: 1, name: 'vertical'} : {index: 0, name: 'horizontal'} },
    defaultOption: {
      zlevel: 0,
      z: 4,
      show: !0,
      orient: 'horizontal',
      left: 'center',
      top: 0,
      align: 'auto',
      backgroundColor: 'rgba(0,0,0,0)',
      borderColor: '#ccc',
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      itemWidth: 25,
      itemHeight: 14,
      inactiveColor: '#ccc',
      inactiveBorderColor: '#ccc',
      itemStyle: {borderWidth: 0},
      textStyle: {color: '#333'},
      selectedMode: !0,
      selector: !1,
      selectorLabel: {
        show: !0, borderRadius: 10, padding: [3, 5, 3, 5], fontSize: 12, fontFamily: ' sans-serif', color: '#666', borderWidth: 1, borderColor: '#666'
      },
      emphasis: {selectorLabel: {show: !0, color: '#eee', backgroundColor: '#666'}},
      selectorPosition: 'auto',
      selectorItemGap: 7,
      selectorButtonGap: 10,
      tooltip: {show: !1}
    }
  }); mu('legendToggleSelect', 'legendselectchanged', _(Vd, 'toggleSelected')), mu('legendAllSelect', 'legendselectall', _(Vd, 'allSelect')), mu('legendInverseSelect', 'legendinverseselect', _(Vd, 'inverseSelect')), mu('legendSelect', 'legendselected', _(Vd, 'select')), mu('legendUnSelect', 'legendunselected', _(Vd, 'unSelect')); const dS = _; const fS = f; const pS = tg; const gS = Iu({
    type: 'legend.plain',
    newlineDisabled: !1,
    init() { this.group.add(this._contentGroup = new pS()), this._backgroundEl, this.group.add(this._selectorGroup = new pS()), this._isFirstRender = !0 },
    getContentGroup() { return this._contentGroup },
    getSelectorGroup() { return this._selectorGroup },
    render(t, e, n) { const i = this._isFirstRender; if (this._isFirstRender = !1, this.resetInner(), t.get('show', !0)) { let r = t.get('align'); const a = t.get('orient'); r && r !== 'auto' || (r = t.get('left') === 'right' && a === 'vertical' ? 'right' : 'left'); const o = t.get('selector', !0); let l = t.get('selectorPosition', !0); !o || l && l !== 'auto' || (l = a === 'horizontal' ? 'end' : 'start'), this.renderInner(r, t, e, n, o, a, l); const u = t.getBoxLayoutParams(); const h = {width: n.getWidth(), height: n.getHeight()}; const c = t.get('padding'); const d = Uo(u, h, c); const f = this.layoutInner(t, r, d, i, o, l); const p = Uo(s({width: f.width, height: f.height}, u), h, c); this.group.attr('position', [p.x - f.x, p.y - f.y]), this.group.add(this._backgroundEl = Hd(f, t)) } },
    resetInner() { this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll() },
    renderInner(t, e, n, i, r, a, o) { const s = this.getContentGroup(); const l = N(); const u = e.get('selectedMode'); const h = []; n.eachRawSeries(function (t) { !t.get('legendHoverLink') && h.push(t.id) }), fS(e.getData(), function (r, a) { const o = r.get('name'); if (!this.newlineDisabled && (o === '' || o === '\n')) return void s.add(new pS({newline: !0})); const c = n.getSeriesByName(o)[0]; if (!l.get(o)) if (c) { const d = c.getData(); let f = d.getVisual('color'); let p = d.getVisual('borderColor'); typeof f === 'function' && (f = f(c.getDataParams(0))), typeof p === 'function' && (p = p(c.getDataParams(0))); const g = d.getVisual('legendSymbol') || 'roundRect'; const v = d.getVisual('symbol'); const m = this._createItem(o, a, r, e, g, v, t, f, p, u); m.on('click', dS(Wd, o, null, i, h)).on('mouseover', dS(Xd, c.name, null, i, h)).on('mouseout', dS(Yd, c.name, null, i, h)), l.set(o, !0) } else n.eachRawSeries(function (n) { if (!l.get(o) && n.legendVisualProvider) { const s = n.legendVisualProvider; if (!s.containName(o)) return; const c = s.indexOfName(o); const d = s.getItemVisual(c, 'color'); const f = s.getItemVisual(c, 'borderColor'); const p = 'roundRect'; const g = this._createItem(o, a, r, e, p, null, t, d, f, u); g.on('click', dS(Wd, null, o, i, h)).on('mouseover', dS(Xd, null, o, i, h)).on('mouseout', dS(Yd, null, o, i, h)), l.set(o, !0) } }, this) }, this), r && this._createSelector(r, e, i, a, o) },
    _createSelector(t, e, n) {
      function i(t) {
        const i = t.type; const a = new gm({
          style: {
            x: 0, y: 0, align: 'center', verticalAlign: 'middle'
          },
          onclick() { n.dispatchAction({type: i === 'all' ? 'legendAllSelect' : 'legendInverseSelect'}) }
        }); r.add(a); const o = e.getModel('selectorLabel'); const s = e.getModel('emphasis.selectorLabel'); Na(a.style, a.hoverStyle = {}, o, s, {defaultText: t.title, isRectText: !1}), Ba(a)
      } var r = this.getSelectorGroup(); fS(t, function (t) { i(t) })
    },
    _createItem(t, e, n, i, r, a, s, l, u, h) {
      const c = i.get('itemWidth'); const d = i.get('itemHeight'); const f = i.get('inactiveColor'); const p = i.get('inactiveBorderColor'); const g = i.get('symbolKeepAspect'); const v = i.getModel('itemStyle'); const m = i.isSelected(t); const y = new pS(); const _ = n.getModel('textStyle'); const x = n.get('icon'); const w = n.getModel('tooltip'); const b = w.parentModel; r = x || r; const S = Gh(r, 0, 0, c, d, m ? l : f, g == null ? !0 : g); if (y.add(Gd(S, r, v, u, p, m)), !x && a && (a !== r || a === 'none')) { const M = 0.8 * d; a === 'none' && (a = 'circle'); const I = Gh(a, (c - M) / 2, (d - M) / 2, M, M, m ? l : f, g == null ? !0 : g); y.add(Gd(I, a, v, u, p, m)) } const T = s === 'left' ? c + 5 : -5; const C = s; const D = i.get('formatter'); let A = t; typeof D === 'string' && D ? A = D.replace('{name}', t != null ? t : '') : typeof D === 'function' && (A = D(t)), y.add(new gm({
        style: Va({}, _, {
          text: A, x: T, y: d / 2, textFill: m ? _.getTextColor() : f, textAlign: C, textVerticalAlign: 'middle'
        })
      })); const k = new Cm({
        shape: y.getBoundingRect(),
        invisible: !0,
        tooltip: w.get('show') ? o({
          content: t,
          formatter: b.get('formatter', !0) || function () { return t },
          formatterParams: {
            componentType: 'legend', legendIndex: i.componentIndex, name: t, $vars: ['name']
          }
        }, w.option) : null
      }); return y.add(k), y.eachChild(function (t) { t.silent = !0 }), k.silent = !h, this.getContentGroup().add(y), Ba(y), y.__legendDataIndex = e, y
    },
    layoutInner(t, e, n, i, r, a) { const o = this.getContentGroup(); const s = this.getSelectorGroup(); xy(t.get('orient'), o, t.get('itemGap'), n.width, n.height); const l = o.getBoundingRect(); const u = [-l.x, -l.y]; if (r) { xy('horizontal', s, t.get('selectorItemGap', !0)); const h = s.getBoundingRect(); const c = [-h.x, -h.y]; const d = t.get('selectorButtonGap', !0); const f = t.getOrient().index; const p = f === 0 ? 'width' : 'height'; const g = f === 0 ? 'height' : 'width'; const v = f === 0 ? 'y' : 'x'; a === 'end' ? c[f] += l[p] + d : u[f] += h[p] + d, c[1 - f] += l[g] / 2 - h[g] / 2, s.attr('position', c), o.attr('position', u); const m = {x: 0, y: 0}; return m[p] = l[p] + d + h[p], m[g] = Math.max(l[g], h[g]), m[v] = Math.min(0, h[v] + c[1 - f]), m } return o.attr('position', u), this.group.getBoundingRect() },
    remove() { this.getContentGroup().removeAll(), this._isFirstRender = !0 }
  }); const vS = function (t) {
    const e = t.findComponents({mainType: 'legend'})
    e && e.length && t.filterSeries(function (t) { for (let n = 0; n < e.length; n++) if (!e[n].isSelected(t.name)) return !1; return !0 })
  }; gu(px.PROCESSOR.SERIES_FILTER, vS), Sy.registerSubTypeDefaulter('legend', function () { return 'plain' }); var mS = cS.extend({
    type: 'legend.scroll',
    setScrollDataIndex(t) { this.option.scrollDataIndex = t },
    defaultOption: {
      scrollDataIndex: 0, pageButtonItemGap: 5, pageButtonGap: null, pageButtonPosition: 'end', pageFormatter: '{current}/{total}', pageIcons: {horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'], vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']}, pageIconColor: '#2f4554', pageIconInactiveColor: '#aaa', pageIconSize: 15, pageTextStyle: {color: '#333'}, animationDurationUpdate: 800
    },
    init(t, e, n, i) { const r = jo(t); mS.superCall(this, 'init', t, e, n, i), Ud(this, t, r) },
    mergeOption(t, e) { mS.superCall(this, 'mergeOption', t, e), Ud(this, this.option, t) }
  }); const yS = tg; const _S = ['width', 'height']; const xS = ['x', 'y']; var wS = gS.extend({
    type: 'legend.scroll',
    newlineDisabled: !0,
    init() { wS.superCall(this, 'init'), this._currentIndex = 0, this.group.add(this._containerGroup = new yS()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new yS()), this._showController },
    resetInner() { wS.superCall(this, 'resetInner'), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null },
    renderInner(t, e, n, i, r, a, o) {
      function s(t, n) {
        const r = `${t}DataIndex`; const a = ro(e.get('pageIcons', !0)[e.getOrient().name][n], {onclick: y(l._pageGo, l, r, e, i)}, {
          x: -h[0] / 2, y: -h[1] / 2, width: h[0], height: h[1]
        }); a.name = t, u.add(a)
      } var l = this; wS.superCall(this, 'renderInner', t, e, n, i, r, a, o); var u = this._controllerGroup; var h = e.get('pageIconSize', !0); x(h) || (h = [h, h]), s('pagePrev', 0); const c = e.getModel('pageTextStyle'); u.add(new gm({
        name: 'pageText',
        style: {
          textFill: c.getTextColor(), font: c.getFont(), textVerticalAlign: 'middle', textAlign: 'center'
        },
        silent: !0
      })), s('pageNext', 1)
    },
    layoutInner(t, e, n, r, a, o) { const s = this.getSelectorGroup(); const l = t.getOrient().index; const u = _S[l]; const h = xS[l]; const c = _S[1 - l]; const d = xS[1 - l]; a && xy('horizontal', s, t.get('selectorItemGap', !0)); const f = t.get('selectorButtonGap', !0); const p = s.getBoundingRect(); const g = [-p.x, -p.y]; const v = i(n); a && (v[u] = n[u] - p[u] - f); const m = this._layoutContentAndController(t, r, v, l, u, c, d); if (a) { if (o === 'end')g[l] += m[u] + f; else { const y = p[u] + f; g[l] -= y, m[h] -= y }m[u] += p[u] + f, g[1 - l] += m[d] + m[c] / 2 - p[c] / 2, m[c] = Math.max(m[c], p[c]), m[d] = Math.min(m[d], p[d] + g[1 - l]), s.attr('position', g) } return m },
    _layoutContentAndController(t, e, n, i, r, a, o) { const s = this.getContentGroup(); const l = this._containerGroup; const u = this._controllerGroup; xy(t.get('orient'), s, t.get('itemGap'), i ? n.width : null, i ? null : n.height), xy('horizontal', u, t.get('pageButtonItemGap', !0)); const h = s.getBoundingRect(); const c = u.getBoundingRect(); const d = this._showController = h[r] > n[r]; const f = [-h.x, -h.y]; e || (f[i] = s.position[i]); const p = [0, 0]; const g = [-c.x, -c.y]; const v = A(t.get('pageButtonGap', !0), t.get('itemGap', !0)); if (d) { const m = t.get('pageButtonPosition', !0); m === 'end' ? g[i] += n[r] - c[r] : p[i] += c[r] + v }g[1 - i] += h[a] / 2 - c[a] / 2, s.attr('position', f), l.attr('position', p), u.attr('position', g); const y = {x: 0, y: 0}; if (y[r] = d ? n[r] : h[r], y[a] = Math.max(h[a], c[a]), y[o] = Math.min(0, c[o] + g[1 - i]), l.__rectSize = n[r], d) { const _ = {x: 0, y: 0}; _[r] = Math.max(n[r] - c[r] - v, 0), _[a] = y[a], l.setClipPath(new Cm({shape: _})), l.__rectSize = _[r] } else u.eachChild(function (t) { t.attr({invisible: !0, silent: !0}) }); const x = this._getPageInfo(t); return x.pageIndex != null && Ka(s, {position: x.contentPosition}, d ? t : !1), this._updatePageInfoView(t, x), y },
    _pageGo(t, e, n) { const i = this._getPageInfo(e)[t]; i != null && n.dispatchAction({type: 'legendScroll', scrollDataIndex: i, legendId: e.id}) },
    _updatePageInfoView(t, e) { const n = this._controllerGroup; f(['pagePrev', 'pageNext'], function (i) { const r = e[`${i}DataIndex`] != null; const a = n.childOfName(i); a && (a.setStyle('fill', r ? t.get('pageIconColor', !0) : t.get('pageIconInactiveColor', !0)), a.cursor = r ? 'pointer' : 'default') }); const i = n.childOfName('pageText'); const r = t.get('pageFormatter'); const a = e.pageIndex; const o = a != null ? a + 1 : 0; const s = e.pageCount; i && r && i.setStyle('text', b(r) ? r.replace('{current}', o).replace('{total}', s) : r({current: o, total: s})) },
    _getPageInfo(t) {
      function e(t) { if (t) { const e = t.getBoundingRect(); const n = e[l] + t.position[o]; return {s: n, e: n + e[s], i: t.__legendDataIndex} } } function n(t, e) { return t.e >= e && t.s <= e + a } const i = t.get('scrollDataIndex', !0); const r = this.getContentGroup(); var a = this._containerGroup.__rectSize; var o = t.getOrient().index; var s = _S[o]; var l = xS[o]; const u = this._findTargetItemIndex(i); const h = r.children(); const c = h[u]; const d = h.length; const f = d ? 1 : 0; const p = {
        contentPosition: r.position.slice(), pageCount: f, pageIndex: f - 1, pagePrevDataIndex: null, pageNextDataIndex: null
      }; if (!c) return p; const g = e(c); p.contentPosition[o] = -g.s; for (var v = u + 1, m = g, y = g, _ = null; d >= v; ++v)_ = e(h[v]), (!_ && y.e > m.s + a || _ && !n(_, m.s)) && (m = y.i > m.i ? y : _, m && (p.pageNextDataIndex == null && (p.pageNextDataIndex = m.i), ++p.pageCount)), y = _; for (var v = u - 1, m = g, y = g, _ = null; v >= -1; --v)_ = e(h[v]), _ && n(y, _.s) || !(m.i < y.i) || (y = m, p.pagePrevDataIndex == null && (p.pagePrevDataIndex = m.i), ++p.pageCount, ++p.pageIndex), m = _; return p
    },
    _findTargetItemIndex(t) { let e; let n; const i = this.getContentGroup(); return this._showController && i.eachChild(function (i, r) { const a = i.__legendDataIndex; n == null && a != null && (n = r), a === t && (e = r) }), e != null ? e : n }
  }); mu('legendScroll', 'legendscroll', function (t, e) { const n = t.scrollDataIndex; n != null && e.eachComponent({mainType: 'legend', subType: 'scroll', query: t}, function (t) { t.setScrollDataIndex(n) }) }); const bS = function (t, e) { let n; let i = []; const r = t.seriesIndex; if (r == null || !(n = e.getSeriesByIndex(r))) return {point: []}; const a = n.getData(); const o = rr(a, t); if (o == null || o < 0 || x(o)) return {point: []}; const s = a.getItemGraphicEl(o); const l = n.coordinateSystem; if (n.getTooltipPosition)i = n.getTooltipPosition(o) || []; else if (l && l.dataToPoint)i = l.dataToPoint(a.getValues(p(l.dimensions, function (t) { return a.mapDimension(t) }), o, !0)) || []; else if (s) { const u = s.getBoundingRect().clone(); u.applyTransform(s.transform), i = [u.x + u.width / 2, u.y + u.height / 2] } return {point: i, el: s} }; var SS = f; const MS = _; var IS = ar(); const TS = function (t, e, n) { const i = t.currTrigger; let r = [t.x, t.y]; const a = t; const o = t.dispatchAction || y(n.dispatchAction, n); const s = e.getComponent('axisPointer').coordSysAxesInfo; if (s) { nf(r) && (r = bS({seriesIndex: a.seriesIndex, dataIndex: a.dataIndex}, e).point); const l = nf(r); const u = a.axesInfo; const h = s.axesInfo; const c = i === 'leave' || nf(r); const d = {}; const f = {}; const p = {list: [], map: {}}; const g = {showPointer: MS(Zd, f), showTooltip: MS(Kd, p)}; SS(s.coordSysMap, function (t, e) { const n = l || t.containPoint(r); SS(s.coordSysAxesInfo[e], function (t) { const e = t.axis; const i = tf(u, t); if (!c && n && (!u || i)) { let a = i && i.value; a != null || l || (a = e.pointToData(r)), a != null && qd(t, a, g, !1, d) } }) }); const v = {}; return SS(h, function (t, e) { const n = t.linkGroup; n && !f[e] && SS(n.axesInfo, function (e, i) { const r = f[i]; if (e !== t && r) { let a = r.value; n.mapper && (a = t.axis.scale.parse(n.mapper(a, ef(e), ef(t)))), v[t.key] = a } }) }), SS(v, function (t, e) { qd(h[e], t, g, !0, d) }), $d(f, h, d), Qd(p, r, t, o), Jd(h, o, n), d } }; var CS = (Mu({
    type: 'axisPointer',
    coordSysAxesInfo: null,
    defaultOption: {
      show: 'auto',
      triggerOn: null,
      zlevel: 0,
      z: 50,
      type: 'line',
      snap: !1,
      triggerTooltip: !0,
      value: null,
      status: null,
      link: [],
      animation: null,
      animationDurationUpdate: 200,
      lineStyle: {color: '#aaa', width: 1, type: 'solid'},
      shadowStyle: {color: 'rgba(150,150,150,0.3)'},
      label: {
        show: !0, formatter: null, precision: 'auto', margin: 3, color: '#fff', padding: [5, 7, 5, 7], backgroundColor: 'auto', borderColor: null, borderWidth: 0, shadowBlur: 3, shadowColor: '#aaa'
      },
      handle: {
        show: !1, icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z', size: 45, margin: 50, color: '#333', shadowBlur: 3, shadowColor: '#aaa', shadowOffsetX: 0, shadowOffsetY: 2, throttle: 40
      }
    }
  }), ar()); var DS = f; var AS = Iu({
    type: 'axisPointer',
    render(t, e, n) {
      const i = e.getComponent('tooltip'); const r = t.get('triggerOn') || i && i.get('triggerOn') || 'mousemove|click'; rf('axisPointer', n, function (t, e, n) {
        r !== 'none' && (t === 'leave' || r.indexOf(t) >= 0) && n({
          type: 'updateAxisPointer', currTrigger: t, x: e && e.offsetX, y: e && e.offsetY
        })
      })
    },
    remove(t, e) { hf(e.getZr(), 'axisPointer'), AS.superApply(this._model, 'remove', arguments) },
    dispose(t, e) { hf('axisPointer', e), AS.superApply(this._model, 'dispose', arguments) }
  }); var kS = ar(); const PS = i; const LS = y; cf.prototype = {
    _group: null,
    _lastGraphicKey: null,
    _handle: null,
    _dragging: !1,
    _lastValue: null,
    _lastStatus: null,
    _payloadInfo: null,
    animationThreshold: 15,
    render(t, e, n, i) { const r = e.get('value'); const a = e.get('status'); if (this._axisModel = t, this._axisPointerModel = e, this._api = n, i || this._lastValue !== r || this._lastStatus !== a) { this._lastValue = r, this._lastStatus = a; let o = this._group; const s = this._handle; if (!a || a === 'hide') return o && o.hide(), void (s && s.hide()); o && o.show(), s && s.show(); const l = {}; this.makeElOption(l, r, t, e, n); const u = l.graphicKey; u !== this._lastGraphicKey && this.clear(n), this._lastGraphicKey = u; const h = this._moveAnimation = this.determineAnimation(t, e); if (o) { const c = _(df, e, h); this.updatePointerEl(o, l, c, e), this.updateLabelEl(o, l, c, e) } else o = this._group = new tg(), this.createPointerEl(o, l, t, e), this.createLabelEl(o, l, t, e), n.getZr().add(o); vf(o, e, !0), this._renderHandle(r) } },
    remove(t) { this.clear(t) },
    dispose(t) { this.clear(t) },
    determineAnimation(t, e) { const n = e.get('animation'); const i = t.axis; const r = i.type === 'category'; const a = e.get('snap'); if (!a && !r) return !1; if (n === 'auto' || n == null) { const o = this.animationThreshold; if (r && i.getBandWidth() > o) return !0; if (a) { const s = td(t).seriesDataCount; const l = i.getExtent(); return Math.abs(l[0] - l[1]) / s > o } return !1 } return n === !0 },
    makeElOption() {},
    createPointerEl(t, e) { const n = e.pointer; if (n) { const i = kS(t).pointerEl = new Qm[n.type](PS(e.pointer)); t.add(i) } },
    createLabelEl(t, e, n, i) { if (e.label) { const r = kS(t).labelEl = new Cm(PS(e.label)); t.add(r), pf(r, i) } },
    updatePointerEl(t, e, n) { const i = kS(t).pointerEl; i && e.pointer && (i.setStyle(e.pointer.style), n(i, {shape: e.pointer.shape})) },
    updateLabelEl(t, e, n, i) { const r = kS(t).labelEl; r && (r.setStyle(e.label.style), n(r, {shape: e.label.shape, position: e.label.position}), pf(r, i)) },
    _renderHandle(t) {
      if (!this._dragging && this.updateHandleTransform) {
        const e = this._axisPointerModel; const n = this._api.getZr(); let i = this._handle; const r = e.getModel('handle'); const a = e.get('status'); if (!r.get('show') || !a || a === 'hide') return i && n.remove(i), void (this._handle = null); let o; this._handle || (o = !0, i = this._handle = ro(r.get('icon'), {
          cursor: 'move', draggable: !0, onmousemove(t) { gp(t.event) }, onmousedown: LS(this._onHandleDragMove, this, 0, 0), drift: LS(this._onHandleDragMove, this), ondragend: LS(this._onHandleDragEnd, this)
        }), n.add(i)), vf(i, e, !1); const s = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY']; i.setStyle(r.getItemStyle(null, s)); let l = r.get('size'); x(l) || (l = [l, l]), i.attr('scale', [l[0] / 2, l[1] / 2]), dl(this, '_doDispatchAxisPointer', r.get('throttle') || 0, 'fixRate'), this._moveHandleToValue(t, o)
      }
    },
    _moveHandleToValue(t, e) { df(this._axisPointerModel, !e && this._moveAnimation, this._handle, gf(this.getHandleTransform(t, this._axisModel, this._axisPointerModel))) },
    _onHandleDragMove(t, e) { const n = this._handle; if (n) { this._dragging = !0; const i = this.updateHandleTransform(gf(n), [t, e], this._axisModel, this._axisPointerModel); this._payloadInfo = i, n.stopAnimation(), n.attr(gf(i)), kS(n).lastProp = null, this._doDispatchAxisPointer() } },
    _doDispatchAxisPointer() {
      const t = this._handle; if (t) {
        const e = this._payloadInfo; const n = this._axisModel; this._api.dispatchAction({
          type: 'updateAxisPointer', x: e.cursorPoint[0], y: e.cursorPoint[1], tooltipOption: e.tooltipOption, axesInfo: [{axisDim: n.axis.dim, axisIndex: n.componentIndex}]
        })
      }
    },
    _onHandleDragEnd() { this._dragging = !1; const t = this._handle; if (t) { const e = this._axisPointerModel.get('value'); this._moveHandleToValue(e), this._api.dispatchAction({type: 'hideTip'}) } },
    getHandleTransform: null,
    updateHandleTransform: null,
    clear(t) { this._lastValue = null, this._lastStatus = null; const e = t.getZr(); const n = this._group; const i = this._handle; e && n && (this._lastGraphicKey = null, n && e.remove(n), i && e.remove(i), this._group = null, this._handle = null, this._payloadInfo = null) },
    doClear() {},
    buildLabel(t, e, n) {
      return n = n || 0, {
        x: t[n], y: t[1 - n], width: e[n], height: e[1 - n]
      }
    }
  }, cf.prototype.constructor = cf, fr(cf); const OS = cf.extend({
    makeElOption(t, e, n, i, r) { const a = n.axis; const o = a.grid; const s = i.get('type'); const l = If(o, a).getOtherAxis(a).getGlobalExtent(); const u = a.toGlobalCoord(a.dataToCoord(e, !0)); if (s && s !== 'none') { const h = mf(i); const c = BS[s](a, u, l); c.style = h, t.graphicKey = c.type, t.pointer = c } const d = od(o.model, n); bf(e, t, d, n, i, r) },
    getHandleTransform(t, e, n) { const i = od(e.axis.grid.model, e, {labelInside: !1}); return i.labelMargin = n.get('handle.margin'), {position: wf(e.axis, t, i), rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)} },
    updateHandleTransform(t, e, n) {
      const i = n.axis; const r = i.grid; const a = i.getGlobalExtent(!0); const o = If(r, i).getOtherAxis(i).getGlobalExtent(); const s = i.dim === 'x' ? 0 : 1; const l = t.position; l[s] += e[s], l[s] = Math.min(a[1], l[s]), l[s] = Math.max(a[0], l[s]); const u = (o[1] + o[0]) / 2; const h = [u, u]; h[s] = l[s]; const c = [{verticalAlign: 'middle'}, {align: 'center'}]; return {
        position: l, rotation: t.rotation, cursorPoint: h, tooltipOption: c[s]
      }
    }
  }); var BS = {line(t, e, n) { const i = Sf([e, n[0]], [e, n[1]], Tf(t)); return {type: 'Line', subPixelOptimize: !0, shape: i} }, shadow(t, e, n) { const i = Math.max(1, t.getBandWidth()); const r = n[1] - n[0]; return {type: 'Rect', shape: Mf([e - i / 2, n[0]], [i, r], Tf(t))} }}; Mb.registerAxisPointerClass('CartesianAxisPointer', OS), pu(function (t) { if (t) { (!t.axisPointer || t.axisPointer.length === 0) && (t.axisPointer = {}); const e = t.axisPointer.link; e && !x(e) && (t.axisPointer.link = [e]) } }), gu(px.PROCESSOR.STATISTIC, function (t, e) { t.getComponent('axisPointer').coordSysAxesInfo = qc(t, e) }), mu({type: 'updateAxisPointer', event: 'updateAxisPointer', update: ':updateAxisPointer'}, TS), Mu({
    type: 'tooltip',
    dependencies: ['axisPointer'],
    defaultOption: {
      zlevel: 0,
      z: 60,
      show: !0,
      showContent: !0,
      trigger: 'item',
      triggerOn: 'mousemove|click',
      alwaysShowContent: !1,
      displayMode: 'single',
      renderMode: 'auto',
      confine: !1,
      showDelay: 0,
      hideDelay: 100,
      transitionDuration: 0.4,
      enterable: !1,
      backgroundColor: 'rgba(50,50,50,0.7)',
      borderColor: '#333',
      borderRadius: 4,
      borderWidth: 0,
      padding: 5,
      extraCssText: '',
      axisPointer: {
        type: 'line',
        axis: 'auto',
        animation: 'auto',
        animationDurationUpdate: 200,
        animationEasingUpdate: 'exponentialOut',
        crossStyle: {
          color: '#999', width: 1, type: 'dashed', textStyle: {}
        }
      },
      textStyle: {color: '#fff', fontSize: 14}
    }
  }); var ES = f; var zS = Eo; var RS = ['', '-webkit-', '-moz-', '-o-']; const NS = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;'; kf.prototype = {
    constructor: kf, _enterable: !0, update() { const t = this._container; const e = t.currentStyle || document.defaultView.getComputedStyle(t); const n = t.style; n.position !== 'absolute' && e.position !== 'absolute' && (n.position = 'relative') }, show(t) { clearTimeout(this._hideTimeout); const e = this.el; e.style.cssText = `${NS + Af(t)};left:${this._x}px;top:${this._y}px;${t.get('extraCssText') || ''}`, e.style.display = e.innerHTML ? 'block' : 'none', e.style.pointerEvents = this._enterable ? 'auto' : 'none', this._show = !0 }, setContent(t) { this.el.innerHTML = t == null ? '' : t }, setEnterable(t) { this._enterable = t }, getSize() { const t = this.el; return [t.clientWidth, t.clientHeight] }, moveTo(t, e) { let n; const i = this._zr; i && i.painter && (n = i.painter.getViewportRootOffset()) && (t += n.offsetLeft, e += n.offsetTop); const r = this.el.style; r.left = `${t}px`, r.top = `${e}px`, this._x = t, this._y = e }, hide() { this.el.style.display = 'none', this._show = !1 }, hideLater(t) { !this._show || this._inContent && this._enterable || (t ? (this._hideDelay = t, this._show = !1, this._hideTimeout = setTimeout(y(this.hide, this), t)) : this.hide()) }, isShow() { return this._show }, getOuterSize() { let t = this.el.clientWidth; let e = this.el.clientHeight; if (document.defaultView && document.defaultView.getComputedStyle) { const n = document.defaultView.getComputedStyle(this.el); n && (t += parseInt(n.borderLeftWidth, 10) + parseInt(n.borderRightWidth, 10), e += parseInt(n.borderTopWidth, 10) + parseInt(n.borderBottomWidth, 10)) } return {width: t, height: e} }
  }, Pf.prototype = {
    constructor: Pf,
    _enterable: !0,
    update() {},
    show() { this._hideTimeout && clearTimeout(this._hideTimeout), this.el.attr('show', !0), this._show = !0 },
    setContent(t, e, n) {
      this.el && this._zr.remove(this.el); for (var i = {}, r = t, a = '{marker', o = '|}', s = r.indexOf(a); s >= 0;) {
        const l = r.indexOf(o); const u = r.substr(s + a.length, l - s - a.length); i[`marker${u}`] = u.indexOf('sub') > -1 ? {
          textWidth: 4, textHeight: 4, textBorderRadius: 2, textBackgroundColor: e[u], textOffset: [3, 0]
        } : {
          textWidth: 10, textHeight: 10, textBorderRadius: 5, textBackgroundColor: e[u]
        }, r = r.substr(l + 1), s = r.indexOf('{marker')
      } this.el = new gm({
        style: {
          rich: i, text: t, textLineHeight: 20, textBackgroundColor: n.get('backgroundColor'), textBorderRadius: n.get('borderRadius'), textFill: n.get('textStyle.color'), textPadding: n.get('padding')
        },
        z: n.get('z')
      }), this._zr.add(this.el); const h = this; this.el.on('mouseover', function () { h._enterable && (clearTimeout(h._hideTimeout), h._show = !0), h._inContent = !0 }), this.el.on('mouseout', function () { h._enterable && h._show && h.hideLater(h._hideDelay), h._inContent = !1 })
    },
    setEnterable(t) { this._enterable = t },
    getSize() { const t = this.el.getBoundingRect(); return [t.width, t.height] },
    moveTo(t, e) { this.el && this.el.attr('position', [t, e]) },
    hide() { this.el && this.el.hide(), this._show = !1 },
    hideLater(t) { !this._show || this._inContent && this._enterable || (t ? (this._hideDelay = t, this._show = !1, this._hideTimeout = setTimeout(y(this.hide, this), t)) : this.hide()) },
    isShow() { return this._show },
    getOuterSize() { const t = this.getSize(); return {width: t[0], height: t[1]} }
  }; const FS = y; const VS = f; const HS = yo; const GS = new Cm({
    shape: {
      x: -1, y: -1, width: 2, height: 2
    }
  }); Iu({
    type: 'tooltip',
    init(t, e) { if (!Hf.node) { const n = t.getComponent('tooltip'); const i = n.get('renderMode'); this._renderMode = hr(i); let r; this._renderMode === 'html' ? (r = new kf(e.getDom(), e), this._newLine = '<br/>') : (r = new Pf(e), this._newLine = '\n'), this._tooltipContent = r } },
    render(t, e, n) { if (!Hf.node) { this.group.removeAll(), this._tooltipModel = t, this._ecModel = e, this._api = n, this._lastDataByCoordSys = null, this._alwaysShowContent = t.get('alwaysShowContent'); const i = this._tooltipContent; i.update(), i.setEnterable(t.get('enterable')), this._initGlobalListener(), this._keepShow() } },
    _initGlobalListener() { const t = this._tooltipModel; const e = t.get('triggerOn'); rf('itemTooltip', this._api, FS(function (t, n, i) { e !== 'none' && (e.indexOf(t) >= 0 ? this._tryShow(n, i) : t === 'leave' && this._hide(i)) }, this)) },
    _keepShow() { const t = this._tooltipModel; const e = this._ecModel; const n = this._api; if (this._lastX != null && this._lastY != null && t.get('triggerOn') !== 'none') { const i = this; clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function () { !n.isDisposed() && i.manuallyShowTip(t, e, n, {x: i._lastX, y: i._lastY}) }) } },
    manuallyShowTip(t, e, n, i) {
      if (i.from !== this.uid && !Hf.node) {
        const r = Of(i, n); this._ticket = ''; const a = i.dataByCoordSys; if (i.tooltip && i.x != null && i.y != null) { const o = GS; o.position = [i.x, i.y], o.update(), o.tooltip = i.tooltip, this._tryShow({offsetX: i.x, offsetY: i.y, target: o}, r) } else if (a) {
          this._tryShow({
            offsetX: i.x, offsetY: i.y, position: i.position, event: {}, dataByCoordSys: i.dataByCoordSys, tooltipOption: i.tooltipOption
          }, r)
        } else if (i.seriesIndex != null) {
          if (this._manuallyAxisShowTip(t, e, n, i)) return; const s = bS(i, e); const l = s.point[0]; const u = s.point[1]; l != null && u != null && this._tryShow({
            offsetX: l, offsetY: u, position: i.position, target: s.el, event: {}
          }, r)
        } else {
          i.x != null && i.y != null && (n.dispatchAction({type: 'updateAxisPointer', x: i.x, y: i.y}), this._tryShow({
            offsetX: i.x, offsetY: i.y, position: i.position, target: n.getZr().findHover(i.x, i.y).target, event: {}
          }, r))
        }
      }
    },
    manuallyHideTip(t, e, n, i) { const r = this._tooltipContent; !this._alwaysShowContent && this._tooltipModel && r.hideLater(this._tooltipModel.get('hideDelay')), this._lastX = this._lastY = null, i.from !== this.uid && this._hide(Of(i, n)) },
    _manuallyAxisShowTip(t, e, n, i) {
      const r = i.seriesIndex; const a = i.dataIndex; const o = e.getComponent('axisPointer').coordSysAxesInfo; if (r != null && a != null && o != null) {
        const s = e.getSeriesByIndex(r); if (s) {
          const l = s.getData(); var t = Lf([l.getItemModel(a), s, (s.coordinateSystem || {}).model, t]); if (t.get('trigger') === 'axis') {
            return n.dispatchAction({
              type: 'updateAxisPointer', seriesIndex: r, dataIndex: a, position: i.position
            }), !0
          }
        }
      }
    },
    _tryShow(t, e) { const n = t.target; const i = this._tooltipModel; if (i) { this._lastX = t.offsetX, this._lastY = t.offsetY; const r = t.dataByCoordSys; r && r.length ? this._showAxisTooltip(r, t) : n && n.dataIndex != null ? (this._lastDataByCoordSys = null, this._showSeriesItemTooltip(t, n, e)) : n && n.tooltip ? (this._lastDataByCoordSys = null, this._showComponentItemTooltip(t, n, e)) : (this._lastDataByCoordSys = null, this._hide(e)) } },
    _showOrMove(t, e) { const n = t.get('showDelay'); e = y(e, this), clearTimeout(this._showTimout), n > 0 ? this._showTimout = setTimeout(e, n) : e() },
    _showAxisTooltip(t, e) { const n = this._ecModel; const i = this._tooltipModel; const a = [e.offsetX, e.offsetY]; let o = []; const s = []; const l = Lf([e.tooltipOption, i]); const u = this._renderMode; const h = this._newLine; const c = {}; VS(t, function (t) { VS(t.dataByAxis, function (t) { const e = n.getComponent(`${t.axisDim}Axis`, t.axisIndex); const i = t.value; const a = []; if (e && i != null) { const l = xf(i, e.axis, n, t.seriesDataIndices, t.valueLabelOpt); f(t.seriesDataIndices, function (o) { const h = n.getSeriesByIndex(o.seriesIndex); const d = o.dataIndexInside; const f = h && h.getDataParams(d); if (f.axisDim = t.axisDim, f.axisIndex = t.axisIndex, f.axisType = t.axisType, f.axisId = t.axisId, f.axisValue = zh(e.axis, i), f.axisValueLabel = l, f) { s.push(f); let p; const g = h.formatTooltip(d, !0, null, u); if (S(g)) { p = g.html; const v = g.markers; r(c, v) } else p = g; a.push(p) } }); const d = l; o.push(u !== 'html' ? a.join(h) : (d ? zo(d) + h : '') + a.join(h)) } }) }, this), o.reverse(), o = o.join(this._newLine + this._newLine); const d = e.position; this._showOrMove(l, function () { this._updateContentNotChangedOnAxis(t) ? this._updatePosition(l, d, a[0], a[1], this._tooltipContent, s) : this._showTooltipContent(l, o, s, Math.random(), a[0], a[1], d, void 0, c) }) },
    _showSeriesItemTooltip(t, e, n) {
      const i = this._ecModel; const r = e.seriesIndex; const a = i.getSeriesByIndex(r); const o = e.dataModel || a; const s = e.dataIndex; const l = e.dataType; const u = o.getData(); const h = Lf([u.getItemModel(s), o, a && (a.coordinateSystem || {}).model, this._tooltipModel]); const c = h.get('trigger'); if (c == null || c === 'item') {
        let d; let f; const p = o.getDataParams(s, l); const g = o.formatTooltip(s, !1, l, this._renderMode); S(g) ? (d = g.html, f = g.markers) : (d = g, f = null); const v = `item_${o.name}_${s}`; this._showOrMove(h, function () { this._showTooltipContent(h, d, p, v, t.offsetX, t.offsetY, t.position, t.target, f) }), n({
          type: 'showTip', dataIndexInside: s, dataIndex: u.getRawIndex(s), seriesIndex: r, from: this.uid
        })
      }
    },
    _showComponentItemTooltip(t, e, n) { let i = e.tooltip; if (typeof i === 'string') { const r = i; i = {content: r, formatter: r} } const a = new uo(i, this._tooltipModel, this._ecModel); const o = a.get('content'); const s = Math.random(); this._showOrMove(a, function () { this._showTooltipContent(a, o, a.get('formatterParams') || {}, s, t.offsetX, t.offsetY, t.position, e) }), n({type: 'showTip', from: this.uid}) },
    _showTooltipContent(t, e, n, i, r, a, o, s, l) { if (this._ticket = '', t.get('showContent') && t.get('show')) { const u = this._tooltipContent; const h = t.get('formatter'); o = o || t.get('position'); let c = e; if (h && typeof h === 'string')c = Ro(h, n, !0); else if (typeof h === 'function') { const d = FS(function (e, i) { e === this._ticket && (u.setContent(i, l, t), this._updatePosition(t, o, r, a, u, n, s)) }, this); this._ticket = i, c = h(n, i, d) }u.setContent(c, l, t), u.show(t), this._updatePosition(t, o, r, a, u, n, s) } },
    _updatePosition(t, e, n, i, r, a, o) { const s = this._api.getWidth(); const l = this._api.getHeight(); e = e || t.get('position'); const u = r.getSize(); let h = t.get('align'); let c = t.get('verticalAlign'); const d = o && o.getBoundingRect().clone(); if (o && d.applyTransform(o.transform), typeof e === 'function' && (e = e([n, i], a, r.el, d, {viewSize: [s, l], contentSize: u.slice()})), x(e))n = HS(e[0], s), i = HS(e[1], l); else if (S(e)) { e.width = u[0], e.height = u[1]; const f = Uo(e, {width: s, height: l}); n = f.x, i = f.y, h = null, c = null } else if (typeof e === 'string' && o) { var p = zf(e, d, u); n = p[0], i = p[1] } else { var p = Bf(n, i, r, s, l, h ? null : 20, c ? null : 20); n = p[0], i = p[1] } if (h && (n -= Rf(h) ? u[0] / 2 : h === 'right' ? u[0] : 0), c && (i -= Rf(c) ? u[1] / 2 : c === 'bottom' ? u[1] : 0), t.get('confine')) { var p = Ef(n, i, r, s, l); n = p[0], i = p[1] }r.moveTo(n, i) },
    _updateContentNotChangedOnAxis(t) { const e = this._lastDataByCoordSys; let n = !!e && e.length === t.length; return n && VS(e, function (e, i) { const r = e.dataByAxis || {}; const a = t[i] || {}; const o = a.dataByAxis || []; n &= r.length === o.length, n && VS(r, function (t, e) { const i = o[e] || {}; const r = t.seriesDataIndices || []; const a = i.seriesDataIndices || []; n &= t.value === i.value && t.axisType === i.axisType && t.axisId === i.axisId && r.length === a.length, n && VS(r, function (t, e) { const i = a[e]; n &= t.seriesIndex === i.seriesIndex && t.dataIndex === i.dataIndex }) }) }), this._lastDataByCoordSys = t, !!n },
    _hide(t) { this._lastDataByCoordSys = null, t({type: 'hideTip', from: this.uid}) },
    dispose(t, e) { Hf.node || (this._tooltipContent.hide(), hf('itemTooltip', e)) }
  }), mu({type: 'showTip', event: 'showTip', update: 'tooltip:manuallyShowTip'}, function () {}), mu({type: 'hideTip', event: 'hideTip', update: 'tooltip:manuallyHideTip'}, function () {}), t.version = tx, t.dependencies = ex, t.PRIORITY = px, t.init = su, t.connect = lu, t.disConnect = uu, t.disconnect = Ex, t.dispose = hu, t.getInstanceByDom = cu, t.getInstanceById = du, t.registerTheme = fu, t.registerPreprocessor = pu, t.registerProcessor = gu, t.registerPostUpdate = vu, t.registerAction = mu, t.registerCoordinateSystem = yu, t.getCoordinateSystemDimensions = _u, t.registerLayout = xu, t.registerVisual = wu, t.registerLoading = Su, t.extendComponentModel = Mu, t.extendComponentView = Iu, t.extendSeriesModel = Tu, t.extendChartView = Cu, t.setCanvasCreator = Du, t.registerMap = Au, t.getMap = ku, t.dataTool = zx, t.zrender = Qg, t.number = uy, t.format = vy, t.throttle = cl, t.helper = Nw, t.matrix = bp, t.vector = sp, t.color = Hp, t.parseGeoJSON = Vw, t.parseGeoJson = Xw, t.util = Yw, t.graphic = Uw, t.List = jx, t.Model = uo, t.Axis = Ww, t.env = Hf
}))
